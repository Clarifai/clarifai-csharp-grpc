// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: proto/clarifai/auth/scope/scope.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Clarifai.Auth.Scope {

  /// <summary>Holder for reflection information generated from proto/clarifai/auth/scope/scope.proto</summary>
  public static partial class ScopeReflection {

    #region Descriptor
    /// <summary>File descriptor for proto/clarifai/auth/scope/scope.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ScopeReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiVwcm90by9jbGFyaWZhaS9hdXRoL3Njb3BlL3Njb3BlLnByb3RvEhNjbGFy",
            "aWZhaS5hdXRoLnNjb3BlGiBnb29nbGUvcHJvdG9idWYvZGVzY3JpcHRvci5w",
            "cm90byJGCglTY29wZUxpc3QSJgoGc2NvcGVzGAEgAygOMhYuY2xhcmlmYWku",
            "YXV0aC5zY29wZS5TEhEKCWVuZHBvaW50cxgCIAMoCSqoDwoBUxIJCgV1bmRl",
            "ZhAAEg0KA0FsbBABGgTwmycBEhEKB1ByZWRpY3QQAhoE8JsnARIYCgpJbnB1",
            "dHNfQWRkEAQaCPCbJwH4mycFEhQKCklucHV0c19HZXQQBRoE8JsnARIgCgxJ",
            "bnB1dHNfUGF0Y2gQBxoOCAHwmycB+JsnBPibJwUSHwoNSW5wdXRzX0RlbGV0",
            "ZRAIGgzwmycB+JsnBPibJwUSHQoNT3V0cHV0c19QYXRjaBAJGgoIAfibJwX4",
            "mycCEhoKDENvbmNlcHRzX0FkZBAKGgjwmycB+JsnCxIWCgxDb25jZXB0c19H",
            "ZXQQCxoE8JsnARIiCg5Db25jZXB0c19QYXRjaBAMGg4IAfCbJwH4mycK+Jsn",
            "CxIdCg9Db25jZXB0c19EZWxldGUQDRoI+JsnCvibJwsSGAoKTW9kZWxzX0Fk",
            "ZBAOGgjwmycB+JsnDxIUCgpNb2RlbHNfR2V0EA8aBPCbJwESJAoMTW9kZWxz",
            "X1BhdGNoEBAaEggB8JsnAfibJw74mycP+JsnGhIfCg1Nb2RlbHNfRGVsZXRl",
            "EBEaDPCbJwH4mycO+JsnDxIaCgxNb2RlbHNfVHJhaW4QGhoI8JsnAfibJw8S",
            "FQoLTW9kZWxzX1N5bmMQGxoE+JsnDxIbCg1Xb3JrZmxvd3NfQWRkEBIaCPCb",
            "JwH4mycTEhcKDVdvcmtmbG93c19HZXQQExoE8JsnARIjCg9Xb3JrZmxvd3Nf",
            "UGF0Y2gQFBoOCAHwmycB+JsnEvibJxMSIgoQV29ya2Zsb3dzX0RlbGV0ZRAV",
            "GgzwmycB+JsnEvibJxMSHQoTV29ya2Zsb3dNZXRyaWNzX0dldBBgGgTwmycB",
            "EiEKE1dvcmtmbG93TWV0cmljc19BZGQQYRoI8JsnAfibJ2ASKAoWV29ya2Zs",
            "b3dNZXRyaWNzX0RlbGV0ZRBiGgzwmycB+JsnYfibJ2ASIgoWVFNORVZpc3Vh",
            "bGl6YXRpb25zX0FkZBAYGgYIAfibJxkSHgoWVFNORVZpc3VhbGl6YXRpb25z",
            "X0dldBAZGgIIARIdCg9Bbm5vdGF0aW9uc19BZGQQJRoI8JsnAfibJyYSGQoP",
            "QW5ub3RhdGlvbnNfR2V0ECYaBPCbJwESJQoRQW5ub3RhdGlvbnNfUGF0Y2gQ",
            "JxoOCAHwmycB+JsnJfibJyYSJAoSQW5ub3RhdGlvbnNfRGVsZXRlECgaDPCb",
            "JwH4mycl+JsnJhIcCg5Db2xsZWN0b3JzX0FkZBApGgjwmycB+JsnKhIYCg5D",
            "b2xsZWN0b3JzX0dldBAqGgTwmycBEiMKEUNvbGxlY3RvcnNfRGVsZXRlECsa",
            "DPCbJwH4mycp+JsnKhIWCghBcHBzX0FkZBAsGgjwmycB+JsnLRISCghBcHBz",
            "X0dldBAtGgTwmycBEh0KC0FwcHNfRGVsZXRlEC4aDPCbJwH4mycs+JsnLRIW",
            "CghLZXlzX0FkZBAvGgjwmycB+JsnMBISCghLZXlzX0dldBAwGgTwmycBEh0K",
            "C0tleXNfRGVsZXRlEDEaDPCbJwH4mycv+JsnMBIfChFDb2xsYWJvcmF0b3Jz",
            "X0FkZBAzGgjwmycB+JsnMhIbChFDb2xsYWJvcmF0b3JzX0dldBAyGgTwmycB",
            "EiYKFENvbGxhYm9yYXRvcnNfRGVsZXRlEDQaDPCbJwH4mycz+JsnMhIZCgtN",
            "ZXRyaWNzX0FkZBA2GgjwmycB+JsnNRIVCgtNZXRyaWNzX0dldBA1GgTwmycB",
            "EiAKDk1ldHJpY3NfRGVsZXRlED8aDPCbJwH4myc2+JsnNRIXCglUYXNrc19B",
            "ZGQQNxoI8JsnAfibJzgSEwoJVGFza3NfR2V0EDgaBPCbJwESHgoMVGFza3Nf",
            "RGVsZXRlEEYaDPCbJwH4myc3+JsnOBIiChRQYXNzd29yZFBvbGljaWVzX0Fk",
            "ZBA5GgjwmycB+JsnOhIeChRQYXNzd29yZFBvbGljaWVzX0dldBA6GgTwmycB",
            "EikKF1Bhc3N3b3JkUG9saWNpZXNfRGVsZXRlEDsaDPCbJwH4myc5+JsnOhIZ",
            "Cg9MYWJlbE9yZGVyc19HZXQQQxoE8JsnARIdCg9MYWJlbE9yZGVyc19BZGQQ",
            "RBoI8JsnAfibJ0MSJAoSTGFiZWxPcmRlcnNfRGVsZXRlEEUaDPCbJwH4mydE",
            "+JsnQxIgChZVc2VyRmVhdHVyZUNvbmZpZ3NfR2V0EEcaBPCbJwESLgogRmlu",
            "ZER1cGxpY2F0ZUFubm90YXRpb25zSm9ic19BZGQQZhoI8JsnAfibJ2cSKgog",
            "RmluZER1cGxpY2F0ZUFubm90YXRpb25zSm9ic19HZXQQZxoE8JsnARI1CiNG",
            "aW5kRHVwbGljYXRlQW5ub3RhdGlvbnNKb2JzX0RlbGV0ZRBoGgzwmycB+Jsn",
            "ZvibJ2cSEAoGU2VhcmNoEAMaBPCbJwESGQoPU2F2ZWRTZWFyY2hfR2V0EHIa",
            "BPCbJwESHQoPU2F2ZWRTZWFyY2hfQWRkEHMaCPCbJwH4mydyEiQKElNhdmVk",
            "U2VhcmNoX0RlbGV0ZRB0GgzwmycB+JsncvibJ3MiBAgeEB4iBAgfEB8iBAgg",
            "ECAiBAghECEiBAgiECI6PAoPY2xhcmZhaV9leHBvc2VkEiEuZ29vZ2xlLnBy",
            "b3RvYnVmLkVudW1WYWx1ZU9wdGlvbnMYvvMEIAEoCDpeChljbGFyaWZhaV9k",
            "ZXBlbmRpbmdfc2NvcGVzEiEuZ29vZ2xlLnByb3RvYnVmLkVudW1WYWx1ZU9w",
            "dGlvbnMYv/MEIAMoDjIWLmNsYXJpZmFpLmF1dGguc2NvcGUuU0JnChxjb20u",
            "Y2xhcmlmYWkuZ3JwYy5hdXRoLnNjb3BlUAFaPmdpdGh1Yi5jb20vQ2xhcmlm",
            "YWkvY2xhcmlmYWktZ28tZ3JwYy9wcm90by9jbGFyaWZhaS9hdXRoL3Njb3Bl",
            "ogIEQ0FJUGIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.Reflection.DescriptorReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Clarifai.Auth.Scope.S), }, new pb::Extension[] { ScopeExtensions.ClarfaiExposed, ScopeExtensions.ClarifaiDependingScopes }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Auth.Scope.ScopeList), global::Clarifai.Auth.Scope.ScopeList.Parser, new[]{ "Scopes", "Endpoints" }, null, null, null, null)
          }));
    }
    #endregion

  }
  /// <summary>Holder for extension identifiers generated from the top level of proto/clarifai/auth/scope/scope.proto</summary>
  public static partial class ScopeExtensions {
    /// <summary>
    /// indicates whether the given scope should be returned by the Get /scopes/ call
    /// or any other call that returns list of available perms.
    /// </summary>
    public static readonly pb::Extension<global::Google.Protobuf.Reflection.EnumValueOptions, bool> ClarfaiExposed =
      new pb::Extension<global::Google.Protobuf.Reflection.EnumValueOptions, bool>(80318, pb::FieldCodec.ForBool(642544, false));
    /// <summary>
    /// TODO: We have no way of picking extension field numbers within clarifai to guarantee
    /// uniqueness.  Note: 50000-99999 are for organizational use (like this)
    /// </summary>
    public static readonly pb::RepeatedExtension<global::Google.Protobuf.Reflection.EnumValueOptions, global::Clarifai.Auth.Scope.S> ClarifaiDependingScopes =
      new pb::RepeatedExtension<global::Google.Protobuf.Reflection.EnumValueOptions, global::Clarifai.Auth.Scope.S>(80319, pb::FieldCodec.ForEnum(642554, x => (int) x, x => (global::Clarifai.Auth.Scope.S) x));
  }

  #region Enums
  /// <summary>
  /// Next index: 41
  /// NOTE: When updating the list of "clarifai_exposed" scopes, please also
  /// update the TestScopes function in main_key_test.go and TestGetExposedScopes function in
  /// scope_test.go
  ///
  /// The dependencies listed for each scope are simply recommendations so that a user
  /// cannot make a key that would be useless. Beyond the key creation they are not enforced
  /// but rather the scopes are enforce when data is accessed.
  ///
  /// There is the following conventions in place, make sure you add them to the scopes for all new
  /// resource types:
  ///
  /// 1. *_Add requires the corresponding _Get.
  /// 2. *_Delete requires the corresponding _Add and _Get.
  /// 3. *_Patch is deprecated and not check anywhere.
  /// </summary>
  public enum S {
    /// <summary>
    /// introduce undef so that the zero (default/unset) value of the enum is not a real
    /// permission.  undef is only present for this purpose and should not be used
    /// to indicate any "real" value.
    /// </summary>
    [pbr::OriginalName("undef")] Undef = 0,
    [pbr::OriginalName("All")] All = 1,
    /// <summary>
    /// Make an rpc to our prediction services.
    /// </summary>
    [pbr::OriginalName("Predict")] Predict = 2,
    /// <summary>
    /// Write to the inputs table in the DB.
    /// </summary>
    [pbr::OriginalName("Inputs_Add")] InputsAdd = 4,
    /// <summary>
    /// Read from the inputs table in the DB.
    /// </summary>
    [pbr::OriginalName("Inputs_Get")] InputsGet = 5,
    /// <summary>
    /// To patch we need read/write.
    /// Deprecated.
    /// Optionally needs Concepts_Add.
    /// </summary>
    [pbr::OriginalName("Inputs_Patch")] InputsPatch = 7,
    /// <summary>
    /// To delete we need read/write
    /// </summary>
    [pbr::OriginalName("Inputs_Delete")] InputsDelete = 8,
    /// <summary>
    /// Deprecated.
    /// </summary>
    [pbr::OriginalName("Outputs_Patch")] OutputsPatch = 9,
    /// <summary>
    /// Write to the concepts DB tables.
    /// </summary>
    [pbr::OriginalName("Concepts_Add")] ConceptsAdd = 10,
    /// <summary>
    /// Read from the concepts DB tables.
    /// </summary>
    [pbr::OriginalName("Concepts_Get")] ConceptsGet = 11,
    /// <summary>
    /// To patch we need read/write.
    /// Deprecated
    /// </summary>
    [pbr::OriginalName("Concepts_Patch")] ConceptsPatch = 12,
    /// <summary>
    /// To delete we need read/write.
    /// Note: not implemented.
    /// </summary>
    [pbr::OriginalName("Concepts_Delete")] ConceptsDelete = 13,
    /// <summary>
    /// Write to the models DB tables.
    /// </summary>
    [pbr::OriginalName("Models_Add")] ModelsAdd = 14,
    /// <summary>
    /// Read from the models and models versions DB tables.
    /// </summary>
    [pbr::OriginalName("Models_Get")] ModelsGet = 15,
    /// <summary>
    /// To patch we need read/write.
    /// Deprecated.
    /// </summary>
    [pbr::OriginalName("Models_Patch")] ModelsPatch = 16,
    /// <summary>
    /// To delete we need read/write.
    /// </summary>
    [pbr::OriginalName("Models_Delete")] ModelsDelete = 17,
    /// <summary>
    /// Note: Models_Train is effectively doing POST /models/{models_id}/versions so it's treated that
    /// way in terms of data access under the hood.
    /// Write to the model versions DB table.
    /// </summary>
    [pbr::OriginalName("Models_Train")] ModelsTrain = 26,
    /// <summary>
    /// Internal only model syncing.
    /// </summary>
    [pbr::OriginalName("Models_Sync")] ModelsSync = 27,
    /// <summary>
    /// Write to the workflows DB table.
    /// </summary>
    [pbr::OriginalName("Workflows_Add")] WorkflowsAdd = 18,
    /// <summary>
    /// Read from the workflows DB table.
    /// </summary>
    [pbr::OriginalName("Workflows_Get")] WorkflowsGet = 19,
    /// <summary>
    /// To patch we need read/write.
    /// Deprecated.
    /// </summary>
    [pbr::OriginalName("Workflows_Patch")] WorkflowsPatch = 20,
    /// <summary>
    /// To delete we need read/write.
    /// </summary>
    [pbr::OriginalName("Workflows_Delete")] WorkflowsDelete = 21,
    [pbr::OriginalName("WorkflowMetrics_Get")] WorkflowMetricsGet = 96,
    [pbr::OriginalName("WorkflowMetrics_Add")] WorkflowMetricsAdd = 97,
    [pbr::OriginalName("WorkflowMetrics_Delete")] WorkflowMetricsDelete = 98,
    /// <summary>
    /// Write to the visualizations DB table.
    /// Deprecated
    /// </summary>
    [pbr::OriginalName("TSNEVisualizations_Add")] TsnevisualizationsAdd = 24,
    /// <summary>
    /// Read from the visualizations DB table.
    /// Deprecated
    /// </summary>
    [pbr::OriginalName("TSNEVisualizations_Get")] TsnevisualizationsGet = 25,
    /// <summary>
    /// Write to the annotations DB table.
    /// </summary>
    [pbr::OriginalName("Annotations_Add")] AnnotationsAdd = 37,
    /// <summary>
    /// Read from the annotations DB table.
    /// </summary>
    [pbr::OriginalName("Annotations_Get")] AnnotationsGet = 38,
    /// <summary>
    /// To patch we need read/write.
    /// Deprecated.
    /// </summary>
    [pbr::OriginalName("Annotations_Patch")] AnnotationsPatch = 39,
    /// <summary>
    /// To delete we need read/write.
    /// </summary>
    [pbr::OriginalName("Annotations_Delete")] AnnotationsDelete = 40,
    /// <summary>
    /// Write to the collectors DB table.
    /// </summary>
    [pbr::OriginalName("Collectors_Add")] CollectorsAdd = 41,
    /// <summary>
    /// Read from the collectors DB table.
    /// </summary>
    [pbr::OriginalName("Collectors_Get")] CollectorsGet = 42,
    /// <summary>
    /// To delete we need read/write.
    /// </summary>
    [pbr::OriginalName("Collectors_Delete")] CollectorsDelete = 43,
    /// <summary>
    /// Write to the apps DB table.
    /// </summary>
    [pbr::OriginalName("Apps_Add")] AppsAdd = 44,
    /// <summary>
    /// Read from the apps DB table.
    /// </summary>
    [pbr::OriginalName("Apps_Get")] AppsGet = 45,
    /// <summary>
    /// To delete we need read/write.
    /// </summary>
    [pbr::OriginalName("Apps_Delete")] AppsDelete = 46,
    /// <summary>
    /// Write to the keys DB table.
    /// </summary>
    [pbr::OriginalName("Keys_Add")] KeysAdd = 47,
    /// <summary>
    /// Read from the keys DB table.
    /// </summary>
    [pbr::OriginalName("Keys_Get")] KeysGet = 48,
    /// <summary>
    /// To delete we need read/write.
    /// </summary>
    [pbr::OriginalName("Keys_Delete")] KeysDelete = 49,
    /// <summary>
    /// Write to the app sharing DB table
    /// </summary>
    [pbr::OriginalName("Collaborators_Add")] CollaboratorsAdd = 51,
    /// <summary>
    /// Read from the app sharing DB table
    /// </summary>
    [pbr::OriginalName("Collaborators_Get")] CollaboratorsGet = 50,
    /// <summary>
    /// To delete we need read/write
    /// </summary>
    [pbr::OriginalName("Collaborators_Delete")] CollaboratorsDelete = 52,
    /// <summary>
    /// Write to the metrics table
    /// </summary>
    [pbr::OriginalName("Metrics_Add")] MetricsAdd = 54,
    /// <summary>
    /// Read from metrics table
    /// </summary>
    [pbr::OriginalName("Metrics_Get")] MetricsGet = 53,
    /// <summary>
    /// To delete we need read/write
    /// </summary>
    [pbr::OriginalName("Metrics_Delete")] MetricsDelete = 63,
    /// <summary>
    /// Write to tasks DB table.
    /// </summary>
    [pbr::OriginalName("Tasks_Add")] TasksAdd = 55,
    /// <summary>
    /// Read from the tasks DB table.
    /// </summary>
    [pbr::OriginalName("Tasks_Get")] TasksGet = 56,
    /// <summary>
    /// To delete we need read/write
    /// </summary>
    [pbr::OriginalName("Tasks_Delete")] TasksDelete = 70,
    /// <summary>
    /// Write to the password_policies DB table
    /// </summary>
    [pbr::OriginalName("PasswordPolicies_Add")] PasswordPoliciesAdd = 57,
    /// <summary>
    /// Read from the password_policies DB table
    /// </summary>
    [pbr::OriginalName("PasswordPolicies_Get")] PasswordPoliciesGet = 58,
    /// <summary>
    /// To delete password_policies we need read/write
    /// </summary>
    [pbr::OriginalName("PasswordPolicies_Delete")] PasswordPoliciesDelete = 59,
    /// <summary>
    /// Read from label orders table
    /// </summary>
    [pbr::OriginalName("LabelOrders_Get")] LabelOrdersGet = 67,
    /// <summary>
    /// Write to label orders table
    /// </summary>
    [pbr::OriginalName("LabelOrders_Add")] LabelOrdersAdd = 68,
    /// <summary>
    /// To delete label orders we need read/write
    /// </summary>
    [pbr::OriginalName("LabelOrders_Delete")] LabelOrdersDelete = 69,
    /// <summary>
    /// Read from user_feature_configs table
    /// </summary>
    [pbr::OriginalName("UserFeatureConfigs_Get")] UserFeatureConfigsGet = 71,
    /// <summary>
    /// CRUD on FindDuplicateAnnotationsJobs table
    /// </summary>
    [pbr::OriginalName("FindDuplicateAnnotationsJobs_Add")] FindDuplicateAnnotationsJobsAdd = 102,
    [pbr::OriginalName("FindDuplicateAnnotationsJobs_Get")] FindDuplicateAnnotationsJobsGet = 103,
    [pbr::OriginalName("FindDuplicateAnnotationsJobs_Delete")] FindDuplicateAnnotationsJobsDelete = 104,
    /// <summary>
    /// Make an rpc to our search services.
    /// </summary>
    [pbr::OriginalName("Search")] Earch = 3,
    /// <summary>
    /// To get a saved search.
    /// </summary>
    [pbr::OriginalName("SavedSearch_Get")] AvedSearchGet = 114,
    /// <summary>
    /// To add a saved search
    /// </summary>
    [pbr::OriginalName("SavedSearch_Add")] AvedSearchAdd = 115,
    /// <summary>
    /// To delete a saved search
    /// </summary>
    [pbr::OriginalName("SavedSearch_Delete")] AvedSearchDelete = 116,
  }

  #endregion

  #region Messages
  public sealed partial class ScopeList : pb::IMessage<ScopeList> {
    private static readonly pb::MessageParser<ScopeList> _parser = new pb::MessageParser<ScopeList>(() => new ScopeList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ScopeList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Auth.Scope.ScopeReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ScopeList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ScopeList(ScopeList other) : this() {
      scopes_ = other.scopes_.Clone();
      endpoints_ = other.endpoints_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ScopeList Clone() {
      return new ScopeList(this);
    }

    /// <summary>Field number for the "scopes" field.</summary>
    public const int ScopesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Clarifai.Auth.Scope.S> _repeated_scopes_codec
        = pb::FieldCodec.ForEnum(10, x => (int) x, x => (global::Clarifai.Auth.Scope.S) x);
    private readonly pbc::RepeatedField<global::Clarifai.Auth.Scope.S> scopes_ = new pbc::RepeatedField<global::Clarifai.Auth.Scope.S>();
    /// <summary>
    /// These are the list of low-level scopes to check from the enum below.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Clarifai.Auth.Scope.S> Scopes {
      get { return scopes_; }
    }

    /// <summary>Field number for the "endpoints" field.</summary>
    public const int EndpointsFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_endpoints_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> endpoints_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// This is a list of fully qualified grpc names to check.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Endpoints {
      get { return endpoints_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ScopeList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ScopeList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!scopes_.Equals(other.scopes_)) return false;
      if(!endpoints_.Equals(other.endpoints_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= scopes_.GetHashCode();
      hash ^= endpoints_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      scopes_.WriteTo(output, _repeated_scopes_codec);
      endpoints_.WriteTo(output, _repeated_endpoints_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += scopes_.CalculateSize(_repeated_scopes_codec);
      size += endpoints_.CalculateSize(_repeated_endpoints_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ScopeList other) {
      if (other == null) {
        return;
      }
      scopes_.Add(other.scopes_);
      endpoints_.Add(other.endpoints_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            scopes_.AddEntriesFrom(input, _repeated_scopes_codec);
            break;
          }
          case 18: {
            endpoints_.AddEntriesFrom(input, _repeated_endpoints_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
