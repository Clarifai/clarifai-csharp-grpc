// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: proto/clarifai/api/service.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Clarifai.Api {

  /// <summary>Holder for reflection information generated from proto/clarifai/api/service.proto</summary>
  public static partial class ServiceReflection {

    #region Descriptor
    /// <summary>File descriptor for proto/clarifai/api/service.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ServiceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiBwcm90by9jbGFyaWZhaS9hcGkvc2VydmljZS5wcm90bxIMY2xhcmlmYWku",
            "YXBpGiJwcm90by9jbGFyaWZhaS9hcGkvcmVzb3VyY2VzLnByb3RvGiZwcm90",
            "by9jbGFyaWZhaS9hcGkvc3RhdHVzL3N0YXR1cy5wcm90bxopcHJvdG8vY2xh",
            "cmlmYWkvYXBpL3V0aWxzL2V4dGVuc2lvbnMucHJvdG8aJXByb3RvL2NsYXJp",
            "ZmFpL2F1dGgvc2NvcGUvc2NvcGUucHJvdG8aKHByb3RvL2NsYXJpZmFpL2F1",
            "dGgvdXRpbC9leHRlbnNpb24ucHJvdG8aK3Byb3RvL2NsYXJpZmFpL2FwaS9z",
            "dGF0dXMvc3RhdHVzX2NvZGUucHJvdG8aHGdvb2dsZS9hcGkvYW5ub3RhdGlv",
            "bnMucHJvdG8aHmdvb2dsZS9wcm90b2J1Zi9kdXJhdGlvbi5wcm90bxocZ29v",
            "Z2xlL3Byb3RvYnVmL3N0cnVjdC5wcm90bxofZ29vZ2xlL3Byb3RvYnVmL3Rp",
            "bWVzdGFtcC5wcm90byIsCgpQYWdpbmF0aW9uEgwKBHBhZ2UYASABKA0SEAoI",
            "cGVyX3BhZ2UYAiABKA0icAoUR2V0QW5ub3RhdGlvblJlcXVlc3QSLwoLdXNl",
            "cl9hcHBfaWQYASABKAsyGi5jbGFyaWZhaS5hcGkuVXNlckFwcElEU2V0EhUK",
            "DWFubm90YXRpb25faWQYAiABKAkSEAoIaW5wdXRfaWQYAyABKAkimgIKFkxp",
            "c3RBbm5vdGF0aW9uc1JlcXVlc3QSLwoLdXNlcl9hcHBfaWQYASABKAsyGi5j",
            "bGFyaWZhaS5hcGkuVXNlckFwcElEU2V0EgsKA2lkcxgCIAMoCRIRCglpbnB1",
            "dF9pZHMYAyADKAkSEAoIdXNlcl9pZHMYCSADKAkSGQoRbW9kZWxfdmVyc2lv",
            "bl9pZHMYCiADKAkSLQoIc3RhdHVzZXMYBSADKAsyGy5jbGFyaWZhaS5hcGku",
            "c3RhdHVzLlN0YXR1cxIcChRsaXN0X2FsbF9hbm5vdGF0aW9ucxgGIAEoCBIM",
            "CgRwYWdlGAcgASgNEhAKCHBlcl9wYWdlGAggASgNEg8KB3Rhc2tfaWQYCyAB",
            "KAlKBAgEEAUieAoWUG9zdEFubm90YXRpb25zUmVxdWVzdBIvCgt1c2VyX2Fw",
            "cF9pZBgBIAEoCzIaLmNsYXJpZmFpLmFwaS5Vc2VyQXBwSURTZXQSLQoLYW5u",
            "b3RhdGlvbnMYAiADKAsyGC5jbGFyaWZhaS5hcGkuQW5ub3RhdGlvbiKJAQoX",
            "UGF0Y2hBbm5vdGF0aW9uc1JlcXVlc3QSLwoLdXNlcl9hcHBfaWQYASABKAsy",
            "Gi5jbGFyaWZhaS5hcGkuVXNlckFwcElEU2V0Ei0KC2Fubm90YXRpb25zGAIg",
            "AygLMhguY2xhcmlmYWkuYXBpLkFubm90YXRpb24SDgoGYWN0aW9uGAMgASgJ",
            "IrkBCh1QYXRjaEFubm90YXRpb25zU3RhdHVzUmVxdWVzdBIvCgt1c2VyX2Fw",
            "cF9pZBgBIAEoCzIaLmNsYXJpZmFpLmFwaS5Vc2VyQXBwSURTZXQSNAoLc3Rh",
            "dHVzX2NvZGUYAiABKA4yHy5jbGFyaWZhaS5hcGkuc3RhdHVzLlN0YXR1c0Nv",
            "ZGUSEAoIdXNlcl9pZHMYAyADKAkSDwoHdGFza19pZBgEIAEoCRIOCgZhY3Rp",
            "b24YBSABKAkidgoeUGF0Y2hBbm5vdGF0aW9uc1N0YXR1c1Jlc3BvbnNlEisK",
            "BnN0YXR1cxgBIAEoCzIbLmNsYXJpZmFpLmFwaS5zdGF0dXMuU3RhdHVzEhAK",
            "CHVzZXJfaWRzGAIgAygJEhUKDXVwZGF0ZWRfY291bnQYAyABKA0icwoXRGVs",
            "ZXRlQW5ub3RhdGlvblJlcXVlc3QSLwoLdXNlcl9hcHBfaWQYASABKAsyGi5j",
            "bGFyaWZhaS5hcGkuVXNlckFwcElEU2V0EhAKCGlucHV0X2lkGAIgASgJEhUK",
            "DWFubm90YXRpb25faWQYAyABKAkiawoYRGVsZXRlQW5ub3RhdGlvbnNSZXF1",
            "ZXN0Ei8KC3VzZXJfYXBwX2lkGAEgASgLMhouY2xhcmlmYWkuYXBpLlVzZXJB",
            "cHBJRFNldBILCgNpZHMYAiADKAkSEQoJaW5wdXRfaWRzGAMgAygJInUKGFNp",
            "bmdsZUFubm90YXRpb25SZXNwb25zZRIrCgZzdGF0dXMYASABKAsyGy5jbGFy",
            "aWZhaS5hcGkuc3RhdHVzLlN0YXR1cxIsCgphbm5vdGF0aW9uGAIgASgLMhgu",
            "Y2xhcmlmYWkuYXBpLkFubm90YXRpb24iewoXTXVsdGlBbm5vdGF0aW9uUmVz",
            "cG9uc2USKwoGc3RhdHVzGAEgASgLMhsuY2xhcmlmYWkuYXBpLnN0YXR1cy5T",
            "dGF0dXMSMwoLYW5ub3RhdGlvbnMYAiADKAsyGC5jbGFyaWZhaS5hcGkuQW5u",
            "b3RhdGlvbkIEgLUYASJACg1HZXRBcHBSZXF1ZXN0Ei8KC3VzZXJfYXBwX2lk",
            "GAEgASgLMhouY2xhcmlmYWkuYXBpLlVzZXJBcHBJRFNldCLdAQoPTGlzdEFw",
            "cHNSZXF1ZXN0Ei8KC3VzZXJfYXBwX2lkGAEgASgLMhouY2xhcmlmYWkuYXBp",
            "LlVzZXJBcHBJRFNldBIMCgRwYWdlGAIgASgNEhAKCHBlcl9wYWdlGAMgASgN",
            "EhYKDnNvcnRfYXNjZW5kaW5nGAUgASgIEhYKDHNvcnRfYnlfbmFtZRgGIAEo",
            "CEgAEh0KE3NvcnRfYnlfbW9kaWZpZWRfYXQYByABKAhIABINCgVxdWVyeRgI",
            "IAEoCRIQCgRuYW1lGAQgASgJQgIYAUIJCgdzb3J0X2J5ImMKD1Bvc3RBcHBz",
            "UmVxdWVzdBIvCgt1c2VyX2FwcF9pZBgBIAEoCzIaLmNsYXJpZmFpLmFwaS5V",
            "c2VyQXBwSURTZXQSHwoEYXBwcxgCIAMoCzIRLmNsYXJpZmFpLmFwaS5BcHAi",
            "QwoQRGVsZXRlQXBwUmVxdWVzdBIvCgt1c2VyX2FwcF9pZBgBIAEoCzIaLmNs",
            "YXJpZmFpLmFwaS5Vc2VyQXBwSURTZXQiuQEKEFBhdGNoQXBwc1JlcXVlc3QS",
            "LwoLdXNlcl9hcHBfaWQYASABKAsyGi5jbGFyaWZhaS5hcGkuVXNlckFwcElE",
            "U2V0Eh8KBGFwcHMYAiADKAsyES5jbGFyaWZhaS5hcGkuQXBwEg4KBmFjdGlv",
            "bhgDIAEoCRIyCg9tZXRhZGF0YV9hY3Rpb24YBCABKAsyGS5jbGFyaWZhaS5h",
            "cGkuUGF0Y2hBY3Rpb24SDwoHcmVpbmRleBgFIAEoCCKjAQoXUG9zdEFwcHNT",
            "ZWFyY2hlc1JlcXVlc3QSLwoLdXNlcl9hcHBfaWQYASABKAsyGi5jbGFyaWZh",
            "aS5hcGkuVXNlckFwcElEU2V0EikKCWFwcF9xdWVyeRgCIAEoCzIWLmNsYXJp",
            "ZmFpLmFwaS5BcHBRdWVyeRIsCgpwYWdpbmF0aW9uGAMgASgLMhguY2xhcmlm",
            "YWkuYXBpLlBhZ2luYXRpb24iYAoRU2luZ2xlQXBwUmVzcG9uc2USKwoGc3Rh",
            "dHVzGAEgASgLMhsuY2xhcmlmYWkuYXBpLnN0YXR1cy5TdGF0dXMSHgoDYXBw",
            "GAIgASgLMhEuY2xhcmlmYWkuYXBpLkFwcCJmChBNdWx0aUFwcFJlc3BvbnNl",
            "EisKBnN0YXR1cxgBIAEoCzIbLmNsYXJpZmFpLmFwaS5zdGF0dXMuU3RhdHVz",
            "EiUKBGFwcHMYAiADKAsyES5jbGFyaWZhaS5hcGkuQXBwQgSAtRgBImsKGExp",
            "c3RDb2xsYWJvcmF0b3JzUmVxdWVzdBIvCgt1c2VyX2FwcF9pZBgBIAEoCzIa",
            "LmNsYXJpZmFpLmFwaS5Vc2VyQXBwSURTZXQSHgoWbGlzdF9hbGxfY29sbGFi",
            "b3JhdG9ycxgCIAEoCCJ+ChhQb3N0Q29sbGFib3JhdG9yc1JlcXVlc3QSLwoL",
            "dXNlcl9hcHBfaWQYASABKAsyGi5jbGFyaWZhaS5hcGkuVXNlckFwcElEU2V0",
            "EjEKDWNvbGxhYm9yYXRvcnMYAiADKAsyGi5jbGFyaWZhaS5hcGkuQ29sbGFi",
            "b3JhdG9yIo8BChlQYXRjaENvbGxhYm9yYXRvcnNSZXF1ZXN0Ei8KC3VzZXJf",
            "YXBwX2lkGAEgASgLMhouY2xhcmlmYWkuYXBpLlVzZXJBcHBJRFNldBIxCg1j",
            "b2xsYWJvcmF0b3JzGAIgAygLMhouY2xhcmlmYWkuYXBpLkNvbGxhYm9yYXRv",
            "chIOCgZhY3Rpb24YAyABKAkifAoaRGVsZXRlQ29sbGFib3JhdG9yc1JlcXVl",
            "c3QSLwoLdXNlcl9hcHBfaWQYASABKAsyGi5jbGFyaWZhaS5hcGkuVXNlckFw",
            "cElEU2V0EhgKEGNvbGxhYm9yYXRvcl9pZHMYAiADKAkSEwoLdXNlcl9lbWFp",
            "bHMYAyADKAkiggEKGk11bHRpQ29sbGFib3JhdG9yc1Jlc3BvbnNlEisKBnN0",
            "YXR1cxgBIAEoCzIbLmNsYXJpZmFpLmFwaS5zdGF0dXMuU3RhdHVzEjcKDWNv",
            "bGxhYm9yYXRvcnMYAiADKAsyGi5jbGFyaWZhaS5hcGkuQ29sbGFib3JhdG9y",
            "QgSAtRgBImwKGUxpc3RDb2xsYWJvcmF0aW9uc1JlcXVlc3QSLwoLdXNlcl9h",
            "cHBfaWQYASABKAsyGi5jbGFyaWZhaS5hcGkuVXNlckFwcElEU2V0EgwKBHBh",
            "Z2UYAiABKA0SEAoIcGVyX3BhZ2UYAyABKA0ihQEKG011bHRpQ29sbGFib3Jh",
            "dGlvbnNSZXNwb25zZRIrCgZzdGF0dXMYASABKAsyGy5jbGFyaWZhaS5hcGku",
            "c3RhdHVzLlN0YXR1cxI5Cg5jb2xsYWJvcmF0aW9ucxgCIAMoCzIbLmNsYXJp",
            "ZmFpLmFwaS5Db2xsYWJvcmF0aW9uQgSAtRgBIi4KFEdldFN0YXR1c0NvZGVS",
            "ZXF1ZXN0EhYKDnN0YXR1c19jb2RlX2lkGAEgASgJIhgKFkxpc3RTdGF0dXND",
            "b2Rlc1JlcXVlc3QiRwoYU2luZ2xlU3RhdHVzQ29kZVJlc3BvbnNlEisKBnN0",
            "YXR1cxgBIAEoCzIbLmNsYXJpZmFpLmFwaS5zdGF0dXMuU3RhdHVzInUKF011",
            "bHRpU3RhdHVzQ29kZVJlc3BvbnNlEisKBnN0YXR1cxgBIAEoCzIbLmNsYXJp",
            "ZmFpLmFwaS5zdGF0dXMuU3RhdHVzEi0KCHN0YXR1c2VzGAIgAygLMhsuY2xh",
            "cmlmYWkuYXBpLnN0YXR1cy5TdGF0dXMiWAoRR2V0Q29uY2VwdFJlcXVlc3QS",
            "LwoLdXNlcl9hcHBfaWQYASABKAsyGi5jbGFyaWZhaS5hcGkuVXNlckFwcElE",
            "U2V0EhIKCmNvbmNlcHRfaWQYAiABKAkiZgoTTGlzdENvbmNlcHRzUmVxdWVz",
            "dBIvCgt1c2VyX2FwcF9pZBgBIAEoCzIaLmNsYXJpZmFpLmFwaS5Vc2VyQXBw",
            "SURTZXQSDAoEcGFnZRgCIAEoDRIQCghwZXJfcGFnZRgDIAEoDSKvAQobUG9z",
            "dENvbmNlcHRzU2VhcmNoZXNSZXF1ZXN0Ei8KC3VzZXJfYXBwX2lkGAEgASgL",
            "MhouY2xhcmlmYWkuYXBpLlVzZXJBcHBJRFNldBIxCg1jb25jZXB0X3F1ZXJ5",
            "GAIgASgLMhouY2xhcmlmYWkuYXBpLkNvbmNlcHRRdWVyeRIsCgpwYWdpbmF0",
            "aW9uGAMgASgLMhguY2xhcmlmYWkuYXBpLlBhZ2luYXRpb24ibwoTUG9zdENv",
            "bmNlcHRzUmVxdWVzdBIvCgt1c2VyX2FwcF9pZBgBIAEoCzIaLmNsYXJpZmFp",
            "LmFwaS5Vc2VyQXBwSURTZXQSJwoIY29uY2VwdHMYAiADKAsyFS5jbGFyaWZh",
            "aS5hcGkuQ29uY2VwdCKAAQoUUGF0Y2hDb25jZXB0c1JlcXVlc3QSLwoLdXNl",
            "cl9hcHBfaWQYASABKAsyGi5jbGFyaWZhaS5hcGkuVXNlckFwcElEU2V0EicK",
            "CGNvbmNlcHRzGAIgAygLMhUuY2xhcmlmYWkuYXBpLkNvbmNlcHQSDgoGYWN0",
            "aW9uGAMgASgJImoKF0dldENvbmNlcHRDb3VudHNSZXF1ZXN0Ei8KC3VzZXJf",
            "YXBwX2lkGAEgASgLMhouY2xhcmlmYWkuYXBpLlVzZXJBcHBJRFNldBIMCgRw",
            "YWdlGAIgASgNEhAKCHBlcl9wYWdlGAMgASgNImwKFVNpbmdsZUNvbmNlcHRS",
            "ZXNwb25zZRIrCgZzdGF0dXMYASABKAsyGy5jbGFyaWZhaS5hcGkuc3RhdHVz",
            "LlN0YXR1cxImCgdjb25jZXB0GAIgASgLMhUuY2xhcmlmYWkuYXBpLkNvbmNl",
            "cHQicgoUTXVsdGlDb25jZXB0UmVzcG9uc2USKwoGc3RhdHVzGAEgASgLMhsu",
            "Y2xhcmlmYWkuYXBpLnN0YXR1cy5TdGF0dXMSLQoIY29uY2VwdHMYAiADKAsy",
            "FS5jbGFyaWZhaS5hcGkuQ29uY2VwdEIEgLUYASKCAQoZTXVsdGlDb25jZXB0",
            "Q291bnRSZXNwb25zZRIrCgZzdGF0dXMYASABKAsyGy5jbGFyaWZhaS5hcGku",
            "c3RhdHVzLlN0YXR1cxI4Cg5jb25jZXB0X2NvdW50cxgCIAMoCzIaLmNsYXJp",
            "ZmFpLmFwaS5Db25jZXB0Q291bnRCBIC1GAEisQEKG0xpc3RDb25jZXB0UmVs",
            "YXRpb25zUmVxdWVzdBIvCgt1c2VyX2FwcF9pZBgBIAEoCzIaLmNsYXJpZmFp",
            "LmFwaS5Vc2VyQXBwSURTZXQSEgoKY29uY2VwdF9pZBgCIAEoCRIRCglwcmVk",
            "aWNhdGUYAyABKAkSGgoSa25vd2xlZGdlX2dyYXBoX2lkGAQgASgJEgwKBHBh",
            "Z2UYBSABKA0SEAoIcGVyX3BhZ2UYBiABKA0inAEKG1Bvc3RDb25jZXB0UmVs",
            "YXRpb25zUmVxdWVzdBIvCgt1c2VyX2FwcF9pZBgBIAEoCzIaLmNsYXJpZmFp",
            "LmFwaS5Vc2VyQXBwSURTZXQSEgoKY29uY2VwdF9pZBgCIAEoCRI4ChFjb25j",
            "ZXB0X3JlbGF0aW9ucxgDIAMoCzIdLmNsYXJpZmFpLmFwaS5Db25jZXB0UmVs",
            "YXRpb24icQodRGVsZXRlQ29uY2VwdFJlbGF0aW9uc1JlcXVlc3QSLwoLdXNl",
            "cl9hcHBfaWQYASABKAsyGi5jbGFyaWZhaS5hcGkuVXNlckFwcElEU2V0EhIK",
            "CmNvbmNlcHRfaWQYAiABKAkSCwoDaWRzGAMgAygJIk0KGkxpc3RLbm93bGVk",
            "Z2VHcmFwaHNSZXF1ZXN0Ei8KC3VzZXJfYXBwX2lkGAEgASgLMhouY2xhcmlm",
            "YWkuYXBpLlVzZXJBcHBJRFNldCKFAQoaUG9zdEtub3dsZWRnZUdyYXBoc1Jl",
            "cXVlc3QSLwoLdXNlcl9hcHBfaWQYASABKAsyGi5jbGFyaWZhaS5hcGkuVXNl",
            "ckFwcElEU2V0EjYKEGtub3dsZWRnZV9ncmFwaHMYAiADKAsyHC5jbGFyaWZh",
            "aS5hcGkuS25vd2xlZGdlR3JhcGgijwEKHVBvc3RDb25jZXB0TWFwcGluZ0pv",
            "YnNSZXF1ZXN0Ei8KC3VzZXJfYXBwX2lkGAEgASgLMhouY2xhcmlmYWkuYXBp",
            "LlVzZXJBcHBJRFNldBI9ChRjb25jZXB0X21hcHBpbmdfam9icxgCIAMoCzIf",
            "LmNsYXJpZmFpLmFwaS5Db25jZXB0TWFwcGluZ0pvYiKLAQocTXVsdGlDb25j",
            "ZXB0UmVsYXRpb25SZXNwb25zZRIrCgZzdGF0dXMYASABKAsyGy5jbGFyaWZh",
            "aS5hcGkuc3RhdHVzLlN0YXR1cxI+ChFjb25jZXB0X3JlbGF0aW9ucxgCIAMo",
            "CzIdLmNsYXJpZmFpLmFwaS5Db25jZXB0UmVsYXRpb25CBIC1GAEiiAEKG011",
            "bHRpS25vd2xlZGdlR3JhcGhSZXNwb25zZRIrCgZzdGF0dXMYASABKAsyGy5j",
            "bGFyaWZhaS5hcGkuc3RhdHVzLlN0YXR1cxI8ChBrbm93bGVkZ2VfZ3JhcGhz",
            "GAIgAygLMhwuY2xhcmlmYWkuYXBpLktub3dsZWRnZUdyYXBoQgSAtRgBIloK",
            "Hk11bHRpQ29uY2VwdE1hcHBpbmdKb2JSZXNwb25zZRIrCgZzdGF0dXMYASAB",
            "KAsyGy5jbGFyaWZhaS5hcGkuc3RhdHVzLlN0YXR1cxILCgNpZHMYAiADKAki",
            "cgoZR2V0Q29uY2VwdExhbmd1YWdlUmVxdWVzdBIvCgt1c2VyX2FwcF9pZBgB",
            "IAEoCzIaLmNsYXJpZmFpLmFwaS5Vc2VyQXBwSURTZXQSEgoKY29uY2VwdF9p",
            "ZBgCIAEoCRIQCghsYW5ndWFnZRgDIAEoCSKCAQobTGlzdENvbmNlcHRMYW5n",
            "dWFnZXNSZXF1ZXN0Ei8KC3VzZXJfYXBwX2lkGAEgASgLMhouY2xhcmlmYWku",
            "YXBpLlVzZXJBcHBJRFNldBISCgpjb25jZXB0X2lkGAIgASgJEgwKBHBhZ2UY",
            "AyABKA0SEAoIcGVyX3BhZ2UYBCABKA0irQEKHFBhdGNoQ29uY2VwdExhbmd1",
            "YWdlc1JlcXVlc3QSLwoLdXNlcl9hcHBfaWQYASABKAsyGi5jbGFyaWZhaS5h",
            "cGkuVXNlckFwcElEU2V0EhIKCmNvbmNlcHRfaWQYAiABKAkSOAoRY29uY2Vw",
            "dF9sYW5ndWFnZXMYAyADKAsyHS5jbGFyaWZhaS5hcGkuQ29uY2VwdExhbmd1",
            "YWdlEg4KBmFjdGlvbhgEIAEoCSKcAQobUG9zdENvbmNlcHRMYW5ndWFnZXNS",
            "ZXF1ZXN0Ei8KC3VzZXJfYXBwX2lkGAEgASgLMhouY2xhcmlmYWkuYXBpLlVz",
            "ZXJBcHBJRFNldBISCgpjb25jZXB0X2lkGAIgASgJEjgKEWNvbmNlcHRfbGFu",
            "Z3VhZ2VzGAMgAygLMh0uY2xhcmlmYWkuYXBpLkNvbmNlcHRMYW5ndWFnZSKF",
            "AQodU2luZ2xlQ29uY2VwdExhbmd1YWdlUmVzcG9uc2USKwoGc3RhdHVzGAEg",
            "ASgLMhsuY2xhcmlmYWkuYXBpLnN0YXR1cy5TdGF0dXMSNwoQY29uY2VwdF9s",
            "YW5ndWFnZRgCIAEoCzIdLmNsYXJpZmFpLmFwaS5Db25jZXB0TGFuZ3VhZ2Ui",
            "iwEKHE11bHRpQ29uY2VwdExhbmd1YWdlUmVzcG9uc2USKwoGc3RhdHVzGAEg",
            "ASgLMhsuY2xhcmlmYWkuYXBpLnN0YXR1cy5TdGF0dXMSPgoRY29uY2VwdF9s",
            "YW5ndWFnZXMYAiADKAsyHS5jbGFyaWZhaS5hcGkuQ29uY2VwdExhbmd1YWdl",
            "QgSAtRgBIlQKD0dldElucHV0UmVxdWVzdBIvCgt1c2VyX2FwcF9pZBgBIAEo",
            "CzIaLmNsYXJpZmFpLmFwaS5Vc2VyQXBwSURTZXQSEAoIaW5wdXRfaWQYAiAB",
            "KAkibAoWR2V0SW5wdXRTYW1wbGVzUmVxdWVzdBIvCgt1c2VyX2FwcF9pZBgB",
            "IAEoCzIaLmNsYXJpZmFpLmFwaS5Vc2VyQXBwSURTZXQSDwoHdGFza19pZBgC",
            "IAEoCRIQCgh1c2VyX2lkcxgDIAMoCSKeAQoRTGlzdElucHV0c1JlcXVlc3QS",
            "LwoLdXNlcl9hcHBfaWQYASABKAsyGi5jbGFyaWZhaS5hcGkuVXNlckFwcElE",
            "U2V0EgwKBHBhZ2UYAiABKA0SEAoIcGVyX3BhZ2UYAyABKA0SKwoGc3RhdHVz",
            "GAUgASgLMhsuY2xhcmlmYWkuYXBpLnN0YXR1cy5TdGF0dXMSCwoDaWRzGAQg",
            "AygJIn0KE1N0cmVhbUlucHV0c1JlcXVlc3QSLwoLdXNlcl9hcHBfaWQYASAB",
            "KAsyGi5jbGFyaWZhaS5hcGkuVXNlckFwcElEU2V0EhAKCHBlcl9wYWdlGAIg",
            "ASgNEg8KB2xhc3RfaWQYAyABKAkSEgoKZGVzY2VuZGluZxgEIAEoCCJpChFQ",
            "b3N0SW5wdXRzUmVxdWVzdBIvCgt1c2VyX2FwcF9pZBgBIAEoCzIaLmNsYXJp",
            "ZmFpLmFwaS5Vc2VyQXBwSURTZXQSIwoGaW5wdXRzGAIgAygLMhMuY2xhcmlm",
            "YWkuYXBpLklucHV0InoKElBhdGNoSW5wdXRzUmVxdWVzdBIvCgt1c2VyX2Fw",
            "cF9pZBgBIAEoCzIaLmNsYXJpZmFpLmFwaS5Vc2VyQXBwSURTZXQSIwoGaW5w",
            "dXRzGAIgAygLMhMuY2xhcmlmYWkuYXBpLklucHV0Eg4KBmFjdGlvbhgDIAEo",
            "CSJXChJEZWxldGVJbnB1dFJlcXVlc3QSLwoLdXNlcl9hcHBfaWQYASABKAsy",
            "Gi5jbGFyaWZhaS5hcGkuVXNlckFwcElEU2V0EhAKCGlucHV0X2lkGAIgASgJ",
            "IlkKE0RlbGV0ZUlucHV0c1JlcXVlc3QSLwoLdXNlcl9hcHBfaWQYASABKAsy",
            "Gi5jbGFyaWZhaS5hcGkuVXNlckFwcElEU2V0EgsKA2lkcxgCIAMoCUoECAMQ",
            "BCJmChNTaW5nbGVJbnB1dFJlc3BvbnNlEisKBnN0YXR1cxgBIAEoCzIbLmNs",
            "YXJpZmFpLmFwaS5zdGF0dXMuU3RhdHVzEiIKBWlucHV0GAIgASgLMhMuY2xh",
            "cmlmYWkuYXBpLklucHV0ImwKEk11bHRpSW5wdXRSZXNwb25zZRIrCgZzdGF0",
            "dXMYASABKAsyGy5jbGFyaWZhaS5hcGkuc3RhdHVzLlN0YXR1cxIpCgZpbnB1",
            "dHMYAiADKAsyEy5jbGFyaWZhaS5hcGkuSW5wdXRCBIC1GAEicgocTXVsdGlJ",
            "bnB1dEFubm90YXRpb25SZXNwb25zZRIrCgZzdGF0dXMYASABKAsyGy5jbGFy",
            "aWZhaS5hcGkuc3RhdHVzLlN0YXR1cxIlCgRoaXRzGAMgAygLMhEuY2xhcmlm",
            "YWkuYXBpLkhpdEIEgLUYASJxChhTaW5nbGVJbnB1dENvdW50UmVzcG9uc2US",
            "KwoGc3RhdHVzGAEgASgLMhsuY2xhcmlmYWkuYXBpLnN0YXR1cy5TdGF0dXMS",
            "KAoGY291bnRzGAIgASgLMhguY2xhcmlmYWkuYXBpLklucHV0Q291bnQiRwoU",
            "R2V0SW5wdXRDb3VudFJlcXVlc3QSLwoLdXNlcl9hcHBfaWQYASABKAsyGi5j",
            "bGFyaWZhaS5hcGkuVXNlckFwcElEU2V0IrkBChdQb3N0TW9kZWxPdXRwdXRz",
            "UmVxdWVzdBIvCgt1c2VyX2FwcF9pZBgBIAEoCzIaLmNsYXJpZmFpLmFwaS5V",
            "c2VyQXBwSURTZXQSEAoIbW9kZWxfaWQYAiABKAkSEgoKdmVyc2lvbl9pZBgD",
            "IAEoCRIjCgZpbnB1dHMYBCADKAsyEy5jbGFyaWZhaS5hcGkuSW5wdXQSIgoF",
            "bW9kZWwYBSABKAsyEy5jbGFyaWZhaS5hcGkuTW9kZWwijwEKFkxpc3RNb2Rl",
            "bElucHV0c1JlcXVlc3QSLwoLdXNlcl9hcHBfaWQYASABKAsyGi5jbGFyaWZh",
            "aS5hcGkuVXNlckFwcElEU2V0EhAKCG1vZGVsX2lkGAIgASgJEhIKCnZlcnNp",
            "b25faWQYAyABKAkSDAoEcGFnZRgEIAEoDRIQCghwZXJfcGFnZRgFIAEoDSJQ",
            "Cg1HZXRLZXlSZXF1ZXN0Ei8KC3VzZXJfYXBwX2lkGAEgASgLMhouY2xhcmlm",
            "YWkuYXBpLlVzZXJBcHBJRFNldBIOCgZrZXlfaWQYAiABKAkiYgoPTGlzdEtl",
            "eXNSZXF1ZXN0Ei8KC3VzZXJfYXBwX2lkGAEgASgLMhouY2xhcmlmYWkuYXBp",
            "LlVzZXJBcHBJRFNldBIMCgRwYWdlGAIgASgNEhAKCHBlcl9wYWdlGAMgASgN",
            "ImUKEkxpc3RBcHBLZXlzUmVxdWVzdBIvCgt1c2VyX2FwcF9pZBgBIAEoCzIa",
            "LmNsYXJpZmFpLmFwaS5Vc2VyQXBwSURTZXQSDAoEcGFnZRgCIAEoDRIQCghw",
            "ZXJfcGFnZRgDIAEoDSJjCg9Qb3N0S2V5c1JlcXVlc3QSLwoLdXNlcl9hcHBf",
            "aWQYASABKAsyGi5jbGFyaWZhaS5hcGkuVXNlckFwcElEU2V0Eh8KBGtleXMY",
            "AiADKAsyES5jbGFyaWZhaS5hcGkuS2V5IlMKEERlbGV0ZUtleVJlcXVlc3QS",
            "LwoLdXNlcl9hcHBfaWQYASABKAsyGi5jbGFyaWZhaS5hcGkuVXNlckFwcElE",
            "U2V0Eg4KBmtleV9pZBgCIAEoCSJ0ChBQYXRjaEtleXNSZXF1ZXN0Ei8KC3Vz",
            "ZXJfYXBwX2lkGAEgASgLMhouY2xhcmlmYWkuYXBpLlVzZXJBcHBJRFNldBIf",
            "CgRrZXlzGAIgAygLMhEuY2xhcmlmYWkuYXBpLktleRIOCgZhY3Rpb24YAyAB",
            "KAkiYAoRU2luZ2xlS2V5UmVzcG9uc2USKwoGc3RhdHVzGAEgASgLMhsuY2xh",
            "cmlmYWkuYXBpLnN0YXR1cy5TdGF0dXMSHgoDa2V5GAIgASgLMhEuY2xhcmlm",
            "YWkuYXBpLktleSJmChBNdWx0aUtleVJlc3BvbnNlEisKBnN0YXR1cxgBIAEo",
            "CzIbLmNsYXJpZmFpLmFwaS5zdGF0dXMuU3RhdHVzEiUKBGtleXMYAiADKAsy",
            "ES5jbGFyaWZhaS5hcGkuS2V5QgSAtRgBIpIBCg9HZXRNb2RlbFJlcXVlc3QS",
            "LwoLdXNlcl9hcHBfaWQYASABKAsyGi5jbGFyaWZhaS5hcGkuVXNlckFwcElE",
            "U2V0EhAKCG1vZGVsX2lkGAIgASgJEhIKCnZlcnNpb25faWQYAyABKAkSEAoI",
            "bGFuZ3VhZ2UYBCABKAkSFgoOdHJhaW5lZF9iZWZvcmUYBSABKAgi7gIKEUxp",
            "c3RNb2RlbHNSZXF1ZXN0Ei8KC3VzZXJfYXBwX2lkGAEgASgLMhouY2xhcmlm",
            "YWkuYXBpLlVzZXJBcHBJRFNldBIMCgRwYWdlGAIgASgNEhAKCHBlcl9wYWdl",
            "GAMgASgNEhYKDnNvcnRfYXNjZW5kaW5nGAogASgIEhYKDHNvcnRfYnlfbmFt",
            "ZRgLIAEoCEgAEhwKEnNvcnRfYnlfbnVtX2lucHV0cxgMIAEoCEgAEh0KE3Nv",
            "cnRfYnlfbW9kaWZpZWRfYXQYDSABKAhIABINCgVxdWVyeRgOIAEoCRIQCgRu",
            "YW1lGAUgASgJQgIYARIVCg1tb2RlbF90eXBlX2lkGAYgASgJEhQKDHRyYWlu",
            "ZWRfb25seRgHIAEoCBIUCgxpbnB1dF9maWVsZHMYCCADKAkSFQoNb3V0cHV0",
            "X2ZpZWxkcxgJIAMoCRIPCgdsaWNlbnNlGA8gASgJQgkKB3NvcnRfYnlKBAgE",
            "EAUikQEKEVBvc3RNb2RlbHNSZXF1ZXN0Ei8KC3VzZXJfYXBwX2lkGAEgASgL",
            "MhouY2xhcmlmYWkuYXBpLlVzZXJBcHBJRFNldBImCgVtb2RlbBgCIAEoCzIT",
            "LmNsYXJpZmFpLmFwaS5Nb2RlbEICGAESIwoGbW9kZWxzGAMgAygLMhMuY2xh",
            "cmlmYWkuYXBpLk1vZGVsInoKElBhdGNoTW9kZWxzUmVxdWVzdBIvCgt1c2Vy",
            "X2FwcF9pZBgBIAEoCzIaLmNsYXJpZmFpLmFwaS5Vc2VyQXBwSURTZXQSIwoG",
            "bW9kZWxzGAIgAygLMhMuY2xhcmlmYWkuYXBpLk1vZGVsEg4KBmFjdGlvbhgD",
            "IAEoCSJXChJEZWxldGVNb2RlbFJlcXVlc3QSLwoLdXNlcl9hcHBfaWQYASAB",
            "KAsyGi5jbGFyaWZhaS5hcGkuVXNlckFwcElEU2V0EhAKCG1vZGVsX2lkGAIg",
            "ASgJImcKE0RlbGV0ZU1vZGVsc1JlcXVlc3QSLwoLdXNlcl9hcHBfaWQYASAB",
            "KAsyGi5jbGFyaWZhaS5hcGkuVXNlckFwcElEU2V0EgsKA2lkcxgCIAMoCRIS",
            "CgpkZWxldGVfYWxsGAMgASgIIqkBChlQb3N0TW9kZWxzU2VhcmNoZXNSZXF1",
            "ZXN0Ei8KC3VzZXJfYXBwX2lkGAEgASgLMhouY2xhcmlmYWkuYXBpLlVzZXJB",
            "cHBJRFNldBItCgttb2RlbF9xdWVyeRgCIAEoCzIYLmNsYXJpZmFpLmFwaS5N",
            "b2RlbFF1ZXJ5EiwKCnBhZ2luYXRpb24YAyABKAsyGC5jbGFyaWZhaS5hcGku",
            "UGFnaW5hdGlvbiJmChNTaW5nbGVNb2RlbFJlc3BvbnNlEisKBnN0YXR1cxgB",
            "IAEoCzIbLmNsYXJpZmFpLmFwaS5zdGF0dXMuU3RhdHVzEiIKBW1vZGVsGAIg",
            "ASgLMhMuY2xhcmlmYWkuYXBpLk1vZGVsImwKEk11bHRpTW9kZWxSZXNwb25z",
            "ZRIrCgZzdGF0dXMYASABKAsyGy5jbGFyaWZhaS5hcGkuc3RhdHVzLlN0YXR1",
            "cxIpCgZtb2RlbHMYAiADKAsyEy5jbGFyaWZhaS5hcGkuTW9kZWxCBIC1GAEi",
            "ogEKGVBhdGNoTW9kZWxWZXJzaW9uc1JlcXVlc3QSLwoLdXNlcl9hcHBfaWQY",
            "ASABKAsyGi5jbGFyaWZhaS5hcGkuVXNlckFwcElEU2V0EhAKCG1vZGVsX2lk",
            "GAIgASgJEjIKDm1vZGVsX3ZlcnNpb25zGAMgAygLMhouY2xhcmlmYWkuYXBp",
            "Lk1vZGVsVmVyc2lvbhIOCgZhY3Rpb24YBCABKAkibwoWR2V0TW9kZWxWZXJz",
            "aW9uUmVxdWVzdBIvCgt1c2VyX2FwcF9pZBgBIAEoCzIaLmNsYXJpZmFpLmFw",
            "aS5Vc2VyQXBwSURTZXQSEAoIbW9kZWxfaWQYAiABKAkSEgoKdmVyc2lvbl9p",
            "ZBgDIAEoCSKSAQoYTGlzdE1vZGVsVmVyc2lvbnNSZXF1ZXN0Ei8KC3VzZXJf",
            "YXBwX2lkGAEgASgLMhouY2xhcmlmYWkuYXBpLlVzZXJBcHBJRFNldBIQCght",
            "b2RlbF9pZBgCIAEoCRIMCgRwYWdlGAMgASgNEhAKCHBlcl9wYWdlGAQgASgN",
            "EhMKC2NvbmNlcHRfaWRzGAUgAygJInIKGURlbGV0ZU1vZGVsVmVyc2lvblJl",
            "cXVlc3QSLwoLdXNlcl9hcHBfaWQYASABKAsyGi5jbGFyaWZhaS5hcGkuVXNl",
            "ckFwcElEU2V0EhAKCG1vZGVsX2lkGAMgASgJEhIKCnZlcnNpb25faWQYBCAB",
            "KAkifAoaU2luZ2xlTW9kZWxWZXJzaW9uUmVzcG9uc2USKwoGc3RhdHVzGAEg",
            "ASgLMhsuY2xhcmlmYWkuYXBpLnN0YXR1cy5TdGF0dXMSMQoNbW9kZWxfdmVy",
            "c2lvbhgCIAEoCzIaLmNsYXJpZmFpLmFwaS5Nb2RlbFZlcnNpb24iggEKGU11",
            "bHRpTW9kZWxWZXJzaW9uUmVzcG9uc2USKwoGc3RhdHVzGAEgASgLMhsuY2xh",
            "cmlmYWkuYXBpLnN0YXR1cy5TdGF0dXMSOAoObW9kZWxfdmVyc2lvbnMYAiAD",
            "KAsyGi5jbGFyaWZhaS5hcGkuTW9kZWxWZXJzaW9uQgSAtRgBIsgCChhQb3N0",
            "TW9kZWxWZXJzaW9uc1JlcXVlc3QSLwoLdXNlcl9hcHBfaWQYASABKAsyGi5j",
            "bGFyaWZhaS5hcGkuVXNlckFwcElEU2V0EhAKCG1vZGVsX2lkGAIgASgJEjIK",
            "Dm1vZGVsX3ZlcnNpb25zGAMgAygLMhouY2xhcmlmYWkuYXBpLk1vZGVsVmVy",
            "c2lvbhIoCgZzZWFyY2gYBCABKAsyFC5jbGFyaWZhaS5hcGkuU2VhcmNoQgIY",
            "ARIqCgx0cmFpbl9zZWFyY2gYBSABKAsyFC5jbGFyaWZhaS5hcGkuU2VhcmNo",
            "EikKC3Rlc3Rfc2VhcmNoGAYgASgLMhQuY2xhcmlmYWkuYXBpLlNlYXJjaBIf",
            "ChdldmFsdWF0ZV9hZnRlcl90cmFpbmluZxgHIAEoCBITCgtkZXNjcmlwdGlv",
            "bhgIIAEoCSK4AQoeUG9zdE1vZGVsVmVyc2lvbk1ldHJpY3NSZXF1ZXN0Ei8K",
            "C3VzZXJfYXBwX2lkGAEgASgLMhouY2xhcmlmYWkuYXBpLlVzZXJBcHBJRFNl",
            "dBIQCghtb2RlbF9pZBgCIAEoCRISCgp2ZXJzaW9uX2lkGAMgASgJEhQKDG1h",
            "eF9leGFtcGxlcxgEIAEoDRIpCgt0ZXN0X3NlYXJjaBgFIAEoCzIULmNsYXJp",
            "ZmFpLmFwaS5TZWFyY2gioQEKHUdldE1vZGVsVmVyc2lvbk1ldHJpY3NSZXF1",
            "ZXN0Ei8KC3VzZXJfYXBwX2lkGAEgASgLMhouY2xhcmlmYWkuYXBpLlVzZXJB",
            "cHBJRFNldBIQCghtb2RlbF9pZBgCIAEoCRISCgp2ZXJzaW9uX2lkGAMgASgJ",
            "EikKBmZpZWxkcxgEIAEoCzIZLmNsYXJpZmFpLmFwaS5GaWVsZHNWYWx1ZSJd",
            "ChNHZXRNb2RlbFR5cGVSZXF1ZXN0Ei8KC3VzZXJfYXBwX2lkGAEgASgLMhou",
            "Y2xhcmlmYWkuYXBpLlVzZXJBcHBJRFNldBIVCg1tb2RlbF90eXBlX2lkGAIg",
            "ASgJImgKFUxpc3RNb2RlbFR5cGVzUmVxdWVzdBIvCgt1c2VyX2FwcF9pZBgB",
            "IAEoCzIaLmNsYXJpZmFpLmFwaS5Vc2VyQXBwSURTZXQSDAoEcGFnZRgCIAEo",
            "DRIQCghwZXJfcGFnZRgDIAEoDSIfCh1MaXN0T3BlblNvdXJjZUxpY2Vuc2Vz",
            "UmVxdWVzdCJfCh5MaXN0T3BlblNvdXJjZUxpY2Vuc2VzUmVzcG9uc2USKwoG",
            "c3RhdHVzGAEgASgLMhsuY2xhcmlmYWkuYXBpLnN0YXR1cy5TdGF0dXMSEAoI",
            "bGljZW5zZXMYAiADKAkieQoXU2luZ2xlTW9kZWxUeXBlUmVzcG9uc2USKwoG",
            "c3RhdHVzGAEgASgLMhsuY2xhcmlmYWkuYXBpLnN0YXR1cy5TdGF0dXMSMQoK",
            "bW9kZWxfdHlwZRgCIAEoCzIXLmNsYXJpZmFpLmFwaS5Nb2RlbFR5cGVCBIC1",
            "GAEieQoWTXVsdGlNb2RlbFR5cGVSZXNwb25zZRIrCgZzdGF0dXMYASABKAsy",
            "Gy5jbGFyaWZhaS5hcGkuc3RhdHVzLlN0YXR1cxIyCgttb2RlbF90eXBlcxgC",
            "IAMoCzIXLmNsYXJpZmFpLmFwaS5Nb2RlbFR5cGVCBIC1GAEilQEKIkdldE1v",
            "ZGVsVmVyc2lvbklucHV0RXhhbXBsZVJlcXVlc3QSLwoLdXNlcl9hcHBfaWQY",
            "ASABKAsyGi5jbGFyaWZhaS5hcGkuVXNlckFwcElEU2V0EhAKCG1vZGVsX2lk",
            "GAIgASgJEhgKEG1vZGVsX3ZlcnNpb25faWQYAyABKAkSEgoKZXhhbXBsZV9p",
            "ZBgEIAEoCSKjAQokTGlzdE1vZGVsVmVyc2lvbklucHV0RXhhbXBsZXNSZXF1",
            "ZXN0Ei8KC3VzZXJfYXBwX2lkGAEgASgLMhouY2xhcmlmYWkuYXBpLlVzZXJB",
            "cHBJRFNldBIQCghtb2RlbF9pZBgCIAEoCRIYChBtb2RlbF92ZXJzaW9uX2lk",
            "GAMgASgJEgwKBHBhZ2UYBCABKA0SEAoIcGVyX3BhZ2UYBSABKA0iogEKJlNp",
            "bmdsZU1vZGVsVmVyc2lvbklucHV0RXhhbXBsZVJlc3BvbnNlEisKBnN0YXR1",
            "cxgBIAEoCzIbLmNsYXJpZmFpLmFwaS5zdGF0dXMuU3RhdHVzEksKG21vZGVs",
            "X3ZlcnNpb25faW5wdXRfZXhhbXBsZRgCIAEoCzImLmNsYXJpZmFpLmFwaS5N",
            "b2RlbFZlcnNpb25JbnB1dEV4YW1wbGUiogEKJU11bHRpTW9kZWxWZXJzaW9u",
            "SW5wdXRFeGFtcGxlUmVzcG9uc2USKwoGc3RhdHVzGAEgASgLMhsuY2xhcmlm",
            "YWkuYXBpLnN0YXR1cy5TdGF0dXMSTAocbW9kZWxfdmVyc2lvbl9pbnB1dF9l",
            "eGFtcGxlcxgCIAMoCzImLmNsYXJpZmFpLmFwaS5Nb2RlbFZlcnNpb25JbnB1",
            "dEV4YW1wbGUifwoaTGlzdE1vZGVsUmVmZXJlbmNlc1JlcXVlc3QSLwoLdXNl",
            "cl9hcHBfaWQYASABKAsyGi5jbGFyaWZhaS5hcGkuVXNlckFwcElEU2V0EhAK",
            "CG1vZGVsX2lkGAIgASgJEgwKBHBhZ2UYAyABKA0SEAoIcGVyX3BhZ2UYBCAB",
            "KA0iggEKG011bHRpTW9kZWxSZWZlcmVuY2VSZXNwb25zZRIrCgZzdGF0dXMY",
            "ASABKAsyGy5jbGFyaWZhaS5hcGkuc3RhdHVzLlN0YXR1cxI2ChBtb2RlbF9y",
            "ZWZlcmVuY2VzGAIgAygLMhwuY2xhcmlmYWkuYXBpLk1vZGVsUmVmZXJlbmNl",
            "Im8KE011bHRpT3V0cHV0UmVzcG9uc2USKwoGc3RhdHVzGAEgASgLMhsuY2xh",
            "cmlmYWkuYXBpLnN0YXR1cy5TdGF0dXMSKwoHb3V0cHV0cxgCIAMoCzIULmNs",
            "YXJpZmFpLmFwaS5PdXRwdXRCBIC1GAEiVgoRTGlzdFNjb3Blc1JlcXVlc3QS",
            "EAoIa2V5X3R5cGUYASABKAkSLwoLdXNlcl9hcHBfaWQYAiABKAsyGi5jbGFy",
            "aWZhaS5hcGkuVXNlckFwcElEU2V0IkIKD015U2NvcGVzUmVxdWVzdBIvCgt1",
            "c2VyX2FwcF9pZBgBIAEoCzIaLmNsYXJpZmFpLmFwaS5Vc2VyQXBwSURTZXQi",
            "pQEKFk11bHRpU2NvcGVEZXBzUmVzcG9uc2USKwoGc3RhdHVzGAEgASgLMhsu",
            "Y2xhcmlmYWkuYXBpLnN0YXR1cy5TdGF0dXMSKwoKc2NvcGVfZGVwcxgCIAMo",
            "CzIXLmNsYXJpZmFpLmFwaS5TY29wZURlcHMSMQoNZW5kcG9pbnRfZGVwcxgD",
            "IAMoCzIaLmNsYXJpZmFpLmFwaS5FbmRwb2ludERlcHMihAEKEk11bHRpU2Nv",
            "cGVSZXNwb25zZRIrCgZzdGF0dXMYASABKAsyGy5jbGFyaWZhaS5hcGkuc3Rh",
            "dHVzLlN0YXR1cxIOCgZzY29wZXMYAiADKAkSHgoDYXBwGAMgASgLMhEuY2xh",
            "cmlmYWkuYXBpLkFwcBIRCgllbmRwb2ludHMYBCADKAkiTwoQR2V0U2VhcmNo",
            "UmVxdWVzdBIvCgt1c2VyX2FwcF9pZBgBIAEoCzIaLmNsYXJpZmFpLmFwaS5V",
            "c2VyQXBwSURTZXQSCgoCaWQYAiABKAkiZgoTTGlzdFNlYXJjaGVzUmVxdWVz",
            "dBIvCgt1c2VyX2FwcF9pZBgBIAEoCzIaLmNsYXJpZmFpLmFwaS5Vc2VyQXBw",
            "SURTZXQSDAoEcGFnZRgCIAEoDRIQCghwZXJfcGFnZRgDIAEoDSLEAQoTUG9z",
            "dFNlYXJjaGVzUmVxdWVzdBIvCgt1c2VyX2FwcF9pZBgBIAEoCzIaLmNsYXJp",
            "ZmFpLmFwaS5Vc2VyQXBwSURTZXQSJgoFcXVlcnkYAiABKAsyEy5jbGFyaWZh",
            "aS5hcGkuUXVlcnlCAhgBEiYKCHNlYXJjaGVzGAMgAygLMhQuY2xhcmlmYWku",
            "YXBpLlNlYXJjaBIsCgpwYWdpbmF0aW9uGAQgASgLMhguY2xhcmlmYWkuYXBp",
            "LlBhZ2luYXRpb24ihAEKF1Bvc3RTZWFyY2hlc0J5SURSZXF1ZXN0Ei8KC3Vz",
            "ZXJfYXBwX2lkGAEgASgLMhouY2xhcmlmYWkuYXBpLlVzZXJBcHBJRFNldBIK",
            "CgJpZBgCIAEoCRIsCgpwYWdpbmF0aW9uGAMgASgLMhguY2xhcmlmYWkuYXBp",
            "LlBhZ2luYXRpb24iUgoTRGVsZXRlU2VhcmNoUmVxdWVzdBIvCgt1c2VyX2Fw",
            "cF9pZBgBIAEoCzIaLmNsYXJpZmFpLmFwaS5Vc2VyQXBwSURTZXQSCgoCaWQY",
            "AiABKAkipwEKHlBvc3RBbm5vdGF0aW9uc1NlYXJjaGVzUmVxdWVzdBIvCgt1",
            "c2VyX2FwcF9pZBgBIAEoCzIaLmNsYXJpZmFpLmFwaS5Vc2VyQXBwSURTZXQS",
            "JgoIc2VhcmNoZXMYAiADKAsyFC5jbGFyaWZhaS5hcGkuU2VhcmNoEiwKCnBh",
            "Z2luYXRpb24YAyABKAsyGC5jbGFyaWZhaS5hcGkuUGFnaW5hdGlvbiJjCiRE",
            "ZWxldGVBbm5vdGF0aW9uU2VhcmNoTWV0cmljc1JlcXVlc3QSLwoLdXNlcl9h",
            "cHBfaWQYASABKAsyGi5jbGFyaWZhaS5hcGkuVXNlckFwcElEU2V0EgoKAmlk",
            "GAIgASgJIqIBChlQb3N0SW5wdXRzU2VhcmNoZXNSZXF1ZXN0Ei8KC3VzZXJf",
            "YXBwX2lkGAEgASgLMhouY2xhcmlmYWkuYXBpLlVzZXJBcHBJRFNldBImCghz",
            "ZWFyY2hlcxgCIAMoCzIULmNsYXJpZmFpLmFwaS5TZWFyY2gSLAoKcGFnaW5h",
            "dGlvbhgDIAEoCzIYLmNsYXJpZmFpLmFwaS5QYWdpbmF0aW9uImkKFFNpbmds",
            "ZVNlYXJjaFJlc3BvbnNlEisKBnN0YXR1cxgBIAEoCzIbLmNsYXJpZmFpLmFw",
            "aS5zdGF0dXMuU3RhdHVzEiQKBnNlYXJjaBgFIAEoCzIULmNsYXJpZmFpLmFw",
            "aS5TZWFyY2giwQEKE011bHRpU2VhcmNoUmVzcG9uc2USKwoGc3RhdHVzGAEg",
            "ASgLMhsuY2xhcmlmYWkuYXBpLnN0YXR1cy5TdGF0dXMSCgoCaWQYAiABKAkS",
            "JQoEaGl0cxgDIAMoCzIRLmNsYXJpZmFpLmFwaS5IaXRCBIC1GAESIgoFcXVl",
            "cnkYBCABKAsyEy5jbGFyaWZhaS5hcGkuUXVlcnkSJgoIc2VhcmNoZXMYBSAD",
            "KAsyFC5jbGFyaWZhaS5hcGkuU2VhcmNoIpQCCiJQb3N0QW5ub3RhdGlvblNl",
            "YXJjaE1ldHJpY3NSZXF1ZXN0Ei8KC3VzZXJfYXBwX2lkGAEgASgLMhouY2xh",
            "cmlmYWkuYXBpLlVzZXJBcHBJRFNldBIKCgJpZBgCIAEoCRIqCgxncm91bmRf",
            "dHJ1dGgYAyABKAsyFC5jbGFyaWZhaS5hcGkuU2VhcmNoEiwKDnNlYXJjaF90",
            "b19ldmFsGAQgASgLMhQuY2xhcmlmYWkuYXBpLlNlYXJjaBIgCgRkYXRhGAUg",
            "ASgLMhIuY2xhcmlmYWkuYXBpLkRhdGESNQoPZXZhbHVhdGlvbl90eXBlGAYg",
            "ASgOMhwuY2xhcmlmYWkuYXBpLkV2YWx1YXRpb25UeXBlImAKIUdldEFubm90",
            "YXRpb25TZWFyY2hNZXRyaWNzUmVxdWVzdBIvCgt1c2VyX2FwcF9pZBgBIAEo",
            "CzIaLmNsYXJpZmFpLmFwaS5Vc2VyQXBwSURTZXQSCgoCaWQYAiABKAkiVQoi",
            "TGlzdEFubm90YXRpb25TZWFyY2hNZXRyaWNzUmVxdWVzdBIvCgt1c2VyX2Fw",
            "cF9pZBgBIAEoCzIaLmNsYXJpZmFpLmFwaS5Vc2VyQXBwSURTZXQinQEKJE11",
            "bHRpQW5ub3RhdGlvblNlYXJjaE1ldHJpY3NSZXNwb25zZRIrCgZzdGF0dXMY",
            "ASABKAsyGy5jbGFyaWZhaS5hcGkuc3RhdHVzLlN0YXR1cxJIChlhbm5vdGF0",
            "aW9uX3NlYXJjaF9tZXRyaWNzGAIgAygLMiUuY2xhcmlmYWkuYXBpLkFubm90",
            "YXRpb25TZWFyY2hNZXRyaWNzIngKG1Bvc3RWYWxpZGF0ZVBhc3N3b3JkUmVx",
            "dWVzdBIvCgt1c2VyX2FwcF9pZBgBIAEoCzIaLmNsYXJpZmFpLmFwaS5Vc2Vy",
            "QXBwSURTZXQSKAoIcGFzc3dvcmQYAiABKAsyFi5jbGFyaWZhaS5hcGkuUGFz",
            "c3dvcmQijgEKIFNpbmdsZVBhc3N3b3JkVmFsaWRhdGlvblJlc3BvbnNlEisK",
            "BnN0YXR1cxgBIAEoCzIbLmNsYXJpZmFpLmFwaS5zdGF0dXMuU3RhdHVzEj0K",
            "E3Bhc3N3b3JkX3Zpb2xhdGlvbnMYAiABKAsyIC5jbGFyaWZhaS5hcGkuUGFz",
            "c3dvcmRWaW9sYXRpb25zInwKEkdldFdvcmtmbG93UmVxdWVzdBIvCgt1c2Vy",
            "X2FwcF9pZBgBIAEoCzIaLmNsYXJpZmFpLmFwaS5Vc2VyQXBwSURTZXQSEwoL",
            "d29ya2Zsb3dfaWQYAiABKAkSIAoYZmF2b3JfY2xhcmlmYWlfd29ya2Zsb3dz",
            "GAMgASgIIt4BChRMaXN0V29ya2Zsb3dzUmVxdWVzdBIvCgt1c2VyX2FwcF9p",
            "ZBgBIAEoCzIaLmNsYXJpZmFpLmFwaS5Vc2VyQXBwSURTZXQSDAoEcGFnZRgC",
            "IAEoDRIQCghwZXJfcGFnZRgDIAEoDRIWCg5zb3J0X2FzY2VuZGluZxgFIAEo",
            "CBIUCgpzb3J0X2J5X2lkGAYgASgISAASHQoTc29ydF9ieV9tb2RpZmllZF9h",
            "dBgHIAEoCEgAEg0KBXF1ZXJ5GAggASgJEg4KAmlkGAQgASgJQgIYAUIJCgdz",
            "b3J0X2J5InIKFFBvc3RXb3JrZmxvd3NSZXF1ZXN0Ei8KC3VzZXJfYXBwX2lk",
            "GAEgASgLMhouY2xhcmlmYWkuYXBpLlVzZXJBcHBJRFNldBIpCgl3b3JrZmxv",
            "d3MYAiADKAsyFi5jbGFyaWZhaS5hcGkuV29ya2Zsb3cigwEKFVBhdGNoV29y",
            "a2Zsb3dzUmVxdWVzdBIvCgt1c2VyX2FwcF9pZBgBIAEoCzIaLmNsYXJpZmFp",
            "LmFwaS5Vc2VyQXBwSURTZXQSKQoJd29ya2Zsb3dzGAIgAygLMhYuY2xhcmlm",
            "YWkuYXBpLldvcmtmbG93Eg4KBmFjdGlvbhgDIAEoCSJdChVEZWxldGVXb3Jr",
            "Zmxvd1JlcXVlc3QSLwoLdXNlcl9hcHBfaWQYASABKAsyGi5jbGFyaWZhaS5h",
            "cGkuVXNlckFwcElEU2V0EhMKC3dvcmtmbG93X2lkGAIgASgJImoKFkRlbGV0",
            "ZVdvcmtmbG93c1JlcXVlc3QSLwoLdXNlcl9hcHBfaWQYASABKAsyGi5jbGFy",
            "aWZhaS5hcGkuVXNlckFwcElEU2V0EgsKA2lkcxgCIAMoCRISCgpkZWxldGVf",
            "YWxsGAMgASgIIm8KFlNpbmdsZVdvcmtmbG93UmVzcG9uc2USKwoGc3RhdHVz",
            "GAEgASgLMhsuY2xhcmlmYWkuYXBpLnN0YXR1cy5TdGF0dXMSKAoId29ya2Zs",
            "b3cYAiABKAsyFi5jbGFyaWZhaS5hcGkuV29ya2Zsb3cidQoVTXVsdGlXb3Jr",
            "Zmxvd1Jlc3BvbnNlEisKBnN0YXR1cxgBIAEoCzIbLmNsYXJpZmFpLmFwaS5z",
            "dGF0dXMuU3RhdHVzEi8KCXdvcmtmbG93cxgCIAMoCzIWLmNsYXJpZmFpLmFw",
            "aS5Xb3JrZmxvd0IEgLUYASKRAgoaUG9zdFdvcmtmbG93UmVzdWx0c1JlcXVl",
            "c3QSLwoLdXNlcl9hcHBfaWQYASABKAsyGi5jbGFyaWZhaS5hcGkuVXNlckFw",
            "cElEU2V0EhMKC3dvcmtmbG93X2lkGAIgASgJEiMKBmlucHV0cxgDIAMoCzIT",
            "LmNsYXJpZmFpLmFwaS5JbnB1dBIxCg1vdXRwdXRfY29uZmlnGAQgASgLMhou",
            "Y2xhcmlmYWkuYXBpLk91dHB1dENvbmZpZxIgChhmYXZvcl9jbGFyaWZhaV93",
            "b3JrZmxvd3MYBSABKAgSMwoOd29ya2Zsb3dfc3RhdGUYBiABKAsyGy5jbGFy",
            "aWZhaS5hcGkuV29ya2Zsb3dTdGF0ZSLYAQobUG9zdFdvcmtmbG93UmVzdWx0",
            "c1Jlc3BvbnNlEisKBnN0YXR1cxgBIAEoCzIbLmNsYXJpZmFpLmFwaS5zdGF0",
            "dXMuU3RhdHVzEigKCHdvcmtmbG93GAIgASgLMhYuY2xhcmlmYWkuYXBpLldv",
            "cmtmbG93Ei0KB3Jlc3VsdHMYAyADKAsyHC5jbGFyaWZhaS5hcGkuV29ya2Zs",
            "b3dSZXN1bHQSMwoOd29ya2Zsb3dfc3RhdGUYBCABKAsyGy5jbGFyaWZhaS5h",
            "cGkuV29ya2Zsb3dTdGF0ZSL9AQokUG9zdFdvcmtmbG93UmVzdWx0c1NpbWls",
            "YXJpdHlSZXF1ZXN0Ei8KC3VzZXJfYXBwX2lkGAEgASgLMhouY2xhcmlmYWku",
            "YXBpLlVzZXJBcHBJRFNldBITCgt3b3JrZmxvd19pZBgCIAEoCRIYChBtb2Rl",
            "bF92ZXJzaW9uX2lkGAMgASgJEikKDHByb2JlX2lucHV0cxgEIAMoCzITLmNs",
            "YXJpZmFpLmFwaS5JbnB1dBIoCgtwb29sX2lucHV0cxgFIAMoCzITLmNsYXJp",
            "ZmFpLmFwaS5JbnB1dBIgChhmYXZvcl9jbGFyaWZhaV93b3JrZmxvd3MYBiAB",
            "KAgijgEKJVBvc3RXb3JrZmxvd1Jlc3VsdHNTaW1pbGFyaXR5UmVzcG9uc2US",
            "KwoGc3RhdHVzGAEgASgLMhsuY2xhcmlmYWkuYXBpLnN0YXR1cy5TdGF0dXMS",
            "OAoHcmVzdWx0cxgCIAMoCzInLmNsYXJpZmFpLmFwaS5Xb3JrZmxvd1Jlc3Vs",
            "dHNTaW1pbGFyaXR5IoUBChpQb3N0QXBwRHVwbGljYXRpb25zUmVxdWVzdBIv",
            "Cgt1c2VyX2FwcF9pZBgBIAEoCzIaLmNsYXJpZmFpLmFwaS5Vc2VyQXBwSURT",
            "ZXQSNgoQYXBwX2R1cGxpY2F0aW9ucxgCIAMoCzIcLmNsYXJpZmFpLmFwaS5B",
            "cHBEdXBsaWNhdGlvbiJnChhHZXRBcHBEdXBsaWNhdGlvblJlcXVlc3QSLwoL",
            "dXNlcl9hcHBfaWQYASABKAsyGi5jbGFyaWZhaS5hcGkuVXNlckFwcElEU2V0",
            "EhoKEmFwcF9kdXBsaWNhdGlvbl9pZBgCIAEoCSJtChpMaXN0QXBwRHVwbGlj",
            "YXRpb25zUmVxdWVzdBIvCgt1c2VyX2FwcF9pZBgBIAEoCzIaLmNsYXJpZmFp",
            "LmFwaS5Vc2VyQXBwSURTZXQSDAoEcGFnZRgCIAEoDRIQCghwZXJfcGFnZRgD",
            "IAEoDSKDAQocTXVsdGlBcHBEdXBsaWNhdGlvbnNSZXNwb25zZRIrCgZzdGF0",
            "dXMYASABKAsyGy5jbGFyaWZhaS5hcGkuc3RhdHVzLlN0YXR1cxI2ChBhcHBf",
            "ZHVwbGljYXRpb25zGAIgAygLMhwuY2xhcmlmYWkuYXBpLkFwcER1cGxpY2F0",
            "aW9uIoIBChxTaW5nbGVBcHBEdXBsaWNhdGlvblJlc3BvbnNlEisKBnN0YXR1",
            "cxgBIAEoCzIbLmNsYXJpZmFpLmFwaS5zdGF0dXMuU3RhdHVzEjUKD2FwcF9k",
            "dXBsaWNhdGlvbhgCIAEoCzIcLmNsYXJpZmFpLmFwaS5BcHBEdXBsaWNhdGlv",
            "biJmChBQb3N0VGFza3NSZXF1ZXN0Ei8KC3VzZXJfYXBwX2lkGAEgASgLMhou",
            "Y2xhcmlmYWkuYXBpLlVzZXJBcHBJRFNldBIhCgV0YXNrcxgCIAMoCzISLmNs",
            "YXJpZmFpLmFwaS5UYXNrIlIKDkdldFRhc2tSZXF1ZXN0Ei8KC3VzZXJfYXBw",
            "X2lkGAEgASgLMhouY2xhcmlmYWkuYXBpLlVzZXJBcHBJRFNldBIPCgd0YXNr",
            "X2lkGAIgASgJIroBChBMaXN0VGFza3NSZXF1ZXN0Ei8KC3VzZXJfYXBwX2lk",
            "GAEgASgLMhouY2xhcmlmYWkuYXBpLlVzZXJBcHBJRFNldBIMCgRwYWdlGAIg",
            "ASgNEhAKCHBlcl9wYWdlGAMgASgNEhcKD3dvcmtlcl91c2VyX2lkcxgEIAMo",
            "CRIXCg9yZXZpZXdfdXNlcl9pZHMYBSADKAkSIwobaW5jbHVkaW5nX2xhYmVs",
            "X29yZGVyX3Rhc2tzGAYgASgIIncKEVBhdGNoVGFza3NSZXF1ZXN0Ei8KC3Vz",
            "ZXJfYXBwX2lkGAEgASgLMhouY2xhcmlmYWkuYXBpLlVzZXJBcHBJRFNldBIh",
            "CgV0YXNrcxgCIAMoCzISLmNsYXJpZmFpLmFwaS5UYXNrEg4KBmFjdGlvbhgD",
            "IAEoCSJSChJEZWxldGVUYXNrc1JlcXVlc3QSLwoLdXNlcl9hcHBfaWQYASAB",
            "KAsyGi5jbGFyaWZhaS5hcGkuVXNlckFwcElEU2V0EgsKA2lkcxgCIAMoCSJp",
            "ChFNdWx0aVRhc2tSZXNwb25zZRIrCgZzdGF0dXMYASABKAsyGy5jbGFyaWZh",
            "aS5hcGkuc3RhdHVzLlN0YXR1cxInCgV0YXNrcxgCIAMoCzISLmNsYXJpZmFp",
            "LmFwaS5UYXNrQgSAtRgBImMKElNpbmdsZVRhc2tSZXNwb25zZRIrCgZzdGF0",
            "dXMYASABKAsyGy5jbGFyaWZhaS5hcGkuc3RhdHVzLlN0YXR1cxIgCgR0YXNr",
            "GAIgASgLMhIuY2xhcmlmYWkuYXBpLlRhc2siaQoTR2V0VGFza0NvdW50UmVx",
            "dWVzdBIvCgt1c2VyX2FwcF9pZBgBIAEoCzIaLmNsYXJpZmFpLmFwaS5Vc2Vy",
            "QXBwSURTZXQSDwoHdGFza19pZBgCIAEoCRIQCgh1c2VyX2lkcxgDIAMoCSKd",
            "AQoXU2luZ2xlVGFza0NvdW50UmVzcG9uc2USKwoGc3RhdHVzGAEgASgLMhsu",
            "Y2xhcmlmYWkuYXBpLnN0YXR1cy5TdGF0dXMSDgoGYXBwX2lkGAIgASgJEg8K",
            "B3Rhc2tfaWQYAyABKAkSNAoGY291bnRzGAQgAygLMiQuY2xhcmlmYWkuYXBp",
            "LlRhc2tTdGF0dXNDb3VudFBlclVzZXIidQoVUG9zdENvbGxlY3RvcnNSZXF1",
            "ZXN0Ei8KC3VzZXJfYXBwX2lkGAEgASgLMhouY2xhcmlmYWkuYXBpLlVzZXJB",
            "cHBJRFNldBIrCgpjb2xsZWN0b3JzGAIgAygLMhcuY2xhcmlmYWkuYXBpLkNv",
            "bGxlY3RvciKGAQoWUGF0Y2hDb2xsZWN0b3JzUmVxdWVzdBIvCgt1c2VyX2Fw",
            "cF9pZBgBIAEoCzIaLmNsYXJpZmFpLmFwaS5Vc2VyQXBwSURTZXQSKwoKY29s",
            "bGVjdG9ycxgCIAMoCzIXLmNsYXJpZmFpLmFwaS5Db2xsZWN0b3ISDgoGYWN0",
            "aW9uGAMgASgJImsKF0RlbGV0ZUNvbGxlY3RvcnNSZXF1ZXN0Ei8KC3VzZXJf",
            "YXBwX2lkGAEgASgLMhouY2xhcmlmYWkuYXBpLlVzZXJBcHBJRFNldBILCgNp",
            "ZHMYAiADKAkSEgoKZGVsZXRlX2FsbBgDIAEoCCJcChNHZXRDb2xsZWN0b3JS",
            "ZXF1ZXN0Ei8KC3VzZXJfYXBwX2lkGAEgASgLMhouY2xhcmlmYWkuYXBpLlVz",
            "ZXJBcHBJRFNldBIUCgxjb2xsZWN0b3JfaWQYAiABKAkiaAoVTGlzdENvbGxl",
            "Y3RvcnNSZXF1ZXN0Ei8KC3VzZXJfYXBwX2lkGAEgASgLMhouY2xhcmlmYWku",
            "YXBpLlVzZXJBcHBJRFNldBIMCgRwYWdlGAIgASgNEhAKCHBlcl9wYWdlGAMg",
            "ASgNInIKFk11bHRpQ29sbGVjdG9yUmVzcG9uc2USKwoGc3RhdHVzGAEgASgL",
            "MhsuY2xhcmlmYWkuYXBpLnN0YXR1cy5TdGF0dXMSKwoKY29sbGVjdG9ycxgC",
            "IAMoCzIXLmNsYXJpZmFpLmFwaS5Db2xsZWN0b3IicgoXU2luZ2xlQ29sbGVj",
            "dG9yUmVzcG9uc2USKwoGc3RhdHVzGAEgASgLMhsuY2xhcmlmYWkuYXBpLnN0",
            "YXR1cy5TdGF0dXMSKgoJY29sbGVjdG9yGAIgASgLMhcuY2xhcmlmYWkuYXBp",
            "LkNvbGxlY3RvciJ2ChVQb3N0U3RhdFZhbHVlc1JlcXVlc3QSLwoLdXNlcl9h",
            "cHBfaWQYASABKAsyGi5jbGFyaWZhaS5hcGkuVXNlckFwcElEU2V0EiwKC3N0",
            "YXRfdmFsdWVzGAIgAygLMhcuY2xhcmlmYWkuYXBpLlN0YXRWYWx1ZSJ5ChZN",
            "dWx0aVN0YXRWYWx1ZVJlc3BvbnNlEisKBnN0YXR1cxgBIAEoCzIbLmNsYXJp",
            "ZmFpLmFwaS5zdGF0dXMuU3RhdHVzEjIKC3N0YXRfdmFsdWVzGAIgAygLMhcu",
            "Y2xhcmlmYWkuYXBpLlN0YXRWYWx1ZUIEgLUYASKeAQoeUG9zdFN0YXRWYWx1",
            "ZXNBZ2dyZWdhdGVSZXF1ZXN0Ei8KC3VzZXJfYXBwX2lkGAEgASgLMhouY2xh",
            "cmlmYWkuYXBpLlVzZXJBcHBJRFNldBJLChxzdGF0X3ZhbHVlX2FnZ3JlZ2F0",
            "ZV9xdWVyaWVzGAIgAygLMiUuY2xhcmlmYWkuYXBpLlN0YXRWYWx1ZUFnZ3Jl",
            "Z2F0ZVF1ZXJ5IpwBCh9NdWx0aVN0YXRWYWx1ZUFnZ3JlZ2F0ZVJlc3BvbnNl",
            "EisKBnN0YXR1cxgBIAEoCzIbLmNsYXJpZmFpLmFwaS5zdGF0dXMuU3RhdHVz",
            "EkwKHHN0YXRfdmFsdWVfYWdncmVnYXRlX3Jlc3VsdHMYAiADKAsyJi5jbGFy",
            "aWZhaS5hcGkuU3RhdFZhbHVlQWdncmVnYXRlUmVzdWx0KnAKHE9yZ2FuaXph",
            "dGlvbkludml0YXRpb25TdGF0dXMSCwoHTk9UX1NFVBAAEgsKB1BFTkRJTkcQ",
            "ARIMCghBQ0NFUFRFRBACEg0KCUNBTkNFTExFRBADEgwKCERFQ0xJTkVEEAQS",
            "CwoHRVhQSVJFRBAFMpfHAQoCVjISqgIKFExpc3RDb25jZXB0UmVsYXRpb25z",
            "EikuY2xhcmlmYWkuYXBpLkxpc3RDb25jZXB0UmVsYXRpb25zUmVxdWVzdBoq",
            "LmNsYXJpZmFpLmFwaS5NdWx0aUNvbmNlcHRSZWxhdGlvblJlc3BvbnNlIroB",
            "gtPkkwKrARJZL3YyL3VzZXJzL3t1c2VyX2FwcF9pZC51c2VyX2lkfS9hcHBz",
            "L3t1c2VyX2FwcF9pZC5hcHBfaWR9L2NvbmNlcHRzL3tjb25jZXB0X2lkfS9y",
            "ZWxhdGlvbnNaThJML3YyL3VzZXJzL3t1c2VyX2FwcF9pZC51c2VyX2lkfS9h",
            "cHBzL3t1c2VyX2FwcF9pZC5hcHBfaWR9L2NvbmNlcHRzL3JlbGF0aW9uc5ic",
            "JwWQnCcLEt8BChRQb3N0Q29uY2VwdFJlbGF0aW9ucxIpLmNsYXJpZmFpLmFw",
            "aS5Qb3N0Q29uY2VwdFJlbGF0aW9uc1JlcXVlc3QaKi5jbGFyaWZhaS5hcGku",
            "TXVsdGlDb25jZXB0UmVsYXRpb25SZXNwb25zZSJwgtPkkwJeIlkvdjIvdXNl",
            "cnMve3VzZXJfYXBwX2lkLnVzZXJfaWR9L2FwcHMve3VzZXJfYXBwX2lkLmFw",
            "cF9pZH0vY29uY2VwdHMve2NvbmNlcHRfaWR9L3JlbGF0aW9uczoBKpicJwWQ",
            "nCcKkJwnCxLeAQoWRGVsZXRlQ29uY2VwdFJlbGF0aW9ucxIrLmNsYXJpZmFp",
            "LmFwaS5EZWxldGVDb25jZXB0UmVsYXRpb25zUmVxdWVzdBohLmNsYXJpZmFp",
            "LmFwaS5zdGF0dXMuQmFzZVJlc3BvbnNlInSC0+STAl4qWS92Mi91c2Vycy97",
            "dXNlcl9hcHBfaWQudXNlcl9pZH0vYXBwcy97dXNlcl9hcHBfaWQuYXBwX2lk",
            "fS9jb25jZXB0cy97Y29uY2VwdF9pZH0vcmVsYXRpb25zOgEqmJwnBZCcJw2Q",
            "nCcKkJwnCxLcAQoQR2V0Q29uY2VwdENvdW50cxIlLmNsYXJpZmFpLmFwaS5H",
            "ZXRDb25jZXB0Q291bnRzUmVxdWVzdBonLmNsYXJpZmFpLmFwaS5NdWx0aUNv",
            "bmNlcHRDb3VudFJlc3BvbnNlIniC0+STAmISSS92Mi91c2Vycy97dXNlcl9h",
            "cHBfaWQudXNlcl9pZH0vYXBwcy97dXNlcl9hcHBfaWQuYXBwX2lkfS9jb25j",
            "ZXB0cy9zdGF0dXNaFRITL3YyL2NvbmNlcHRzL3N0YXR1c5icJwKQnCcmkJwn",
            "C5CcJwUS0AEKCkdldENvbmNlcHQSHy5jbGFyaWZhaS5hcGkuR2V0Q29uY2Vw",
            "dFJlcXVlc3QaIy5jbGFyaWZhaS5hcGkuU2luZ2xlQ29uY2VwdFJlc3BvbnNl",
            "InyC0+STAm4STy92Mi91c2Vycy97dXNlcl9hcHBfaWQudXNlcl9pZH0vYXBw",
            "cy97dXNlcl9hcHBfaWQuYXBwX2lkfS9jb25jZXB0cy97Y29uY2VwdF9pZH1a",
            "GxIZL3YyL2NvbmNlcHRzL3tjb25jZXB0X2lkfZicJwKQnCcLErkBCgxMaXN0",
            "Q29uY2VwdHMSIS5jbGFyaWZhaS5hcGkuTGlzdENvbmNlcHRzUmVxdWVzdBoi",
            "LmNsYXJpZmFpLmFwaS5NdWx0aUNvbmNlcHRSZXNwb25zZSJigtPkkwJUEkIv",
            "djIvdXNlcnMve3VzZXJfYXBwX2lkLnVzZXJfaWR9L2FwcHMve3VzZXJfYXBw",
            "X2lkLmFwcF9pZH0vY29uY2VwdHNaDhIML3YyL2NvbmNlcHRzmJwnApCcJwsS",
            "6gEKFFBvc3RDb25jZXB0c1NlYXJjaGVzEikuY2xhcmlmYWkuYXBpLlBvc3RD",
            "b25jZXB0c1NlYXJjaGVzUmVxdWVzdBoiLmNsYXJpZmFpLmFwaS5NdWx0aUNv",
            "bmNlcHRSZXNwb25zZSKCAYLT5JMCbCJLL3YyL3VzZXJzL3t1c2VyX2FwcF9p",
            "ZC51c2VyX2lkfS9hcHBzL3t1c2VyX2FwcF9pZC5hcHBfaWR9L2NvbmNlcHRz",
            "L3NlYXJjaGVzOgEqWhoiFS92Mi9jb25jZXB0cy9zZWFyY2hlczoBKpicJwKQ",
            "nCcLkJwnD5CcJxMSwwEKDFBvc3RDb25jZXB0cxIhLmNsYXJpZmFpLmFwaS5Q",
            "b3N0Q29uY2VwdHNSZXF1ZXN0GiIuY2xhcmlmYWkuYXBpLk11bHRpQ29uY2Vw",
            "dFJlc3BvbnNlImyC0+STAloiQi92Mi91c2Vycy97dXNlcl9hcHBfaWQudXNl",
            "cl9pZH0vYXBwcy97dXNlcl9hcHBfaWQuYXBwX2lkfS9jb25jZXB0czoBKloR",
            "IgwvdjIvY29uY2VwdHM6ASqYnCcCkJwnCpCcJwsSxQEKDVBhdGNoQ29uY2Vw",
            "dHMSIi5jbGFyaWZhaS5hcGkuUGF0Y2hDb25jZXB0c1JlcXVlc3QaIi5jbGFy",
            "aWZhaS5hcGkuTXVsdGlDb25jZXB0UmVzcG9uc2UibILT5JMCWjJCL3YyL3Vz",
            "ZXJzL3t1c2VyX2FwcF9pZC51c2VyX2lkfS9hcHBzL3t1c2VyX2FwcF9pZC5h",
            "cHBfaWR9L2NvbmNlcHRzOgEqWhEyDC92Mi9jb25jZXB0czoBKpicJwKQnCcK",
            "kJwnCxKUAgoSR2V0Q29uY2VwdExhbmd1YWdlEicuY2xhcmlmYWkuYXBpLkdl",
            "dENvbmNlcHRMYW5ndWFnZVJlcXVlc3QaKy5jbGFyaWZhaS5hcGkuU2luZ2xl",
            "Q29uY2VwdExhbmd1YWdlUmVzcG9uc2UipwGC0+STApgBEmQvdjIvdXNlcnMv",
            "e3VzZXJfYXBwX2lkLnVzZXJfaWR9L2FwcHMve3VzZXJfYXBwX2lkLmFwcF9p",
            "ZH0vY29uY2VwdHMve2NvbmNlcHRfaWR9L2xhbmd1YWdlcy97bGFuZ3VhZ2V9",
            "WjASLi92Mi9jb25jZXB0cy97Y29uY2VwdF9pZH0vbGFuZ3VhZ2VzL3tsYW5n",
            "dWFnZX2YnCcCkJwnCxKBAgoUTGlzdENvbmNlcHRMYW5ndWFnZXMSKS5jbGFy",
            "aWZhaS5hcGkuTGlzdENvbmNlcHRMYW5ndWFnZXNSZXF1ZXN0GiouY2xhcmlm",
            "YWkuYXBpLk11bHRpQ29uY2VwdExhbmd1YWdlUmVzcG9uc2UikQGC0+STAoIB",
            "ElkvdjIvdXNlcnMve3VzZXJfYXBwX2lkLnVzZXJfaWR9L2FwcHMve3VzZXJf",
            "YXBwX2lkLmFwcF9pZH0vY29uY2VwdHMve2NvbmNlcHRfaWR9L2xhbmd1YWdl",
            "c1olEiMvdjIvY29uY2VwdHMve2NvbmNlcHRfaWR9L2xhbmd1YWdlc5icJwKQ",
            "nCcLEosCChRQb3N0Q29uY2VwdExhbmd1YWdlcxIpLmNsYXJpZmFpLmFwaS5Q",
            "b3N0Q29uY2VwdExhbmd1YWdlc1JlcXVlc3QaKi5jbGFyaWZhaS5hcGkuTXVs",
            "dGlDb25jZXB0TGFuZ3VhZ2VSZXNwb25zZSKbAYLT5JMCiAEiWS92Mi91c2Vy",
            "cy97dXNlcl9hcHBfaWQudXNlcl9pZH0vYXBwcy97dXNlcl9hcHBfaWQuYXBw",
            "X2lkfS9jb25jZXB0cy97Y29uY2VwdF9pZH0vbGFuZ3VhZ2VzOgEqWigiIy92",
            "Mi9jb25jZXB0cy97Y29uY2VwdF9pZH0vbGFuZ3VhZ2VzOgEqmJwnApCcJwqQ",
            "nCcLEo0CChVQYXRjaENvbmNlcHRMYW5ndWFnZXMSKi5jbGFyaWZhaS5hcGku",
            "UGF0Y2hDb25jZXB0TGFuZ3VhZ2VzUmVxdWVzdBoqLmNsYXJpZmFpLmFwaS5N",
            "dWx0aUNvbmNlcHRMYW5ndWFnZVJlc3BvbnNlIpsBgtPkkwKIATJZL3YyL3Vz",
            "ZXJzL3t1c2VyX2FwcF9pZC51c2VyX2lkfS9hcHBzL3t1c2VyX2FwcF9pZC5h",
            "cHBfaWR9L2NvbmNlcHRzL3tjb25jZXB0X2lkfS9sYW5ndWFnZXM6ASpaKDIj",
            "L3YyL2NvbmNlcHRzL3tjb25jZXB0X2lkfS9sYW5ndWFnZXM6ASqYnCcCkJwn",
            "CpCcJwsS8QEKE0xpc3RLbm93bGVkZ2VHcmFwaHMSKC5jbGFyaWZhaS5hcGku",
            "TGlzdEtub3dsZWRnZUdyYXBoc1JlcXVlc3QaKS5jbGFyaWZhaS5hcGkuTXVs",
            "dGlLbm93bGVkZ2VHcmFwaFJlc3BvbnNlIoQBgtPkkwJ2ElMvdjIvdXNlcnMv",
            "e3VzZXJfYXBwX2lkLnVzZXJfaWR9L2FwcHMve3VzZXJfYXBwX2lkLmFwcF9p",
            "ZH0vY29uY2VwdHMva25vd2xlZGdlX2dyYXBoc1ofEh0vdjIvY29uY2VwdHMv",
            "a25vd2xlZGdlX2dyYXBoc5icJwKQnCcLEvsBChNQb3N0S25vd2xlZGdlR3Jh",
            "cGhzEiguY2xhcmlmYWkuYXBpLlBvc3RLbm93bGVkZ2VHcmFwaHNSZXF1ZXN0",
            "GikuY2xhcmlmYWkuYXBpLk11bHRpS25vd2xlZGdlR3JhcGhSZXNwb25zZSKO",
            "AYLT5JMCfCJTL3YyL3VzZXJzL3t1c2VyX2FwcF9pZC51c2VyX2lkfS9hcHBz",
            "L3t1c2VyX2FwcF9pZC5hcHBfaWR9L2NvbmNlcHRzL2tub3dsZWRnZV9ncmFw",
            "aHM6ASpaIiIdL3YyL2NvbmNlcHRzL2tub3dsZWRnZV9ncmFwaHM6ASqYnCcC",
            "kJwnCpCcJwsS/gEKFlBvc3RDb25jZXB0TWFwcGluZ0pvYnMSKy5jbGFyaWZh",
            "aS5hcGkuUG9zdENvbmNlcHRNYXBwaW5nSm9ic1JlcXVlc3QaLC5jbGFyaWZh",
            "aS5hcGkuTXVsdGlDb25jZXB0TWFwcGluZ0pvYlJlc3BvbnNlIogBgtPkkwJ2",
            "IlAvdjIvdXNlcnMve3VzZXJfYXBwX2lkLnVzZXJfaWR9L2FwcHMve3VzZXJf",
            "YXBwX2lkLmFwcF9pZH0vY29uY2VwdHMvbWFwcGluZ3Mvam9iczoBKlofIhov",
            "djIvY29uY2VwdHMvbWFwcGluZ3Mvam9iczoBKpicJwKQnCcKkJwnCxKTAgoN",
            "R2V0QW5ub3RhdGlvbhIiLmNsYXJpZmFpLmFwaS5HZXRBbm5vdGF0aW9uUmVx",
            "dWVzdBomLmNsYXJpZmFpLmFwaS5TaW5nbGVBbm5vdGF0aW9uUmVzcG9uc2Ui",
            "tQGC0+STAp4BEmcvdjIvdXNlcnMve3VzZXJfYXBwX2lkLnVzZXJfaWR9L2Fw",
            "cHMve3VzZXJfYXBwX2lkLmFwcF9pZH0vaW5wdXRzL3tpbnB1dF9pZH0vYW5u",
            "b3RhdGlvbnMve2Fubm90YXRpb25faWR9WjMSMS92Mi9pbnB1dHMve2lucHV0",
            "X2lkfS9hbm5vdGF0aW9ucy97YW5ub3RhdGlvbl9pZH2YnCcCkJwnJpCcJwuQ",
            "nCcPEtABCg9MaXN0QW5ub3RhdGlvbnMSJC5jbGFyaWZhaS5hcGkuTGlzdEFu",
            "bm90YXRpb25zUmVxdWVzdBolLmNsYXJpZmFpLmFwaS5NdWx0aUFubm90YXRp",
            "b25SZXNwb25zZSJwgtPkkwJaEkUvdjIvdXNlcnMve3VzZXJfYXBwX2lkLnVz",
            "ZXJfaWR9L2FwcHMve3VzZXJfYXBwX2lkLmFwcF9pZH0vYW5ub3RhdGlvbnNa",
            "ERIPL3YyL2Fubm90YXRpb25zmJwnApCcJyaQnCcLkJwnDxLjAQoPUG9zdEFu",
            "bm90YXRpb25zEiQuY2xhcmlmYWkuYXBpLlBvc3RBbm5vdGF0aW9uc1JlcXVl",
            "c3QaJS5jbGFyaWZhaS5hcGkuTXVsdGlBbm5vdGF0aW9uUmVzcG9uc2UiggGC",
            "0+STAmAiRS92Mi91c2Vycy97dXNlcl9hcHBfaWQudXNlcl9pZH0vYXBwcy97",
            "dXNlcl9hcHBfaWQuYXBwX2lkfS9hbm5vdGF0aW9uczoBKloUIg8vdjIvYW5u",
            "b3RhdGlvbnM6ASqYnCcCkJwnBZCcJyWQnCcmkJwnC5CcJw+QnCcTEuUBChBQ",
            "YXRjaEFubm90YXRpb25zEiUuY2xhcmlmYWkuYXBpLlBhdGNoQW5ub3RhdGlv",
            "bnNSZXF1ZXN0GiUuY2xhcmlmYWkuYXBpLk11bHRpQW5ub3RhdGlvblJlc3Bv",
            "bnNlIoIBgtPkkwJgMkUvdjIvdXNlcnMve3VzZXJfYXBwX2lkLnVzZXJfaWR9",
            "L2FwcHMve3VzZXJfYXBwX2lkLmFwcF9pZH0vYW5ub3RhdGlvbnM6ASpaFDIP",
            "L3YyL2Fubm90YXRpb25zOgEqmJwnApCcJwWQnCclkJwnJpCcJwuQnCcTkJwn",
            "DxLzAQoWUGF0Y2hBbm5vdGF0aW9uc1N0YXR1cxIrLmNsYXJpZmFpLmFwaS5Q",
            "YXRjaEFubm90YXRpb25zU3RhdHVzUmVxdWVzdBosLmNsYXJpZmFpLmFwaS5Q",
            "YXRjaEFubm90YXRpb25zU3RhdHVzUmVzcG9uc2UifoLT5JMCYDJbL3YyL3Vz",
            "ZXJzL3t1c2VyX2FwcF9pZC51c2VyX2lkfS9hcHBzL3t1c2VyX2FwcF9pZC5h",
            "cHBfaWR9L3Rhc2sve3Rhc2tfaWR9L2Fubm90YXRpb25zL3N0YXR1czoBKpic",
            "JwKQnCclkJwnJpCcJwuQnCcTkJwnDxKcAgoQRGVsZXRlQW5ub3RhdGlvbhIl",
            "LmNsYXJpZmFpLmFwaS5EZWxldGVBbm5vdGF0aW9uUmVxdWVzdBohLmNsYXJp",
            "ZmFpLmFwaS5zdGF0dXMuQmFzZVJlc3BvbnNlIr0BgtPkkwKeASpnL3YyL3Vz",
            "ZXJzL3t1c2VyX2FwcF9pZC51c2VyX2lkfS9hcHBzL3t1c2VyX2FwcF9pZC5h",
            "cHBfaWR9L2lucHV0cy97aW5wdXRfaWR9L2Fubm90YXRpb25zL3thbm5vdGF0",
            "aW9uX2lkfVozKjEvdjIvaW5wdXRzL3tpbnB1dF9pZH0vYW5ub3RhdGlvbnMv",
            "e2Fubm90YXRpb25faWR9mJwnApCcJyWQnCcokJwnJpCcJxOQnCcPEtACChFE",
            "ZWxldGVBbm5vdGF0aW9ucxImLmNsYXJpZmFpLmFwaS5EZWxldGVBbm5vdGF0",
            "aW9uc1JlcXVlc3QaIS5jbGFyaWZhaS5hcGkuc3RhdHVzLkJhc2VSZXNwb25z",
            "ZSLvAYLT5JMC0AEqTC92Mi91c2Vycy97dXNlcl9hcHBfaWQudXNlcl9pZH0v",
            "YXBwcy97dXNlcl9hcHBfaWQuYXBwX2lkfS9pbnB1dHMvYW5ub3RhdGlvbnM6",
            "ASpaGyoWL3YyL2lucHV0cy9hbm5vdGF0aW9uczoBKlpKKkUvdjIvdXNlcnMv",
            "e3VzZXJfYXBwX2lkLnVzZXJfaWR9L2FwcHMve3VzZXJfYXBwX2lkLmFwcF9p",
            "ZH0vYW5ub3RhdGlvbnM6ASpaFCoPL3YyL2Fubm90YXRpb25zOgEqmJwnApCc",
            "JyWQnCcokJwnJpCcJxOQnCcPEoECChdQb3N0QW5ub3RhdGlvbnNTZWFyY2hl",
            "cxIsLmNsYXJpZmFpLmFwaS5Qb3N0QW5ub3RhdGlvbnNTZWFyY2hlc1JlcXVl",
            "c3QaIS5jbGFyaWZhaS5hcGkuTXVsdGlTZWFyY2hSZXNwb25zZSKUAYLT5JMC",
            "ciJOL3YyL3VzZXJzL3t1c2VyX2FwcF9pZC51c2VyX2lkfS9hcHBzL3t1c2Vy",
            "X2FwcF9pZC5hcHBfaWR9L2Fubm90YXRpb25zL3NlYXJjaGVzOgEqWh0iGC92",
            "Mi9hbm5vdGF0aW9ucy9zZWFyY2hlczoBKpicJwKQnCcmkJwnC5CcJwWQnCcP",
            "kJwnA5CcJxMS0QEKDUdldElucHV0Q291bnQSIi5jbGFyaWZhaS5hcGkuR2V0",
            "SW5wdXRDb3VudFJlcXVlc3QaJi5jbGFyaWZhaS5hcGkuU2luZ2xlSW5wdXRD",
            "b3VudFJlc3BvbnNlInSC0+STAl4SRy92Mi91c2Vycy97dXNlcl9hcHBfaWQu",
            "dXNlcl9pZH0vYXBwcy97dXNlcl9hcHBfaWQuYXBwX2lkfS9pbnB1dHMvc3Rh",
            "dHVzWhMSES92Mi9pbnB1dHMvc3RhdHVzmJwnApCcJyaQnCcLkJwnBRLJAQoM",
            "U3RyZWFtSW5wdXRzEiEuY2xhcmlmYWkuYXBpLlN0cmVhbUlucHV0c1JlcXVl",
            "c3QaIC5jbGFyaWZhaS5hcGkuTXVsdGlJbnB1dFJlc3BvbnNlInSC0+STAl4S",
            "Ry92Mi91c2Vycy97dXNlcl9hcHBfaWQudXNlcl9pZH0vYXBwcy97dXNlcl9h",
            "cHBfaWQuYXBwX2lkfS9pbnB1dHMvc3RyZWFtWhMSES92Mi9pbnB1dHMvc3Ry",
            "ZWFtmJwnApCcJyaQnCcLkJwnBRL9AQoPR2V0SW5wdXRTYW1wbGVzEiQuY2xh",
            "cmlmYWkuYXBpLkdldElucHV0U2FtcGxlc1JlcXVlc3QaKi5jbGFyaWZhaS5h",
            "cGkuTXVsdGlJbnB1dEFubm90YXRpb25SZXNwb25zZSKXAYLT5JMCgAESWC92",
            "Mi91c2Vycy97dXNlcl9hcHBfaWQudXNlcl9pZH0vYXBwcy97dXNlcl9hcHBf",
            "aWQuYXBwX2lkfS90YXNrcy97dGFza19pZH0vaW5wdXRzL3NhbXBsZXNaJBIi",
            "L3YyL3Rhc2tzL3t0YXNrX2lkfS9pbnB1dHMvc2FtcGxlc5icJwKQnCcmkJwn",
            "C5CcJwUSygEKCEdldElucHV0Eh0uY2xhcmlmYWkuYXBpLkdldElucHV0UmVx",
            "dWVzdBohLmNsYXJpZmFpLmFwaS5TaW5nbGVJbnB1dFJlc3BvbnNlInyC0+ST",
            "AmYSSy92Mi91c2Vycy97dXNlcl9hcHBfaWQudXNlcl9pZH0vYXBwcy97dXNl",
            "cl9hcHBfaWQuYXBwX2lkfS9pbnB1dHMve2lucHV0X2lkfVoXEhUvdjIvaW5w",
            "dXRzL3tpbnB1dF9pZH2YnCcCkJwnJpCcJwuQnCcFErcBCgpMaXN0SW5wdXRz",
            "Eh8uY2xhcmlmYWkuYXBpLkxpc3RJbnB1dHNSZXF1ZXN0GiAuY2xhcmlmYWku",
            "YXBpLk11bHRpSW5wdXRSZXNwb25zZSJmgtPkkwJQEkAvdjIvdXNlcnMve3Vz",
            "ZXJfYXBwX2lkLnVzZXJfaWR9L2FwcHMve3VzZXJfYXBwX2lkLmFwcF9pZH0v",
            "aW5wdXRzWgwSCi92Mi9pbnB1dHOYnCcCkJwnJpCcJwuQnCcFEtIBCgpQb3N0",
            "SW5wdXRzEh8uY2xhcmlmYWkuYXBpLlBvc3RJbnB1dHNSZXF1ZXN0GiAuY2xh",
            "cmlmYWkuYXBpLk11bHRpSW5wdXRSZXNwb25zZSKAAYLT5JMCViJAL3YyL3Vz",
            "ZXJzL3t1c2VyX2FwcF9pZC51c2VyX2lkfS9hcHBzL3t1c2VyX2FwcF9pZC5h",
            "cHBfaWR9L2lucHV0czoBKloPIgovdjIvaW5wdXRzOgEqmJwnApCcJyWQnCcm",
            "kJwnC5CcJwSQnCcFkJwnD5CcJwKQnCcTEssBCgtQYXRjaElucHV0cxIgLmNs",
            "YXJpZmFpLmFwaS5QYXRjaElucHV0c1JlcXVlc3QaIC5jbGFyaWZhaS5hcGku",
            "TXVsdGlJbnB1dFJlc3BvbnNlIniC0+STAlYyQC92Mi91c2Vycy97dXNlcl9h",
            "cHBfaWQudXNlcl9pZH0vYXBwcy97dXNlcl9hcHBfaWQuYXBwX2lkfS9pbnB1",
            "dHM6ASpaDzIKL3YyL2lucHV0czoBKpicJwKQnCclkJwnJpCcJwuQnCcEkJwn",
            "BZCcJw8S5QEKC0RlbGV0ZUlucHV0EiAuY2xhcmlmYWkuYXBpLkRlbGV0ZUlu",
            "cHV0UmVxdWVzdBohLmNsYXJpZmFpLmFwaS5zdGF0dXMuQmFzZVJlc3BvbnNl",
            "IpABgtPkkwJmKksvdjIvdXNlcnMve3VzZXJfYXBwX2lkLnVzZXJfaWR9L2Fw",
            "cHMve3VzZXJfYXBwX2lkLmFwcF9pZH0vaW5wdXRzL3tpbnB1dF9pZH1aFyoV",
            "L3YyL2lucHV0cy97aW5wdXRfaWR9mJwnApCcJyWQnCcokJwnJpCcJwSQnCcI",
            "kJwnBZCcJw+QnCcTEtcBCgxEZWxldGVJbnB1dHMSIS5jbGFyaWZhaS5hcGku",
            "RGVsZXRlSW5wdXRzUmVxdWVzdBohLmNsYXJpZmFpLmFwaS5zdGF0dXMuQmFz",
            "ZVJlc3BvbnNlIoABgtPkkwJWKkAvdjIvdXNlcnMve3VzZXJfYXBwX2lkLnVz",
            "ZXJfaWR9L2FwcHMve3VzZXJfYXBwX2lkLmFwcF9pZH0vaW5wdXRzOgEqWg8q",
            "Ci92Mi9pbnB1dHM6ASqYnCcCkJwnJZCcJyiQnCcmkJwnBJCcJwiQnCcFkJwn",
            "D5CcJxMS7QEKElBvc3RJbnB1dHNTZWFyY2hlcxInLmNsYXJpZmFpLmFwaS5Q",
            "b3N0SW5wdXRzU2VhcmNoZXNSZXF1ZXN0GiEuY2xhcmlmYWkuYXBpLk11bHRp",
            "U2VhcmNoUmVzcG9uc2UiigGC0+STAmgiSS92Mi91c2Vycy97dXNlcl9hcHBf",
            "aWQudXNlcl9pZH0vYXBwcy97dXNlcl9hcHBfaWQuYXBwX2lkfS9pbnB1dHMv",
            "c2VhcmNoZXM6ASpaGCITL3YyL2lucHV0cy9zZWFyY2hlczoBKpicJwKQnCcm",
            "kJwnC5CcJwWQnCcPkJwnA5CcJxMSnAMKEFBvc3RNb2RlbE91dHB1dHMSJS5j",
            "bGFyaWZhaS5hcGkuUG9zdE1vZGVsT3V0cHV0c1JlcXVlc3QaIS5jbGFyaWZh",
            "aS5hcGkuTXVsdGlPdXRwdXRSZXNwb25zZSK9AoLT5JMCpgIiaS92Mi91c2Vy",
            "cy97dXNlcl9hcHBfaWQudXNlcl9pZH0vYXBwcy97dXNlcl9hcHBfaWQuYXBw",
            "X2lkfS9tb2RlbHMve21vZGVsX2lkfS92ZXJzaW9ucy97dmVyc2lvbl9pZH0v",
            "b3V0cHV0czoBKlo4IjMvdjIvbW9kZWxzL3ttb2RlbF9pZH0vdmVyc2lvbnMv",
            "e3ZlcnNpb25faWR9L291dHB1dHM6ASpaWCJTL3YyL3VzZXJzL3t1c2VyX2Fw",
            "cF9pZC51c2VyX2lkfS9hcHBzL3t1c2VyX2FwcF9pZC5hcHBfaWR9L21vZGVs",
            "cy97bW9kZWxfaWR9L291dHB1dHM6ASpaIiIdL3YyL21vZGVscy97bW9kZWxf",
            "aWR9L291dHB1dHM6ASqYnCcCkJwnC5CcJw+QnCcCEuUBCgxHZXRNb2RlbFR5",
            "cGUSIS5jbGFyaWZhaS5hcGkuR2V0TW9kZWxUeXBlUmVxdWVzdBolLmNsYXJp",
            "ZmFpLmFwaS5TaW5nbGVNb2RlbFR5cGVSZXNwb25zZSKKAYLT5JMCfBJWL3Yy",
            "L3VzZXJzL3t1c2VyX2FwcF9pZC51c2VyX2lkfS9hcHBzL3t1c2VyX2FwcF9p",
            "ZC5hcHBfaWR9L21vZGVscy90eXBlcy97bW9kZWxfdHlwZV9pZH1aIhIgL3Yy",
            "L21vZGVscy90eXBlcy97bW9kZWxfdHlwZV9pZH2YnCcCkJwnDxKZAQoWTGlz",
            "dE9wZW5Tb3VyY2VMaWNlbnNlcxIrLmNsYXJpZmFpLmFwaS5MaXN0T3BlblNv",
            "dXJjZUxpY2Vuc2VzUmVxdWVzdBosLmNsYXJpZmFpLmFwaS5MaXN0T3BlblNv",
            "dXJjZUxpY2Vuc2VzUmVzcG9uc2UiJILT5JMCGhIYL3YyL29wZW5fc291cmNl",
            "X2xpY2Vuc2VzmJwnARLHAQoOTGlzdE1vZGVsVHlwZXMSIy5jbGFyaWZhaS5h",
            "cGkuTGlzdE1vZGVsVHlwZXNSZXF1ZXN0GiQuY2xhcmlmYWkuYXBpLk11bHRp",
            "TW9kZWxUeXBlUmVzcG9uc2UiaoLT5JMCXBJGL3YyL3VzZXJzL3t1c2VyX2Fw",
            "cF9pZC51c2VyX2lkfS9hcHBzL3t1c2VyX2FwcF9pZC5hcHBfaWR9L21vZGVs",
            "cy90eXBlc1oSEhAvdjIvbW9kZWxzL3R5cGVzmJwnApCcJw8SxgEKCEdldE1v",
            "ZGVsEh0uY2xhcmlmYWkuYXBpLkdldE1vZGVsUmVxdWVzdBohLmNsYXJpZmFp",
            "LmFwaS5TaW5nbGVNb2RlbFJlc3BvbnNlIniC0+STAmYSSy92Mi91c2Vycy97",
            "dXNlcl9hcHBfaWQudXNlcl9pZH0vYXBwcy97dXNlcl9hcHBfaWQuYXBwX2lk",
            "fS9tb2RlbHMve21vZGVsX2lkfVoXEhUvdjIvbW9kZWxzL3ttb2RlbF9pZH2Y",
            "nCcCkJwnC5CcJw8SlgMKEkdldE1vZGVsT3V0cHV0SW5mbxIdLmNsYXJpZmFp",
            "LmFwaS5HZXRNb2RlbFJlcXVlc3QaIS5jbGFyaWZhaS5hcGkuU2luZ2xlTW9k",
            "ZWxSZXNwb25zZSK9AoLT5JMCqgISVy92Mi91c2Vycy97dXNlcl9hcHBfaWQu",
            "dXNlcl9pZH0vYXBwcy97dXNlcl9hcHBfaWQuYXBwX2lkfS9tb2RlbHMve21v",
            "ZGVsX2lkfS9vdXRwdXRfaW5mb1ojEiEvdjIvbW9kZWxzL3ttb2RlbF9pZH0v",
            "b3V0cHV0X2luZm9abxJtL3YyL3VzZXJzL3t1c2VyX2FwcF9pZC51c2VyX2lk",
            "fS9hcHBzL3t1c2VyX2FwcF9pZC5hcHBfaWR9L21vZGVscy97bW9kZWxfaWR9",
            "L3ZlcnNpb25zL3t2ZXJzaW9uX2lkfS9vdXRwdXRfaW5mb1o5EjcvdjIvbW9k",
            "ZWxzL3ttb2RlbF9pZH0vdmVyc2lvbnMve3ZlcnNpb25faWR9L291dHB1dF9p",
            "bmZvmJwnApCcJwuQnCcPErMBCgpMaXN0TW9kZWxzEh8uY2xhcmlmYWkuYXBp",
            "Lkxpc3RNb2RlbHNSZXF1ZXN0GiAuY2xhcmlmYWkuYXBpLk11bHRpTW9kZWxS",
            "ZXNwb25zZSJigtPkkwJQEkAvdjIvdXNlcnMve3VzZXJfYXBwX2lkLnVzZXJf",
            "aWR9L2FwcHMve3VzZXJfYXBwX2lkLmFwcF9pZH0vbW9kZWxzWgwSCi92Mi9t",
            "b2RlbHOYnCcCkJwnC5CcJw8S2wEKElBvc3RNb2RlbHNTZWFyY2hlcxInLmNs",
            "YXJpZmFpLmFwaS5Qb3N0TW9kZWxzU2VhcmNoZXNSZXF1ZXN0GiAuY2xhcmlm",
            "YWkuYXBpLk11bHRpTW9kZWxSZXNwb25zZSJ6gtPkkwJoIkkvdjIvdXNlcnMv",
            "e3VzZXJfYXBwX2lkLnVzZXJfaWR9L2FwcHMve3VzZXJfYXBwX2lkLmFwcF9p",
            "ZH0vbW9kZWxzL3NlYXJjaGVzOgEqWhgiEy92Mi9tb2RlbHMvc2VhcmNoZXM6",
            "ASqYnCcCkJwnC5CcJw8SxgEKClBvc3RNb2RlbHMSHy5jbGFyaWZhaS5hcGku",
            "UG9zdE1vZGVsc1JlcXVlc3QaIS5jbGFyaWZhaS5hcGkuU2luZ2xlTW9kZWxS",
            "ZXNwb25zZSJ0gtPkkwJWIkAvdjIvdXNlcnMve3VzZXJfYXBwX2lkLnVzZXJf",
            "aWR9L2FwcHMve3VzZXJfYXBwX2lkLmFwcF9pZH0vbW9kZWxzOgEqWg8iCi92",
            "Mi9tb2RlbHM6ASqYnCcCkJwnC5CcJw6QnCcPkJwnGpCcJxMSwwEKC1BhdGNo",
            "TW9kZWxzEiAuY2xhcmlmYWkuYXBpLlBhdGNoTW9kZWxzUmVxdWVzdBogLmNs",
            "YXJpZmFpLmFwaS5NdWx0aU1vZGVsUmVzcG9uc2UicILT5JMCVjJAL3YyL3Vz",
            "ZXJzL3t1c2VyX2FwcF9pZC51c2VyX2lkfS9hcHBzL3t1c2VyX2FwcF9pZC5h",
            "cHBfaWR9L21vZGVsczoBKloPMgovdjIvbW9kZWxzOgEqmJwnApCcJwuQnCcO",
            "kJwnD5CcJxoS2QEKC0RlbGV0ZU1vZGVsEiAuY2xhcmlmYWkuYXBpLkRlbGV0",
            "ZU1vZGVsUmVxdWVzdBohLmNsYXJpZmFpLmFwaS5zdGF0dXMuQmFzZVJlc3Bv",
            "bnNlIoQBgtPkkwJmKksvdjIvdXNlcnMve3VzZXJfYXBwX2lkLnVzZXJfaWR9",
            "L2FwcHMve3VzZXJfYXBwX2lkLmFwcF9pZH0vbW9kZWxzL3ttb2RlbF9pZH1a",
            "FyoVL3YyL21vZGVscy97bW9kZWxfaWR9mJwnApCcJwuQnCcOkJwnEZCcJw+Q",
            "nCcTEsoBCgxEZWxldGVNb2RlbHMSIS5jbGFyaWZhaS5hcGkuRGVsZXRlTW9k",
            "ZWxzUmVxdWVzdBohLmNsYXJpZmFpLmFwaS5zdGF0dXMuQmFzZVJlc3BvbnNl",
            "InSC0+STAlYqQC92Mi91c2Vycy97dXNlcl9hcHBfaWQudXNlcl9pZH0vYXBw",
            "cy97dXNlcl9hcHBfaWQuYXBwX2lkfS9tb2RlbHM6ASpaDyoKL3YyL21vZGVs",
            "czoBKpicJwKQnCcLkJwnDpCcJxGQnCcPkJwnExKNAwoPTGlzdE1vZGVsSW5w",
            "dXRzEiQuY2xhcmlmYWkuYXBpLkxpc3RNb2RlbElucHV0c1JlcXVlc3QaIC5j",
            "bGFyaWZhaS5hcGkuTXVsdGlJbnB1dFJlc3BvbnNlIrECgtPkkwKWAhJSL3Yy",
            "L3VzZXJzL3t1c2VyX2FwcF9pZC51c2VyX2lkfS9hcHBzL3t1c2VyX2FwcF9p",
            "ZC5hcHBfaWR9L21vZGVscy97bW9kZWxfaWR9L2lucHV0c1oeEhwvdjIvbW9k",
            "ZWxzL3ttb2RlbF9pZH0vaW5wdXRzWmoSaC92Mi91c2Vycy97dXNlcl9hcHBf",
            "aWQudXNlcl9pZH0vYXBwcy97dXNlcl9hcHBfaWQuYXBwX2lkfS9tb2RlbHMv",
            "e21vZGVsX2lkfS92ZXJzaW9ucy97dmVyc2lvbl9pZH0vaW5wdXRzWjQSMi92",
            "Mi9tb2RlbHMve21vZGVsX2lkfS92ZXJzaW9ucy97dmVyc2lvbl9pZH0vaW5w",
            "dXRzmJwnApCcJyaQnCcLkJwnBZCcJw8SiQIKD0dldE1vZGVsVmVyc2lvbhIk",
            "LmNsYXJpZmFpLmFwaS5HZXRNb2RlbFZlcnNpb25SZXF1ZXN0GiguY2xhcmlm",
            "YWkuYXBpLlNpbmdsZU1vZGVsVmVyc2lvblJlc3BvbnNlIqUBgtPkkwKSARJh",
            "L3YyL3VzZXJzL3t1c2VyX2FwcF9pZC51c2VyX2lkfS9hcHBzL3t1c2VyX2Fw",
            "cF9pZC5hcHBfaWR9L21vZGVscy97bW9kZWxfaWR9L3ZlcnNpb25zL3t2ZXJz",
            "aW9uX2lkfVotEisvdjIvbW9kZWxzL3ttb2RlbF9pZH0vdmVyc2lvbnMve3Zl",
            "cnNpb25faWR9mJwnApCcJwuQnCcPEvEBChFMaXN0TW9kZWxWZXJzaW9ucxIm",
            "LmNsYXJpZmFpLmFwaS5MaXN0TW9kZWxWZXJzaW9uc1JlcXVlc3QaJy5jbGFy",
            "aWZhaS5hcGkuTXVsdGlNb2RlbFZlcnNpb25SZXNwb25zZSKKAYLT5JMCeBJU",
            "L3YyL3VzZXJzL3t1c2VyX2FwcF9pZC51c2VyX2lkfS9hcHBzL3t1c2VyX2Fw",
            "cF9pZC5hcHBfaWR9L21vZGVscy97bW9kZWxfaWR9L3ZlcnNpb25zWiASHi92",
            "Mi9tb2RlbHMve21vZGVsX2lkfS92ZXJzaW9uc5icJwKQnCcLkJwnDxKNAgoR",
            "UG9zdE1vZGVsVmVyc2lvbnMSJi5jbGFyaWZhaS5hcGkuUG9zdE1vZGVsVmVy",
            "c2lvbnNSZXF1ZXN0GiEuY2xhcmlmYWkuYXBpLlNpbmdsZU1vZGVsUmVzcG9u",
            "c2UirAGC0+STAn4iVC92Mi91c2Vycy97dXNlcl9hcHBfaWQudXNlcl9pZH0v",
            "YXBwcy97dXNlcl9hcHBfaWQuYXBwX2lkfS9tb2RlbHMve21vZGVsX2lkfS92",
            "ZXJzaW9uczoBKlojIh4vdjIvbW9kZWxzL3ttb2RlbF9pZH0vdmVyc2lvbnM6",
            "ASqYnCcCkJwnJpCcJwuQnCcFkJwnDpCcJw+QnCcakJwnE5CcJzWQnCc2EtsB",
            "ChJQYXRjaE1vZGVsVmVyc2lvbnMSJy5jbGFyaWZhaS5hcGkuUGF0Y2hNb2Rl",
            "bFZlcnNpb25zUmVxdWVzdBonLmNsYXJpZmFpLmFwaS5NdWx0aU1vZGVsVmVy",
            "c2lvblJlc3BvbnNlInOC0+STAlkyVC92Mi91c2Vycy97dXNlcl9hcHBfaWQu",
            "dXNlcl9pZH0vYXBwcy97dXNlcl9hcHBfaWQuYXBwX2lkfS9tb2RlbHMve21v",
            "ZGVsX2lkfS92ZXJzaW9uczoBKpicJwKQnCcLkJwnD5CcJw6QnCcaEpQCChJE",
            "ZWxldGVNb2RlbFZlcnNpb24SJy5jbGFyaWZhaS5hcGkuRGVsZXRlTW9kZWxW",
            "ZXJzaW9uUmVxdWVzdBohLmNsYXJpZmFpLmFwaS5zdGF0dXMuQmFzZVJlc3Bv",
            "bnNlIrEBgtPkkwKSASphL3YyL3VzZXJzL3t1c2VyX2FwcF9pZC51c2VyX2lk",
            "fS9hcHBzL3t1c2VyX2FwcF9pZC5hcHBfaWR9L21vZGVscy97bW9kZWxfaWR9",
            "L3ZlcnNpb25zL3t2ZXJzaW9uX2lkfVotKisvdjIvbW9kZWxzL3ttb2RlbF9p",
            "ZH0vdmVyc2lvbnMve3ZlcnNpb25faWR9mJwnApCcJwuQnCcOkJwnEZCcJw+Q",
            "nCcTErMCChZHZXRNb2RlbFZlcnNpb25NZXRyaWNzEisuY2xhcmlmYWkuYXBp",
            "LkdldE1vZGVsVmVyc2lvbk1ldHJpY3NSZXF1ZXN0GiguY2xhcmlmYWkuYXBp",
            "LlNpbmdsZU1vZGVsVmVyc2lvblJlc3BvbnNlIsEBgtPkkwKiARJpL3YyL3Vz",
            "ZXJzL3t1c2VyX2FwcF9pZC51c2VyX2lkfS9hcHBzL3t1c2VyX2FwcF9pZC5h",
            "cHBfaWR9L21vZGVscy97bW9kZWxfaWR9L3ZlcnNpb25zL3t2ZXJzaW9uX2lk",
            "fS9tZXRyaWNzWjUSMy92Mi9tb2RlbHMve21vZGVsX2lkfS92ZXJzaW9ucy97",
            "dmVyc2lvbl9pZH0vbWV0cmljc5icJwKQnCcmkJwnC5CcJw+QnCcFkJwnNRLP",
            "AgoXUG9zdE1vZGVsVmVyc2lvbk1ldHJpY3MSLC5jbGFyaWZhaS5hcGkuUG9z",
            "dE1vZGVsVmVyc2lvbk1ldHJpY3NSZXF1ZXN0GiguY2xhcmlmYWkuYXBpLlNp",
            "bmdsZU1vZGVsVmVyc2lvblJlc3BvbnNlItsBgtPkkwKoASJpL3YyL3VzZXJz",
            "L3t1c2VyX2FwcF9pZC51c2VyX2lkfS9hcHBzL3t1c2VyX2FwcF9pZC5hcHBf",
            "aWR9L21vZGVscy97bW9kZWxfaWR9L3ZlcnNpb25zL3t2ZXJzaW9uX2lkfS9t",
            "ZXRyaWNzOgEqWjgiMy92Mi9tb2RlbHMve21vZGVsX2lkfS92ZXJzaW9ucy97",
            "dmVyc2lvbl9pZH0vbWV0cmljczoBKpicJwKQnCcmkJwnC5CcJwWQnCcOkJwn",
            "D5CcJxqQnCcCkJwnE5CcJzWQnCc2EvcBChNMaXN0TW9kZWxSZWZlcmVuY2Vz",
            "EiguY2xhcmlmYWkuYXBpLkxpc3RNb2RlbFJlZmVyZW5jZXNSZXF1ZXN0Giku",
            "Y2xhcmlmYWkuYXBpLk11bHRpTW9kZWxSZWZlcmVuY2VSZXNwb25zZSKKAYLT",
            "5JMCfBJWL3YyL3VzZXJzL3t1c2VyX2FwcF9pZC51c2VyX2lkfS9hcHBzL3t1",
            "c2VyX2FwcF9pZC5hcHBfaWR9L21vZGVscy97bW9kZWxfaWR9L3JlZmVyZW5j",
            "ZXNaIhIgL3YyL21vZGVscy97bW9kZWxfaWR9L3JlZmVyZW5jZXOYnCcCkJwn",
            "DxLuAgobR2V0TW9kZWxWZXJzaW9uSW5wdXRFeGFtcGxlEjAuY2xhcmlmYWku",
            "YXBpLkdldE1vZGVsVmVyc2lvbklucHV0RXhhbXBsZVJlcXVlc3QaNC5jbGFy",
            "aWZhaS5hcGkuU2luZ2xlTW9kZWxWZXJzaW9uSW5wdXRFeGFtcGxlUmVzcG9u",
            "c2Ui5gGC0+STAtcBEoMBL3YyL3VzZXJzL3t1c2VyX2FwcF9pZC51c2VyX2lk",
            "fS9hcHBzL3t1c2VyX2FwcF9pZC5hcHBfaWR9L21vZGVscy97bW9kZWxfaWR9",
            "L3ZlcnNpb25zL3ttb2RlbF92ZXJzaW9uX2lkfS9pbnB1dF9leGFtcGxlcy97",
            "ZXhhbXBsZV9pZH1aTxJNL3YyL21vZGVscy97bW9kZWxfaWR9L3ZlcnNpb25z",
            "L3ttb2RlbF92ZXJzaW9uX2lkfS9pbnB1dF9leGFtcGxlcy97ZXhhbXBsZV9p",
            "ZH2YnCcCkJwnDxLWAgodTGlzdE1vZGVsVmVyc2lvbklucHV0RXhhbXBsZXMS",
            "Mi5jbGFyaWZhaS5hcGkuTGlzdE1vZGVsVmVyc2lvbklucHV0RXhhbXBsZXNS",
            "ZXF1ZXN0GjMuY2xhcmlmYWkuYXBpLk11bHRpTW9kZWxWZXJzaW9uSW5wdXRF",
            "eGFtcGxlUmVzcG9uc2UiywGC0+STArwBEnYvdjIvdXNlcnMve3VzZXJfYXBw",
            "X2lkLnVzZXJfaWR9L2FwcHMve3VzZXJfYXBwX2lkLmFwcF9pZH0vbW9kZWxz",
            "L3ttb2RlbF9pZH0vdmVyc2lvbnMve21vZGVsX3ZlcnNpb25faWR9L2lucHV0",
            "X2V4YW1wbGVzWkISQC92Mi9tb2RlbHMve21vZGVsX2lkfS92ZXJzaW9ucy97",
            "bW9kZWxfdmVyc2lvbl9pZH0vaW5wdXRfZXhhbXBsZXOYnCcCkJwnDxLcAQoL",
            "R2V0V29ya2Zsb3cSIC5jbGFyaWZhaS5hcGkuR2V0V29ya2Zsb3dSZXF1ZXN0",
            "GiQuY2xhcmlmYWkuYXBpLlNpbmdsZVdvcmtmbG93UmVzcG9uc2UihAGC0+ST",
            "AnISUS92Mi91c2Vycy97dXNlcl9hcHBfaWQudXNlcl9pZH0vYXBwcy97dXNl",
            "cl9hcHBfaWQuYXBwX2lkfS93b3JrZmxvd3Mve3dvcmtmbG93X2lkfVodEhsv",
            "djIvd29ya2Zsb3dzL3t3b3JrZmxvd19pZH2YnCcCkJwnD5CcJxMSwgEKDUxp",
            "c3RXb3JrZmxvd3MSIi5jbGFyaWZhaS5hcGkuTGlzdFdvcmtmbG93c1JlcXVl",
            "c3QaIy5jbGFyaWZhaS5hcGkuTXVsdGlXb3JrZmxvd1Jlc3BvbnNlImiC0+ST",
            "AlYSQy92Mi91c2Vycy97dXNlcl9hcHBfaWQudXNlcl9pZH0vYXBwcy97dXNl",
            "cl9hcHBfaWQuYXBwX2lkfS93b3JrZmxvd3NaDxINL3YyL3dvcmtmbG93c5ic",
            "JwKQnCcPkJwnExLMAQoNUG9zdFdvcmtmbG93cxIiLmNsYXJpZmFpLmFwaS5Q",
            "b3N0V29ya2Zsb3dzUmVxdWVzdBojLmNsYXJpZmFpLmFwaS5NdWx0aVdvcmtm",
            "bG93UmVzcG9uc2UicoLT5JMCXCJDL3YyL3VzZXJzL3t1c2VyX2FwcF9pZC51",
            "c2VyX2lkfS9hcHBzL3t1c2VyX2FwcF9pZC5hcHBfaWR9L3dvcmtmbG93czoB",
            "KloSIg0vdjIvd29ya2Zsb3dzOgEqmJwnApCcJw+QnCcSkJwnExLOAQoOUGF0",
            "Y2hXb3JrZmxvd3MSIy5jbGFyaWZhaS5hcGkuUGF0Y2hXb3JrZmxvd3NSZXF1",
            "ZXN0GiMuY2xhcmlmYWkuYXBpLk11bHRpV29ya2Zsb3dSZXNwb25zZSJygtPk",
            "kwJcMkMvdjIvdXNlcnMve3VzZXJfYXBwX2lkLnVzZXJfaWR9L2FwcHMve3Vz",
            "ZXJfYXBwX2lkLmFwcF9pZH0vd29ya2Zsb3dzOgEqWhIyDS92Mi93b3JrZmxv",
            "d3M6ASqYnCcCkJwnD5CcJxKQnCcTEuMBCg5EZWxldGVXb3JrZmxvdxIjLmNs",
            "YXJpZmFpLmFwaS5EZWxldGVXb3JrZmxvd1JlcXVlc3QaIS5jbGFyaWZhaS5h",
            "cGkuc3RhdHVzLkJhc2VSZXNwb25zZSKIAYLT5JMCcipRL3YyL3VzZXJzL3t1",
            "c2VyX2FwcF9pZC51c2VyX2lkfS9hcHBzL3t1c2VyX2FwcF9pZC5hcHBfaWR9",
            "L3dvcmtmbG93cy97d29ya2Zsb3dfaWR9Wh0qGy92Mi93b3JrZmxvd3Mve3dv",
            "cmtmbG93X2lkfZicJwKQnCcSkJwnFZCcJxMSzgEKD0RlbGV0ZVdvcmtmbG93",
            "cxIkLmNsYXJpZmFpLmFwaS5EZWxldGVXb3JrZmxvd3NSZXF1ZXN0GiEuY2xh",
            "cmlmYWkuYXBpLnN0YXR1cy5CYXNlUmVzcG9uc2UicoLT5JMCXCpDL3YyL3Vz",
            "ZXJzL3t1c2VyX2FwcF9pZC51c2VyX2lkfS9hcHBzL3t1c2VyX2FwcF9pZC5h",
            "cHBfaWR9L3dvcmtmbG93czoBKloSKg0vdjIvd29ya2Zsb3dzOgEqmJwnApCc",
            "JxKQnCcVkJwnExKQAgoTUG9zdFdvcmtmbG93UmVzdWx0cxIoLmNsYXJpZmFp",
            "LmFwaS5Qb3N0V29ya2Zsb3dSZXN1bHRzUmVxdWVzdBopLmNsYXJpZmFpLmFw",
            "aS5Qb3N0V29ya2Zsb3dSZXN1bHRzUmVzcG9uc2UiowGC0+STAogBIlkvdjIv",
            "dXNlcnMve3VzZXJfYXBwX2lkLnVzZXJfaWR9L2FwcHMve3VzZXJfYXBwX2lk",
            "LmFwcF9pZH0vd29ya2Zsb3dzL3t3b3JrZmxvd19pZH0vcmVzdWx0czoBKloo",
            "IiMvdjIvd29ya2Zsb3dzL3t3b3JrZmxvd19pZH0vcmVzdWx0czoBKpicJwKQ",
            "nCcPkJwnC5CcJwKQnCcTEsQCCh1Qb3N0V29ya2Zsb3dSZXN1bHRzU2ltaWxh",
            "cml0eRIyLmNsYXJpZmFpLmFwaS5Qb3N0V29ya2Zsb3dSZXN1bHRzU2ltaWxh",
            "cml0eVJlcXVlc3QaMy5jbGFyaWZhaS5hcGkuUG9zdFdvcmtmbG93UmVzdWx0",
            "c1NpbWlsYXJpdHlSZXNwb25zZSK5AYLT5JMCngEiZC92Mi91c2Vycy97dXNl",
            "cl9hcHBfaWQudXNlcl9pZH0vYXBwcy97dXNlcl9hcHBfaWQuYXBwX2lkfS93",
            "b3JrZmxvd3Mve3dvcmtmbG93X2lkfS9yZXN1bHRzL3NpbWlsYXJpdHk6ASpa",
            "MyIuL3YyL3dvcmtmbG93cy97d29ya2Zsb3dfaWR9L3Jlc3VsdHMvc2ltaWxh",
            "cml0eToBKpicJwKQnCcPkJwnC5CcJwKQnCcTEoUBCgZHZXRLZXkSGy5jbGFy",
            "aWZhaS5hcGkuR2V0S2V5UmVxdWVzdBofLmNsYXJpZmFpLmFwaS5TaW5nbGVL",
            "ZXlSZXNwb25zZSI9gtPkkwIvEi0vdjIvdXNlcnMve3VzZXJfYXBwX2lkLnVz",
            "ZXJfaWR9L2tleXMve2tleV9pZH2YnCcFkJwnMBJ/CghMaXN0S2V5cxIdLmNs",
            "YXJpZmFpLmFwaS5MaXN0S2V5c1JlcXVlc3QaHi5jbGFyaWZhaS5hcGkuTXVs",
            "dGlLZXlSZXNwb25zZSI0gtPkkwImEiQvdjIvdXNlcnMve3VzZXJfYXBwX2lk",
            "LnVzZXJfaWR9L2tleXOYnCcFkJwnMBKfAQoLTGlzdEFwcEtleXMSIC5jbGFy",
            "aWZhaS5hcGkuTGlzdEFwcEtleXNSZXF1ZXN0Gh4uY2xhcmlmYWkuYXBpLk11",
            "bHRpS2V5UmVzcG9uc2UiToLT5JMCQBI+L3YyL3VzZXJzL3t1c2VyX2FwcF9p",
            "ZC51c2VyX2lkfS9hcHBzL3t1c2VyX2FwcF9pZC5hcHBfaWR9L2tleXOYnCcF",
            "kJwnMBKVAQoJRGVsZXRlS2V5Eh4uY2xhcmlmYWkuYXBpLkRlbGV0ZUtleVJl",
            "cXVlc3QaIS5jbGFyaWZhaS5hcGkuc3RhdHVzLkJhc2VSZXNwb25zZSJFgtPk",
            "kwIvKi0vdjIvdXNlcnMve3VzZXJfYXBwX2lkLnVzZXJfaWR9L2tleXMve2tl",
            "eV9pZH2YnCcFkJwnL5CcJzGQnCcwEooBCghQb3N0S2V5cxIdLmNsYXJpZmFp",
            "LmFwaS5Qb3N0S2V5c1JlcXVlc3QaHi5jbGFyaWZhaS5hcGkuTXVsdGlLZXlS",
            "ZXNwb25zZSI/gtPkkwIpIiQvdjIvdXNlcnMve3VzZXJfYXBwX2lkLnVzZXJf",
            "aWR9L2tleXM6ASqYnCcFkJwnLZCcJy+QnCcwEogBCglQYXRjaEtleXMSHi5j",
            "bGFyaWZhaS5hcGkuUGF0Y2hLZXlzUmVxdWVzdBoeLmNsYXJpZmFpLmFwaS5N",
            "dWx0aUtleVJlc3BvbnNlIjuC0+STAikyJC92Mi91c2Vycy97dXNlcl9hcHBf",
            "aWQudXNlcl9pZH0va2V5czoBKpicJwWQnCcvkJwnMBK8AQoITXlTY29wZXMS",
            "HS5jbGFyaWZhaS5hcGkuTXlTY29wZXNSZXF1ZXN0GiAuY2xhcmlmYWkuYXBp",
            "Lk11bHRpU2NvcGVSZXNwb25zZSJvgtPkkwJlEkIvdjIvdXNlcnMve3VzZXJf",
            "YXBwX2lkLnVzZXJfaWR9L2FwcHMve3VzZXJfYXBwX2lkLmFwcF9pZH0vbXlz",
            "Y29wZXNaDhIML3YyL215c2NvcGVzWg8SDS92Mi9teV9zY29wZXOYnCcCEocB",
            "CgpMaXN0U2NvcGVzEh8uY2xhcmlmYWkuYXBpLkxpc3RTY29wZXNSZXF1ZXN0",
            "GiQuY2xhcmlmYWkuYXBpLk11bHRpU2NvcGVEZXBzUmVzcG9uc2UiMoLT5JMC",
            "KBImL3YyL3VzZXJzL3t1c2VyX2FwcF9pZC51c2VyX2lkfS9zY29wZXOYnCcD",
            "EpUBCgZHZXRBcHASGy5jbGFyaWZhaS5hcGkuR2V0QXBwUmVxdWVzdBofLmNs",
            "YXJpZmFpLmFwaS5TaW5nbGVBcHBSZXNwb25zZSJNgtPkkwI7EjkvdjIvdXNl",
            "cnMve3VzZXJfYXBwX2lkLnVzZXJfaWR9L2FwcHMve3VzZXJfYXBwX2lkLmFw",
            "cF9pZH2YnCcFkJwnLZCcJxMSjwEKCExpc3RBcHBzEh0uY2xhcmlmYWkuYXBp",
            "Lkxpc3RBcHBzUmVxdWVzdBoeLmNsYXJpZmFpLmFwaS5NdWx0aUFwcFJlc3Bv",
            "bnNlIkSC0+STAjISJC92Mi91c2Vycy97dXNlcl9hcHBfaWQudXNlcl9pZH0v",
            "YXBwc1oKEggvdjIvYXBwc5icJwWQnCctkJwnExKlAQoJRGVsZXRlQXBwEh4u",
            "Y2xhcmlmYWkuYXBpLkRlbGV0ZUFwcFJlcXVlc3QaIS5jbGFyaWZhaS5hcGku",
            "c3RhdHVzLkJhc2VSZXNwb25zZSJVgtPkkwI7KjkvdjIvdXNlcnMve3VzZXJf",
            "YXBwX2lkLnVzZXJfaWR9L2FwcHMve3VzZXJfYXBwX2lkLmFwcF9pZH2YnCcF",
            "kJwnLJCcJy6QnCctkJwnExKSAQoIUG9zdEFwcHMSHS5jbGFyaWZhaS5hcGku",
            "UG9zdEFwcHNSZXF1ZXN0Gh4uY2xhcmlmYWkuYXBpLk11bHRpQXBwUmVzcG9u",
            "c2UiR4LT5JMCKSIkL3YyL3VzZXJzL3t1c2VyX2FwcF9pZC51c2VyX2lkfS9h",
            "cHBzOgEqmJwnBZCcJyyQnCctkJwnD5CcJxOQnCcSEogBCglQYXRjaEFwcHMS",
            "Hi5jbGFyaWZhaS5hcGkuUGF0Y2hBcHBzUmVxdWVzdBoeLmNsYXJpZmFpLmFw",
            "aS5NdWx0aUFwcFJlc3BvbnNlIjuC0+STAikyJC92Mi91c2Vycy97dXNlcl9h",
            "cHBfaWQudXNlcl9pZH0vYXBwczoBKpicJwWQnCcskJwnLRKfAQoQUG9zdEFw",
            "cHNTZWFyY2hlcxIlLmNsYXJpZmFpLmFwaS5Qb3N0QXBwc1NlYXJjaGVzUmVx",
            "dWVzdBoeLmNsYXJpZmFpLmFwaS5NdWx0aUFwcFJlc3BvbnNlIkSC0+STAjIi",
            "LS92Mi91c2Vycy97dXNlcl9hcHBfaWQudXNlcl9pZH0vYXBwcy9zZWFyY2hl",
            "czoBKpicJwWQnCctkJwnExLTAQoUUG9zdFZhbGlkYXRlUGFzc3dvcmQSKS5j",
            "bGFyaWZhaS5hcGkuUG9zdFZhbGlkYXRlUGFzc3dvcmRSZXF1ZXN0Gi4uY2xh",
            "cmlmYWkuYXBpLlNpbmdsZVBhc3N3b3JkVmFsaWRhdGlvblJlc3BvbnNlImCC",
            "0+STAlIiMS92Mi91c2Vycy97dXNlcl9hcHBfaWQudXNlcl9pZH0vdmFsaWRh",
            "dGVfcGFzc3dvcmQ6ASpaGiIVL3YyL3ZhbGlkYXRlX3Bhc3N3b3JkOgEqmJwn",
            "BZCcJzoSvQEKCUdldFNlYXJjaBIeLmNsYXJpZmFpLmFwaS5HZXRTZWFyY2hS",
            "ZXF1ZXN0GiIuY2xhcmlmYWkuYXBpLlNpbmdsZVNlYXJjaFJlc3BvbnNlImyC",
            "0+STAl4SRy92Mi91c2Vycy97dXNlcl9hcHBfaWQudXNlcl9pZH0vYXBwcy97",
            "dXNlcl9hcHBfaWQuYXBwX2lkfS9zZWFyY2hlcy97aWR9WhMSES92Mi9zZWFy",
            "Y2hlcy97aWR9mJwnApCcJwMSuAEKDExpc3RTZWFyY2hlcxIhLmNsYXJpZmFp",
            "LmFwaS5MaXN0U2VhcmNoZXNSZXF1ZXN0GiEuY2xhcmlmYWkuYXBpLk11bHRp",
            "U2VhcmNoUmVzcG9uc2UiYoLT5JMCVBJCL3YyL3VzZXJzL3t1c2VyX2FwcF9p",
            "ZC51c2VyX2lkfS9hcHBzL3t1c2VyX2FwcF9pZC5hcHBfaWR9L3NlYXJjaGVz",
            "Wg4SDC92Mi9zZWFyY2hlc5icJwKQnCcDEtIBCgxQb3N0U2VhcmNoZXMSIS5j",
            "bGFyaWZhaS5hcGkuUG9zdFNlYXJjaGVzUmVxdWVzdBohLmNsYXJpZmFpLmFw",
            "aS5NdWx0aVNlYXJjaFJlc3BvbnNlInyC0+STAloiQi92Mi91c2Vycy97dXNl",
            "cl9hcHBfaWQudXNlcl9pZH0vYXBwcy97dXNlcl9hcHBfaWQuYXBwX2lkfS9z",
            "ZWFyY2hlczoBKloRIgwvdjIvc2VhcmNoZXM6ASqYnCcCkJwnJpCcJwuQnCcF",
            "kJwnD5CcJwOQnCcTEtABChBQb3N0U2VhcmNoZXNCeUlEEiUuY2xhcmlmYWku",
            "YXBpLlBvc3RTZWFyY2hlc0J5SURSZXF1ZXN0GiEuY2xhcmlmYWkuYXBpLk11",
            "bHRpU2VhcmNoUmVzcG9uc2UicoLT5JMCZCJHL3YyL3VzZXJzL3t1c2VyX2Fw",
            "cF9pZC51c2VyX2lkfS9hcHBzL3t1c2VyX2FwcF9pZC5hcHBfaWR9L3NlYXJj",
            "aGVzL3tpZH06ASpaFiIRL3YyL3NlYXJjaGVzL3tpZH06ASqYnCcCkJwnAxKv",
            "AgobUG9zdEFubm90YXRpb25TZWFyY2hNZXRyaWNzEjAuY2xhcmlmYWkuYXBp",
            "LlBvc3RBbm5vdGF0aW9uU2VhcmNoTWV0cmljc1JlcXVlc3QaMi5jbGFyaWZh",
            "aS5hcGkuTXVsdGlBbm5vdGF0aW9uU2VhcmNoTWV0cmljc1Jlc3BvbnNlIqkB",
            "gtPkkwKCASJWL3YyL3VzZXJzL3t1c2VyX2FwcF9pZC51c2VyX2lkfS9hcHBz",
            "L3t1c2VyX2FwcF9pZC5hcHBfaWR9L2Fubm90YXRpb25zL3NlYXJjaGVzL21l",
            "dHJpY3M6ASpaJSIgL3YyL2Fubm90YXRpb25zL3NlYXJjaGVzL21ldHJpY3M6",
            "ASqYnCcCkJwnJpCcJwuQnCcFkJwnNZCcJzaQnCcPkJwnExKlAgoaR2V0QW5u",
            "b3RhdGlvblNlYXJjaE1ldHJpY3MSLy5jbGFyaWZhaS5hcGkuR2V0QW5ub3Rh",
            "dGlvblNlYXJjaE1ldHJpY3NSZXF1ZXN0GjIuY2xhcmlmYWkuYXBpLk11bHRp",
            "QW5ub3RhdGlvblNlYXJjaE1ldHJpY3NSZXNwb25zZSKhAYLT5JMChgESWy92",
            "Mi91c2Vycy97dXNlcl9hcHBfaWQudXNlcl9pZH0vYXBwcy97dXNlcl9hcHBf",
            "aWQuYXBwX2lkfS9hbm5vdGF0aW9ucy9zZWFyY2hlcy9tZXRyaWNzL3tpZH1a",
            "JxIlL3YyL2Fubm90YXRpb25zL3NlYXJjaGVzL21ldHJpY3Mve2lkfZicJwKQ",
            "nCcmkJwnC5CcJwWQnCc1EpwCChtMaXN0QW5ub3RhdGlvblNlYXJjaE1ldHJp",
            "Y3MSMC5jbGFyaWZhaS5hcGkuTGlzdEFubm90YXRpb25TZWFyY2hNZXRyaWNz",
            "UmVxdWVzdBoyLmNsYXJpZmFpLmFwaS5NdWx0aUFubm90YXRpb25TZWFyY2hN",
            "ZXRyaWNzUmVzcG9uc2UilgGC0+STAnwSVi92Mi91c2Vycy97dXNlcl9hcHBf",
            "aWQudXNlcl9pZH0vYXBwcy97dXNlcl9hcHBfaWQuYXBwX2lkfS9hbm5vdGF0",
            "aW9ucy9zZWFyY2hlcy9tZXRyaWNzWiISIC92Mi9hbm5vdGF0aW9ucy9zZWFy",
            "Y2hlcy9tZXRyaWNzmJwnApCcJyaQnCcLkJwnBZCcJzUSlgIKHURlbGV0ZUFu",
            "bm90YXRpb25TZWFyY2hNZXRyaWNzEjIuY2xhcmlmYWkuYXBpLkRlbGV0ZUFu",
            "bm90YXRpb25TZWFyY2hNZXRyaWNzUmVxdWVzdBohLmNsYXJpZmFpLmFwaS5z",
            "dGF0dXMuQmFzZVJlc3BvbnNlIp0BgtPkkwKGASpbL3YyL3VzZXJzL3t1c2Vy",
            "X2FwcF9pZC51c2VyX2lkfS9hcHBzL3t1c2VyX2FwcF9pZC5hcHBfaWR9L2Fu",
            "bm90YXRpb25zL3NlYXJjaGVzL21ldHJpY3Mve2lkfVonKiUvdjIvYW5ub3Rh",
            "dGlvbnMvc2VhcmNoZXMvbWV0cmljcy97aWR9mJwnApCcJzWQnCc2kJwnPxLC",
            "AQoMRGVsZXRlU2VhcmNoEiEuY2xhcmlmYWkuYXBpLkRlbGV0ZVNlYXJjaFJl",
            "cXVlc3QaIS5jbGFyaWZhaS5hcGkuc3RhdHVzLkJhc2VSZXNwb25zZSJsgtPk",
            "kwJeKkcvdjIvdXNlcnMve3VzZXJfYXBwX2lkLnVzZXJfaWR9L2FwcHMve3Vz",
            "ZXJfYXBwX2lkLmFwcF9pZH0vc2VhcmNoZXMve2lkfVoTKhEvdjIvc2VhcmNo",
            "ZXMve2lkfZicJwKQnCcDEnwKD0xpc3RTdGF0dXNDb2RlcxIkLmNsYXJpZmFp",
            "LmFwaS5MaXN0U3RhdHVzQ29kZXNSZXF1ZXN0GiUuY2xhcmlmYWkuYXBpLk11",
            "bHRpU3RhdHVzQ29kZVJlc3BvbnNlIhyC0+STAhISEC92Mi9zdGF0dXNfY29k",
            "ZXOYnCcBEooBCg1HZXRTdGF0dXNDb2RlEiIuY2xhcmlmYWkuYXBpLkdldFN0",
            "YXR1c0NvZGVSZXF1ZXN0GiYuY2xhcmlmYWkuYXBpLlNpbmdsZVN0YXR1c0Nv",
            "ZGVSZXNwb25zZSItgtPkkwIjEiEvdjIvc3RhdHVzX2NvZGVzL3tzdGF0dXNf",
            "Y29kZV9pZH2YnCcBEr4BChFMaXN0Q29sbGFib3JhdG9ycxImLmNsYXJpZmFp",
            "LmFwaS5MaXN0Q29sbGFib3JhdG9yc1JlcXVlc3QaKC5jbGFyaWZhaS5hcGku",
            "TXVsdGlDb2xsYWJvcmF0b3JzUmVzcG9uc2UiV4LT5JMCSRJHL3YyL3VzZXJz",
            "L3t1c2VyX2FwcF9pZC51c2VyX2lkfS9hcHBzL3t1c2VyX2FwcF9pZC5hcHBf",
            "aWR9L2NvbGxhYm9yYXRvcnOYnCcCkJwnMhLFAQoRUG9zdENvbGxhYm9yYXRv",
            "cnMSJi5jbGFyaWZhaS5hcGkuUG9zdENvbGxhYm9yYXRvcnNSZXF1ZXN0Gigu",
            "Y2xhcmlmYWkuYXBpLk11bHRpQ29sbGFib3JhdG9yc1Jlc3BvbnNlIl6C0+ST",
            "AkwiRy92Mi91c2Vycy97dXNlcl9hcHBfaWQudXNlcl9pZH0vYXBwcy97dXNl",
            "cl9hcHBfaWQuYXBwX2lkfS9jb2xsYWJvcmF0b3JzOgEqmJwnApCcJzOQnCcy",
            "EssBChJQYXRjaENvbGxhYm9yYXRvcnMSJy5jbGFyaWZhaS5hcGkuUGF0Y2hD",
            "b2xsYWJvcmF0b3JzUmVxdWVzdBooLmNsYXJpZmFpLmFwaS5NdWx0aUNvbGxh",
            "Ym9yYXRvcnNSZXNwb25zZSJigtPkkwJMMkcvdjIvdXNlcnMve3VzZXJfYXBw",
            "X2lkLnVzZXJfaWR9L2FwcHMve3VzZXJfYXBwX2lkLmFwcF9pZH0vY29sbGFi",
            "b3JhdG9yczoBKpicJwKQnCczkJwnMpCcJzQSzgEKE0RlbGV0ZUNvbGxhYm9y",
            "YXRvcnMSKC5jbGFyaWZhaS5hcGkuRGVsZXRlQ29sbGFib3JhdG9yc1JlcXVl",
            "c3QaIS5jbGFyaWZhaS5hcGkuc3RhdHVzLkJhc2VSZXNwb25zZSJqgtPkkwJM",
            "KkcvdjIvdXNlcnMve3VzZXJfYXBwX2lkLnVzZXJfaWR9L2FwcHMve3VzZXJf",
            "YXBwX2lkLmFwcF9pZH0vY29sbGFib3JhdG9yczoBKpicJwKQnCczkJwnMpCc",
            "JzSQnCc3kJwnOBKkAQoSTGlzdENvbGxhYm9yYXRpb25zEicuY2xhcmlmYWku",
            "YXBpLkxpc3RDb2xsYWJvcmF0aW9uc1JlcXVlc3QaKS5jbGFyaWZhaS5hcGku",
            "TXVsdGlDb2xsYWJvcmF0aW9uc1Jlc3BvbnNlIjqC0+STAjASLi92Mi91c2Vy",
            "cy97dXNlcl9hcHBfaWQudXNlcl9pZH0vY29sbGFib3JhdGlvbnOYnCcDEu8B",
            "ChNQb3N0QXBwRHVwbGljYXRpb25zEiguY2xhcmlmYWkuYXBpLlBvc3RBcHBE",
            "dXBsaWNhdGlvbnNSZXF1ZXN0GiouY2xhcmlmYWkuYXBpLk11bHRpQXBwRHVw",
            "bGljYXRpb25zUmVzcG9uc2UigQGC0+STAksiRi92Mi91c2Vycy97dXNlcl9h",
            "cHBfaWQudXNlcl9pZH0vYXBwcy97dXNlcl9hcHBfaWQuYXBwX2lkfS9kdXBs",
            "aWNhdGlvbnM6ASqYnCcCkJwnDpCcJw+QnCcakJwnCpCcJwuQnCcEkJwnBZCc",
            "JyWQnCcmkJwnEpCcJxMSpQEKE0xpc3RBcHBEdXBsaWNhdGlvbnMSKC5jbGFy",
            "aWZhaS5hcGkuTGlzdEFwcER1cGxpY2F0aW9uc1JlcXVlc3QaKi5jbGFyaWZh",
            "aS5hcGkuTXVsdGlBcHBEdXBsaWNhdGlvbnNSZXNwb25zZSI4gtPkkwIuEiwv",
            "djIvdXNlcnMve3VzZXJfYXBwX2lkLnVzZXJfaWR9L2R1cGxpY2F0aW9uc5ic",
            "JwMStgEKEUdldEFwcER1cGxpY2F0aW9uEiYuY2xhcmlmYWkuYXBpLkdldEFw",
            "cER1cGxpY2F0aW9uUmVxdWVzdBoqLmNsYXJpZmFpLmFwaS5TaW5nbGVBcHBE",
            "dXBsaWNhdGlvblJlc3BvbnNlIk2C0+STAkMSQS92Mi91c2Vycy97dXNlcl9h",
            "cHBfaWQudXNlcl9pZH0vZHVwbGljYXRpb25zL3thcHBfZHVwbGljYXRpb25f",
            "aWR9mJwnAxLRAQoJUG9zdFRhc2tzEh4uY2xhcmlmYWkuYXBpLlBvc3RUYXNr",
            "c1JlcXVlc3QaHy5jbGFyaWZhaS5hcGkuTXVsdGlUYXNrUmVzcG9uc2UiggGC",
            "0+STAlQiPy92Mi91c2Vycy97dXNlcl9hcHBfaWQudXNlcl9pZH0vYXBwcy97",
            "dXNlcl9hcHBfaWQuYXBwX2lkfS90YXNrczoBKloOIgkvdjIvdGFza3M6ASqY",
            "nCcCkJwnN5CcJziQnCcFkJwnA5CcJwuQnCcTkJwnD5CcJyWQnCcmEvoBChZH",
            "ZXRUYXNrQW5ub3RhdGlvbkNvdW50EiEuY2xhcmlmYWkuYXBpLkdldFRhc2tD",
            "b3VudFJlcXVlc3QaJS5jbGFyaWZhaS5hcGkuU2luZ2xlVGFza0NvdW50UmVz",
            "cG9uc2UilQGC0+STAoYBElsvdjIvdXNlcnMve3VzZXJfYXBwX2lkLnVzZXJf",
            "aWR9L2FwcHMve3VzZXJfYXBwX2lkLmFwcF9pZH0vdGFza3Mve3Rhc2tfaWR9",
            "L2Fubm90YXRpb25zL2NvdW50WicSJS92Mi90YXNrcy97dGFza19pZH0vYW5u",
            "b3RhdGlvbnMvY291bnSYnCcCkJwnOBLqAQoRR2V0VGFza0lucHV0Q291bnQS",
            "IS5jbGFyaWZhaS5hcGkuR2V0VGFza0NvdW50UmVxdWVzdBolLmNsYXJpZmFp",
            "LmFwaS5TaW5nbGVUYXNrQ291bnRSZXNwb25zZSKKAYLT5JMCfBJWL3YyL3Vz",
            "ZXJzL3t1c2VyX2FwcF9pZC51c2VyX2lkfS9hcHBzL3t1c2VyX2FwcF9pZC5h",
            "cHBfaWR9L3Rhc2tzL3t0YXNrX2lkfS9pbnB1dHMvY291bnRaIhIgL3YyL3Rh",
            "c2tzL3t0YXNrX2lkfS9pbnB1dHMvY291bnSYnCcCkJwnOBLMAQoHR2V0VGFz",
            "axIcLmNsYXJpZmFpLmFwaS5HZXRUYXNrUmVxdWVzdBogLmNsYXJpZmFpLmFw",
            "aS5TaW5nbGVUYXNrUmVzcG9uc2UigAGC0+STAmISSS92Mi91c2Vycy97dXNl",
            "cl9hcHBfaWQudXNlcl9pZH0vYXBwcy97dXNlcl9hcHBfaWQuYXBwX2lkfS90",
            "YXNrcy97dGFza19pZH1aFRITL3YyL3Rhc2tzL3t0YXNrX2lkfZicJwKQnCc4",
            "kJwnA5CcJwuQnCcTkJwnDxK6AQoJTGlzdFRhc2tzEh4uY2xhcmlmYWkuYXBp",
            "Lkxpc3RUYXNrc1JlcXVlc3QaHy5jbGFyaWZhaS5hcGkuTXVsdGlUYXNrUmVz",
            "cG9uc2UibILT5JMCThI/L3YyL3VzZXJzL3t1c2VyX2FwcF9pZC51c2VyX2lk",
            "fS9hcHBzL3t1c2VyX2FwcF9pZC5hcHBfaWR9L3Rhc2tzWgsSCS92Mi90YXNr",
            "c5icJwKQnCc4kJwnA5CcJwuQnCcTkJwnDxLTAQoKUGF0Y2hUYXNrcxIfLmNs",
            "YXJpZmFpLmFwaS5QYXRjaFRhc2tzUmVxdWVzdBofLmNsYXJpZmFpLmFwaS5N",
            "dWx0aVRhc2tSZXNwb25zZSKCAYLT5JMCVDI/L3YyL3VzZXJzL3t1c2VyX2Fw",
            "cF9pZC51c2VyX2lkfS9hcHBzL3t1c2VyX2FwcF9pZC5hcHBfaWR9L3Rhc2tz",
            "OgEqWg4yCS92Mi90YXNrczoBKpicJwKQnCc3kJwnOJCcJwWQnCcDkJwnC5Cc",
            "JxOQnCcPkJwnJZCcJyYSvgEKC0RlbGV0ZVRhc2tzEiAuY2xhcmlmYWkuYXBp",
            "LkRlbGV0ZVRhc2tzUmVxdWVzdBohLmNsYXJpZmFpLmFwaS5zdGF0dXMuQmFz",
            "ZVJlc3BvbnNlImqC0+STAlQqPy92Mi91c2Vycy97dXNlcl9hcHBfaWQudXNl",
            "cl9pZH0vYXBwcy97dXNlcl9hcHBfaWQuYXBwX2lkfS90YXNrczoBKloOKgkv",
            "djIvdGFza3M6ASqYnCcCkJwnN5CcJziQnCdGEu4BCg5Qb3N0Q29sbGVjdG9y",
            "cxIjLmNsYXJpZmFpLmFwaS5Qb3N0Q29sbGVjdG9yc1JlcXVlc3QaJC5jbGFy",
            "aWZhaS5hcGkuTXVsdGlDb2xsZWN0b3JSZXNwb25zZSKQAYLT5JMCXiJEL3Yy",
            "L3VzZXJzL3t1c2VyX2FwcF9pZC51c2VyX2lkfS9hcHBzL3t1c2VyX2FwcF9p",
            "ZC5hcHBfaWR9L2NvbGxlY3RvcnM6ASpaEyIOL3YyL2NvbGxlY3RvcnM6ASqY",
            "nCcCkJwnBJCcJyWQnCcmkJwnKZCcJwuQnCcEkJwnBZCcJw+QnCcCkJwnExLf",
            "AQoMR2V0Q29sbGVjdG9yEiEuY2xhcmlmYWkuYXBpLkdldENvbGxlY3RvclJl",
            "cXVlc3QaJS5jbGFyaWZhaS5hcGkuU2luZ2xlQ29sbGVjdG9yUmVzcG9uc2Ui",
            "hAGC0+STAnYSUy92Mi91c2Vycy97dXNlcl9hcHBfaWQudXNlcl9pZH0vYXBw",
            "cy97dXNlcl9hcHBfaWQuYXBwX2lkfS9jb2xsZWN0b3JzL3tjb2xsZWN0b3Jf",
            "aWR9Wh8SHS92Mi9jb2xsZWN0b3JzL3tjb2xsZWN0b3JfaWR9mJwnApCcJyoS",
            "wwEKDkxpc3RDb2xsZWN0b3JzEiMuY2xhcmlmYWkuYXBpLkxpc3RDb2xsZWN0",
            "b3JzUmVxdWVzdBokLmNsYXJpZmFpLmFwaS5NdWx0aUNvbGxlY3RvclJlc3Bv",
            "bnNlImaC0+STAlgSRC92Mi91c2Vycy97dXNlcl9hcHBfaWQudXNlcl9pZH0v",
            "YXBwcy97dXNlcl9hcHBfaWQuYXBwX2lkfS9jb2xsZWN0b3JzWhASDi92Mi9j",
            "b2xsZWN0b3JzmJwnApCcJyoSzwEKD1BhdGNoQ29sbGVjdG9ycxIkLmNsYXJp",
            "ZmFpLmFwaS5QYXRjaENvbGxlY3RvcnNSZXF1ZXN0GiQuY2xhcmlmYWkuYXBp",
            "Lk11bHRpQ29sbGVjdG9yUmVzcG9uc2UicILT5JMCXjJEL3YyL3VzZXJzL3t1",
            "c2VyX2FwcF9pZC51c2VyX2lkfS9hcHBzL3t1c2VyX2FwcF9pZC5hcHBfaWR9",
            "L2NvbGxlY3RvcnM6ASpaEzIOL3YyL2NvbGxlY3RvcnM6ASqYnCcCkJwnKZCc",
            "JyoS0gEKEERlbGV0ZUNvbGxlY3RvcnMSJS5jbGFyaWZhaS5hcGkuRGVsZXRl",
            "Q29sbGVjdG9yc1JlcXVlc3QaIS5jbGFyaWZhaS5hcGkuc3RhdHVzLkJhc2VS",
            "ZXNwb25zZSJ0gtPkkwJeKkQvdjIvdXNlcnMve3VzZXJfYXBwX2lkLnVzZXJf",
            "aWR9L2FwcHMve3VzZXJfYXBwX2lkLmFwcF9pZH0vY29sbGVjdG9yczoBKloT",
            "Kg4vdjIvY29sbGVjdG9yczoBKpicJwKQnCcpkJwnK5CcJyoSyQEKDlBvc3RT",
            "dGF0VmFsdWVzEiMuY2xhcmlmYWkuYXBpLlBvc3RTdGF0VmFsdWVzUmVxdWVz",
            "dBokLmNsYXJpZmFpLmFwaS5NdWx0aVN0YXRWYWx1ZVJlc3BvbnNlImyC0+ST",
            "AmIiRi92Mi91c2Vycy97dXNlcl9hcHBfaWQudXNlcl9pZH0vYXBwcy97dXNl",
            "cl9hcHBfaWQuYXBwX2lkfS9zdGF0cy92YWx1ZXM6ASpaFSIQL3YyL3N0YXRz",
            "L3ZhbHVlczoBKpicJwIS+QEKF1Bvc3RTdGF0VmFsdWVzQWdncmVnYXRlEiwu",
            "Y2xhcmlmYWkuYXBpLlBvc3RTdGF0VmFsdWVzQWdncmVnYXRlUmVxdWVzdBot",
            "LmNsYXJpZmFpLmFwaS5NdWx0aVN0YXRWYWx1ZUFnZ3JlZ2F0ZVJlc3BvbnNl",
            "IoABgtPkkwJ2IlAvdjIvdXNlcnMve3VzZXJfYXBwX2lkLnVzZXJfaWR9L2Fw",
            "cHMve3VzZXJfYXBwX2lkLmFwcF9pZH0vc3RhdHMvdmFsdWVzL2FnZ3JlZ2F0",
            "ZToBKlofIhovdjIvc3RhdHMvdmFsdWVzL2FnZ3JlZ2F0ZToBKpicJwJCXQoV",
            "Y29tLmNsYXJpZmFpLmdycGMuYXBpUAFaO2dpdGh1Yi5jb20vQ2xhcmlmYWkv",
            "Y2xhcmlmYWktZ28tZ3JwYy9wcm90by9jbGFyaWZhaS9hcGkvYXBpogIEQ0FJ",
            "UGIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Clarifai.Api.ResourcesReflection.Descriptor, global::Clarifai.Api.Status.StatusReflection.Descriptor, global::Clarifai.Api.Utils.ExtensionsReflection.Descriptor, global::Clarifai.Auth.Scope.ScopeReflection.Descriptor, global::Clarifai.Auth.Util.ExtensionReflection.Descriptor, global::Clarifai.Api.Status.StatusCodeReflection.Descriptor, global::Google.Api.AnnotationsReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.DurationReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.StructReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Clarifai.Api.OrganizationInvitationStatus), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.Pagination), global::Clarifai.Api.Pagination.Parser, new[]{ "Page", "PerPage" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.GetAnnotationRequest), global::Clarifai.Api.GetAnnotationRequest.Parser, new[]{ "UserAppId", "AnnotationId", "InputId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.ListAnnotationsRequest), global::Clarifai.Api.ListAnnotationsRequest.Parser, new[]{ "UserAppId", "Ids", "InputIds", "UserIds", "ModelVersionIds", "Statuses", "ListAllAnnotations", "Page", "PerPage", "TaskId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.PostAnnotationsRequest), global::Clarifai.Api.PostAnnotationsRequest.Parser, new[]{ "UserAppId", "Annotations" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.PatchAnnotationsRequest), global::Clarifai.Api.PatchAnnotationsRequest.Parser, new[]{ "UserAppId", "Annotations", "Action" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.PatchAnnotationsStatusRequest), global::Clarifai.Api.PatchAnnotationsStatusRequest.Parser, new[]{ "UserAppId", "StatusCode", "UserIds", "TaskId", "Action" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.PatchAnnotationsStatusResponse), global::Clarifai.Api.PatchAnnotationsStatusResponse.Parser, new[]{ "Status", "UserIds", "UpdatedCount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.DeleteAnnotationRequest), global::Clarifai.Api.DeleteAnnotationRequest.Parser, new[]{ "UserAppId", "InputId", "AnnotationId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.DeleteAnnotationsRequest), global::Clarifai.Api.DeleteAnnotationsRequest.Parser, new[]{ "UserAppId", "Ids", "InputIds" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.SingleAnnotationResponse), global::Clarifai.Api.SingleAnnotationResponse.Parser, new[]{ "Status", "Annotation" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.MultiAnnotationResponse), global::Clarifai.Api.MultiAnnotationResponse.Parser, new[]{ "Status", "Annotations" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.GetAppRequest), global::Clarifai.Api.GetAppRequest.Parser, new[]{ "UserAppId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.ListAppsRequest), global::Clarifai.Api.ListAppsRequest.Parser, new[]{ "UserAppId", "Page", "PerPage", "SortAscending", "SortByName", "SortByModifiedAt", "Query", "Name" }, new[]{ "SortBy" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.PostAppsRequest), global::Clarifai.Api.PostAppsRequest.Parser, new[]{ "UserAppId", "Apps" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.DeleteAppRequest), global::Clarifai.Api.DeleteAppRequest.Parser, new[]{ "UserAppId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.PatchAppsRequest), global::Clarifai.Api.PatchAppsRequest.Parser, new[]{ "UserAppId", "Apps", "Action", "MetadataAction", "Reindex" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.PostAppsSearchesRequest), global::Clarifai.Api.PostAppsSearchesRequest.Parser, new[]{ "UserAppId", "AppQuery", "Pagination" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.SingleAppResponse), global::Clarifai.Api.SingleAppResponse.Parser, new[]{ "Status", "App" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.MultiAppResponse), global::Clarifai.Api.MultiAppResponse.Parser, new[]{ "Status", "Apps" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.ListCollaboratorsRequest), global::Clarifai.Api.ListCollaboratorsRequest.Parser, new[]{ "UserAppId", "ListAllCollaborators" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.PostCollaboratorsRequest), global::Clarifai.Api.PostCollaboratorsRequest.Parser, new[]{ "UserAppId", "Collaborators" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.PatchCollaboratorsRequest), global::Clarifai.Api.PatchCollaboratorsRequest.Parser, new[]{ "UserAppId", "Collaborators", "Action" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.DeleteCollaboratorsRequest), global::Clarifai.Api.DeleteCollaboratorsRequest.Parser, new[]{ "UserAppId", "CollaboratorIds", "UserEmails" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.MultiCollaboratorsResponse), global::Clarifai.Api.MultiCollaboratorsResponse.Parser, new[]{ "Status", "Collaborators" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.ListCollaborationsRequest), global::Clarifai.Api.ListCollaborationsRequest.Parser, new[]{ "UserAppId", "Page", "PerPage" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.MultiCollaborationsResponse), global::Clarifai.Api.MultiCollaborationsResponse.Parser, new[]{ "Status", "Collaborations" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.GetStatusCodeRequest), global::Clarifai.Api.GetStatusCodeRequest.Parser, new[]{ "StatusCodeId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.ListStatusCodesRequest), global::Clarifai.Api.ListStatusCodesRequest.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.SingleStatusCodeResponse), global::Clarifai.Api.SingleStatusCodeResponse.Parser, new[]{ "Status" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.MultiStatusCodeResponse), global::Clarifai.Api.MultiStatusCodeResponse.Parser, new[]{ "Status", "Statuses" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.GetConceptRequest), global::Clarifai.Api.GetConceptRequest.Parser, new[]{ "UserAppId", "ConceptId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.ListConceptsRequest), global::Clarifai.Api.ListConceptsRequest.Parser, new[]{ "UserAppId", "Page", "PerPage" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.PostConceptsSearchesRequest), global::Clarifai.Api.PostConceptsSearchesRequest.Parser, new[]{ "UserAppId", "ConceptQuery", "Pagination" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.PostConceptsRequest), global::Clarifai.Api.PostConceptsRequest.Parser, new[]{ "UserAppId", "Concepts" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.PatchConceptsRequest), global::Clarifai.Api.PatchConceptsRequest.Parser, new[]{ "UserAppId", "Concepts", "Action" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.GetConceptCountsRequest), global::Clarifai.Api.GetConceptCountsRequest.Parser, new[]{ "UserAppId", "Page", "PerPage" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.SingleConceptResponse), global::Clarifai.Api.SingleConceptResponse.Parser, new[]{ "Status", "Concept" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.MultiConceptResponse), global::Clarifai.Api.MultiConceptResponse.Parser, new[]{ "Status", "Concepts" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.MultiConceptCountResponse), global::Clarifai.Api.MultiConceptCountResponse.Parser, new[]{ "Status", "ConceptCounts" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.ListConceptRelationsRequest), global::Clarifai.Api.ListConceptRelationsRequest.Parser, new[]{ "UserAppId", "ConceptId", "Predicate", "KnowledgeGraphId", "Page", "PerPage" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.PostConceptRelationsRequest), global::Clarifai.Api.PostConceptRelationsRequest.Parser, new[]{ "UserAppId", "ConceptId", "ConceptRelations" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.DeleteConceptRelationsRequest), global::Clarifai.Api.DeleteConceptRelationsRequest.Parser, new[]{ "UserAppId", "ConceptId", "Ids" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.ListKnowledgeGraphsRequest), global::Clarifai.Api.ListKnowledgeGraphsRequest.Parser, new[]{ "UserAppId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.PostKnowledgeGraphsRequest), global::Clarifai.Api.PostKnowledgeGraphsRequest.Parser, new[]{ "UserAppId", "KnowledgeGraphs" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.PostConceptMappingJobsRequest), global::Clarifai.Api.PostConceptMappingJobsRequest.Parser, new[]{ "UserAppId", "ConceptMappingJobs" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.MultiConceptRelationResponse), global::Clarifai.Api.MultiConceptRelationResponse.Parser, new[]{ "Status", "ConceptRelations" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.MultiKnowledgeGraphResponse), global::Clarifai.Api.MultiKnowledgeGraphResponse.Parser, new[]{ "Status", "KnowledgeGraphs" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.MultiConceptMappingJobResponse), global::Clarifai.Api.MultiConceptMappingJobResponse.Parser, new[]{ "Status", "Ids" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.GetConceptLanguageRequest), global::Clarifai.Api.GetConceptLanguageRequest.Parser, new[]{ "UserAppId", "ConceptId", "Language" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.ListConceptLanguagesRequest), global::Clarifai.Api.ListConceptLanguagesRequest.Parser, new[]{ "UserAppId", "ConceptId", "Page", "PerPage" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.PatchConceptLanguagesRequest), global::Clarifai.Api.PatchConceptLanguagesRequest.Parser, new[]{ "UserAppId", "ConceptId", "ConceptLanguages", "Action" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.PostConceptLanguagesRequest), global::Clarifai.Api.PostConceptLanguagesRequest.Parser, new[]{ "UserAppId", "ConceptId", "ConceptLanguages" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.SingleConceptLanguageResponse), global::Clarifai.Api.SingleConceptLanguageResponse.Parser, new[]{ "Status", "ConceptLanguage" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.MultiConceptLanguageResponse), global::Clarifai.Api.MultiConceptLanguageResponse.Parser, new[]{ "Status", "ConceptLanguages" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.GetInputRequest), global::Clarifai.Api.GetInputRequest.Parser, new[]{ "UserAppId", "InputId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.GetInputSamplesRequest), global::Clarifai.Api.GetInputSamplesRequest.Parser, new[]{ "UserAppId", "TaskId", "UserIds" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.ListInputsRequest), global::Clarifai.Api.ListInputsRequest.Parser, new[]{ "UserAppId", "Page", "PerPage", "Status", "Ids" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.StreamInputsRequest), global::Clarifai.Api.StreamInputsRequest.Parser, new[]{ "UserAppId", "PerPage", "LastId", "Descending" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.PostInputsRequest), global::Clarifai.Api.PostInputsRequest.Parser, new[]{ "UserAppId", "Inputs" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.PatchInputsRequest), global::Clarifai.Api.PatchInputsRequest.Parser, new[]{ "UserAppId", "Inputs", "Action" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.DeleteInputRequest), global::Clarifai.Api.DeleteInputRequest.Parser, new[]{ "UserAppId", "InputId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.DeleteInputsRequest), global::Clarifai.Api.DeleteInputsRequest.Parser, new[]{ "UserAppId", "Ids" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.SingleInputResponse), global::Clarifai.Api.SingleInputResponse.Parser, new[]{ "Status", "Input" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.MultiInputResponse), global::Clarifai.Api.MultiInputResponse.Parser, new[]{ "Status", "Inputs" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.MultiInputAnnotationResponse), global::Clarifai.Api.MultiInputAnnotationResponse.Parser, new[]{ "Status", "Hits" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.SingleInputCountResponse), global::Clarifai.Api.SingleInputCountResponse.Parser, new[]{ "Status", "Counts" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.GetInputCountRequest), global::Clarifai.Api.GetInputCountRequest.Parser, new[]{ "UserAppId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.PostModelOutputsRequest), global::Clarifai.Api.PostModelOutputsRequest.Parser, new[]{ "UserAppId", "ModelId", "VersionId", "Inputs", "Model" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.ListModelInputsRequest), global::Clarifai.Api.ListModelInputsRequest.Parser, new[]{ "UserAppId", "ModelId", "VersionId", "Page", "PerPage" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.GetKeyRequest), global::Clarifai.Api.GetKeyRequest.Parser, new[]{ "UserAppId", "KeyId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.ListKeysRequest), global::Clarifai.Api.ListKeysRequest.Parser, new[]{ "UserAppId", "Page", "PerPage" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.ListAppKeysRequest), global::Clarifai.Api.ListAppKeysRequest.Parser, new[]{ "UserAppId", "Page", "PerPage" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.PostKeysRequest), global::Clarifai.Api.PostKeysRequest.Parser, new[]{ "UserAppId", "Keys" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.DeleteKeyRequest), global::Clarifai.Api.DeleteKeyRequest.Parser, new[]{ "UserAppId", "KeyId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.PatchKeysRequest), global::Clarifai.Api.PatchKeysRequest.Parser, new[]{ "UserAppId", "Keys", "Action" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.SingleKeyResponse), global::Clarifai.Api.SingleKeyResponse.Parser, new[]{ "Status", "Key" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.MultiKeyResponse), global::Clarifai.Api.MultiKeyResponse.Parser, new[]{ "Status", "Keys" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.GetModelRequest), global::Clarifai.Api.GetModelRequest.Parser, new[]{ "UserAppId", "ModelId", "VersionId", "Language", "TrainedBefore" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.ListModelsRequest), global::Clarifai.Api.ListModelsRequest.Parser, new[]{ "UserAppId", "Page", "PerPage", "SortAscending", "SortByName", "SortByNumInputs", "SortByModifiedAt", "Query", "Name", "ModelTypeId", "TrainedOnly", "InputFields", "OutputFields", "License" }, new[]{ "SortBy" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.PostModelsRequest), global::Clarifai.Api.PostModelsRequest.Parser, new[]{ "UserAppId", "Model", "Models" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.PatchModelsRequest), global::Clarifai.Api.PatchModelsRequest.Parser, new[]{ "UserAppId", "Models", "Action" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.DeleteModelRequest), global::Clarifai.Api.DeleteModelRequest.Parser, new[]{ "UserAppId", "ModelId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.DeleteModelsRequest), global::Clarifai.Api.DeleteModelsRequest.Parser, new[]{ "UserAppId", "Ids", "DeleteAll" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.PostModelsSearchesRequest), global::Clarifai.Api.PostModelsSearchesRequest.Parser, new[]{ "UserAppId", "ModelQuery", "Pagination" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.SingleModelResponse), global::Clarifai.Api.SingleModelResponse.Parser, new[]{ "Status", "Model" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.MultiModelResponse), global::Clarifai.Api.MultiModelResponse.Parser, new[]{ "Status", "Models" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.PatchModelVersionsRequest), global::Clarifai.Api.PatchModelVersionsRequest.Parser, new[]{ "UserAppId", "ModelId", "ModelVersions", "Action" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.GetModelVersionRequest), global::Clarifai.Api.GetModelVersionRequest.Parser, new[]{ "UserAppId", "ModelId", "VersionId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.ListModelVersionsRequest), global::Clarifai.Api.ListModelVersionsRequest.Parser, new[]{ "UserAppId", "ModelId", "Page", "PerPage", "ConceptIds" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.DeleteModelVersionRequest), global::Clarifai.Api.DeleteModelVersionRequest.Parser, new[]{ "UserAppId", "ModelId", "VersionId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.SingleModelVersionResponse), global::Clarifai.Api.SingleModelVersionResponse.Parser, new[]{ "Status", "ModelVersion" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.MultiModelVersionResponse), global::Clarifai.Api.MultiModelVersionResponse.Parser, new[]{ "Status", "ModelVersions" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.PostModelVersionsRequest), global::Clarifai.Api.PostModelVersionsRequest.Parser, new[]{ "UserAppId", "ModelId", "ModelVersions", "Search", "TrainSearch", "TestSearch", "EvaluateAfterTraining", "Description" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.PostModelVersionMetricsRequest), global::Clarifai.Api.PostModelVersionMetricsRequest.Parser, new[]{ "UserAppId", "ModelId", "VersionId", "MaxExamples", "TestSearch" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.GetModelVersionMetricsRequest), global::Clarifai.Api.GetModelVersionMetricsRequest.Parser, new[]{ "UserAppId", "ModelId", "VersionId", "Fields" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.GetModelTypeRequest), global::Clarifai.Api.GetModelTypeRequest.Parser, new[]{ "UserAppId", "ModelTypeId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.ListModelTypesRequest), global::Clarifai.Api.ListModelTypesRequest.Parser, new[]{ "UserAppId", "Page", "PerPage" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.ListOpenSourceLicensesRequest), global::Clarifai.Api.ListOpenSourceLicensesRequest.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.ListOpenSourceLicensesResponse), global::Clarifai.Api.ListOpenSourceLicensesResponse.Parser, new[]{ "Status", "Licenses" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.SingleModelTypeResponse), global::Clarifai.Api.SingleModelTypeResponse.Parser, new[]{ "Status", "ModelType" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.MultiModelTypeResponse), global::Clarifai.Api.MultiModelTypeResponse.Parser, new[]{ "Status", "ModelTypes" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.GetModelVersionInputExampleRequest), global::Clarifai.Api.GetModelVersionInputExampleRequest.Parser, new[]{ "UserAppId", "ModelId", "ModelVersionId", "ExampleId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.ListModelVersionInputExamplesRequest), global::Clarifai.Api.ListModelVersionInputExamplesRequest.Parser, new[]{ "UserAppId", "ModelId", "ModelVersionId", "Page", "PerPage" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.SingleModelVersionInputExampleResponse), global::Clarifai.Api.SingleModelVersionInputExampleResponse.Parser, new[]{ "Status", "ModelVersionInputExample" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.MultiModelVersionInputExampleResponse), global::Clarifai.Api.MultiModelVersionInputExampleResponse.Parser, new[]{ "Status", "ModelVersionInputExamples" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.ListModelReferencesRequest), global::Clarifai.Api.ListModelReferencesRequest.Parser, new[]{ "UserAppId", "ModelId", "Page", "PerPage" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.MultiModelReferenceResponse), global::Clarifai.Api.MultiModelReferenceResponse.Parser, new[]{ "Status", "ModelReferences" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.MultiOutputResponse), global::Clarifai.Api.MultiOutputResponse.Parser, new[]{ "Status", "Outputs" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.ListScopesRequest), global::Clarifai.Api.ListScopesRequest.Parser, new[]{ "KeyType", "UserAppId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.MyScopesRequest), global::Clarifai.Api.MyScopesRequest.Parser, new[]{ "UserAppId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.MultiScopeDepsResponse), global::Clarifai.Api.MultiScopeDepsResponse.Parser, new[]{ "Status", "ScopeDeps", "EndpointDeps" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.MultiScopeResponse), global::Clarifai.Api.MultiScopeResponse.Parser, new[]{ "Status", "Scopes", "App", "Endpoints" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.GetSearchRequest), global::Clarifai.Api.GetSearchRequest.Parser, new[]{ "UserAppId", "Id" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.ListSearchesRequest), global::Clarifai.Api.ListSearchesRequest.Parser, new[]{ "UserAppId", "Page", "PerPage" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.PostSearchesRequest), global::Clarifai.Api.PostSearchesRequest.Parser, new[]{ "UserAppId", "Query", "Searches", "Pagination" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.PostSearchesByIDRequest), global::Clarifai.Api.PostSearchesByIDRequest.Parser, new[]{ "UserAppId", "Id", "Pagination" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.DeleteSearchRequest), global::Clarifai.Api.DeleteSearchRequest.Parser, new[]{ "UserAppId", "Id" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.PostAnnotationsSearchesRequest), global::Clarifai.Api.PostAnnotationsSearchesRequest.Parser, new[]{ "UserAppId", "Searches", "Pagination" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.DeleteAnnotationSearchMetricsRequest), global::Clarifai.Api.DeleteAnnotationSearchMetricsRequest.Parser, new[]{ "UserAppId", "Id" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.PostInputsSearchesRequest), global::Clarifai.Api.PostInputsSearchesRequest.Parser, new[]{ "UserAppId", "Searches", "Pagination" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.SingleSearchResponse), global::Clarifai.Api.SingleSearchResponse.Parser, new[]{ "Status", "Search" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.MultiSearchResponse), global::Clarifai.Api.MultiSearchResponse.Parser, new[]{ "Status", "Id", "Hits", "Query", "Searches" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.PostAnnotationSearchMetricsRequest), global::Clarifai.Api.PostAnnotationSearchMetricsRequest.Parser, new[]{ "UserAppId", "Id", "GroundTruth", "SearchToEval", "Data", "EvaluationType" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.GetAnnotationSearchMetricsRequest), global::Clarifai.Api.GetAnnotationSearchMetricsRequest.Parser, new[]{ "UserAppId", "Id" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.ListAnnotationSearchMetricsRequest), global::Clarifai.Api.ListAnnotationSearchMetricsRequest.Parser, new[]{ "UserAppId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.MultiAnnotationSearchMetricsResponse), global::Clarifai.Api.MultiAnnotationSearchMetricsResponse.Parser, new[]{ "Status", "AnnotationSearchMetrics" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.PostValidatePasswordRequest), global::Clarifai.Api.PostValidatePasswordRequest.Parser, new[]{ "UserAppId", "Password" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.SinglePasswordValidationResponse), global::Clarifai.Api.SinglePasswordValidationResponse.Parser, new[]{ "Status", "PasswordViolations" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.GetWorkflowRequest), global::Clarifai.Api.GetWorkflowRequest.Parser, new[]{ "UserAppId", "WorkflowId", "FavorClarifaiWorkflows" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.ListWorkflowsRequest), global::Clarifai.Api.ListWorkflowsRequest.Parser, new[]{ "UserAppId", "Page", "PerPage", "SortAscending", "SortById", "SortByModifiedAt", "Query", "Id" }, new[]{ "SortBy" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.PostWorkflowsRequest), global::Clarifai.Api.PostWorkflowsRequest.Parser, new[]{ "UserAppId", "Workflows" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.PatchWorkflowsRequest), global::Clarifai.Api.PatchWorkflowsRequest.Parser, new[]{ "UserAppId", "Workflows", "Action" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.DeleteWorkflowRequest), global::Clarifai.Api.DeleteWorkflowRequest.Parser, new[]{ "UserAppId", "WorkflowId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.DeleteWorkflowsRequest), global::Clarifai.Api.DeleteWorkflowsRequest.Parser, new[]{ "UserAppId", "Ids", "DeleteAll" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.SingleWorkflowResponse), global::Clarifai.Api.SingleWorkflowResponse.Parser, new[]{ "Status", "Workflow" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.MultiWorkflowResponse), global::Clarifai.Api.MultiWorkflowResponse.Parser, new[]{ "Status", "Workflows" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.PostWorkflowResultsRequest), global::Clarifai.Api.PostWorkflowResultsRequest.Parser, new[]{ "UserAppId", "WorkflowId", "Inputs", "OutputConfig", "FavorClarifaiWorkflows", "WorkflowState" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.PostWorkflowResultsResponse), global::Clarifai.Api.PostWorkflowResultsResponse.Parser, new[]{ "Status", "Workflow", "Results", "WorkflowState" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.PostWorkflowResultsSimilarityRequest), global::Clarifai.Api.PostWorkflowResultsSimilarityRequest.Parser, new[]{ "UserAppId", "WorkflowId", "ModelVersionId", "ProbeInputs", "PoolInputs", "FavorClarifaiWorkflows" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.PostWorkflowResultsSimilarityResponse), global::Clarifai.Api.PostWorkflowResultsSimilarityResponse.Parser, new[]{ "Status", "Results" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.PostAppDuplicationsRequest), global::Clarifai.Api.PostAppDuplicationsRequest.Parser, new[]{ "UserAppId", "AppDuplications" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.GetAppDuplicationRequest), global::Clarifai.Api.GetAppDuplicationRequest.Parser, new[]{ "UserAppId", "AppDuplicationId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.ListAppDuplicationsRequest), global::Clarifai.Api.ListAppDuplicationsRequest.Parser, new[]{ "UserAppId", "Page", "PerPage" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.MultiAppDuplicationsResponse), global::Clarifai.Api.MultiAppDuplicationsResponse.Parser, new[]{ "Status", "AppDuplications" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.SingleAppDuplicationResponse), global::Clarifai.Api.SingleAppDuplicationResponse.Parser, new[]{ "Status", "AppDuplication" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.PostTasksRequest), global::Clarifai.Api.PostTasksRequest.Parser, new[]{ "UserAppId", "Tasks" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.GetTaskRequest), global::Clarifai.Api.GetTaskRequest.Parser, new[]{ "UserAppId", "TaskId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.ListTasksRequest), global::Clarifai.Api.ListTasksRequest.Parser, new[]{ "UserAppId", "Page", "PerPage", "WorkerUserIds", "ReviewUserIds", "IncludingLabelOrderTasks" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.PatchTasksRequest), global::Clarifai.Api.PatchTasksRequest.Parser, new[]{ "UserAppId", "Tasks", "Action" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.DeleteTasksRequest), global::Clarifai.Api.DeleteTasksRequest.Parser, new[]{ "UserAppId", "Ids" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.MultiTaskResponse), global::Clarifai.Api.MultiTaskResponse.Parser, new[]{ "Status", "Tasks" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.SingleTaskResponse), global::Clarifai.Api.SingleTaskResponse.Parser, new[]{ "Status", "Task" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.GetTaskCountRequest), global::Clarifai.Api.GetTaskCountRequest.Parser, new[]{ "UserAppId", "TaskId", "UserIds" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.SingleTaskCountResponse), global::Clarifai.Api.SingleTaskCountResponse.Parser, new[]{ "Status", "AppId", "TaskId", "Counts" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.PostCollectorsRequest), global::Clarifai.Api.PostCollectorsRequest.Parser, new[]{ "UserAppId", "Collectors" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.PatchCollectorsRequest), global::Clarifai.Api.PatchCollectorsRequest.Parser, new[]{ "UserAppId", "Collectors", "Action" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.DeleteCollectorsRequest), global::Clarifai.Api.DeleteCollectorsRequest.Parser, new[]{ "UserAppId", "Ids", "DeleteAll" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.GetCollectorRequest), global::Clarifai.Api.GetCollectorRequest.Parser, new[]{ "UserAppId", "CollectorId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.ListCollectorsRequest), global::Clarifai.Api.ListCollectorsRequest.Parser, new[]{ "UserAppId", "Page", "PerPage" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.MultiCollectorResponse), global::Clarifai.Api.MultiCollectorResponse.Parser, new[]{ "Status", "Collectors" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.SingleCollectorResponse), global::Clarifai.Api.SingleCollectorResponse.Parser, new[]{ "Status", "Collector" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.PostStatValuesRequest), global::Clarifai.Api.PostStatValuesRequest.Parser, new[]{ "UserAppId", "StatValues" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.MultiStatValueResponse), global::Clarifai.Api.MultiStatValueResponse.Parser, new[]{ "Status", "StatValues" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.PostStatValuesAggregateRequest), global::Clarifai.Api.PostStatValuesAggregateRequest.Parser, new[]{ "UserAppId", "StatValueAggregateQueries" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Clarifai.Api.MultiStatValueAggregateResponse), global::Clarifai.Api.MultiStatValueAggregateResponse.Parser, new[]{ "Status", "StatValueAggregateResults" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum OrganizationInvitationStatus {
    [pbr::OriginalName("NOT_SET")] NotSet = 0,
    [pbr::OriginalName("PENDING")] Pending = 1,
    [pbr::OriginalName("ACCEPTED")] Accepted = 2,
    [pbr::OriginalName("CANCELLED")] Cancelled = 3,
    [pbr::OriginalName("DECLINED")] Declined = 4,
    [pbr::OriginalName("EXPIRED")] Expired = 5,
  }

  #endregion

  #region Messages
  /// <summary>
  /// Split the results into pages.
  /// </summary>
  public sealed partial class Pagination : pb::IMessage<Pagination> {
    private static readonly pb::MessageParser<Pagination> _parser = new pb::MessageParser<Pagination>(() => new Pagination());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Pagination> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Pagination() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Pagination(Pagination other) : this() {
      page_ = other.page_;
      perPage_ = other.perPage_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Pagination Clone() {
      return new Pagination(this);
    }

    /// <summary>Field number for the "page" field.</summary>
    public const int PageFieldNumber = 1;
    private uint page_;
    /// <summary>
    /// (optional URL parameter) The page number. Pagination is used to split the results into chunks. Defaults to 1.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Page {
      get { return page_; }
      set {
        page_ = value;
      }
    }

    /// <summary>Field number for the "per_page" field.</summary>
    public const int PerPageFieldNumber = 2;
    private uint perPage_;
    /// <summary>
    /// (optional URL parameter) The number of results that will be contained in each page. Defaults to 128.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint PerPage {
      get { return perPage_; }
      set {
        perPage_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Pagination);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Pagination other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Page != other.Page) return false;
      if (PerPage != other.PerPage) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Page != 0) hash ^= Page.GetHashCode();
      if (PerPage != 0) hash ^= PerPage.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Page != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Page);
      }
      if (PerPage != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(PerPage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Page != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Page);
      }
      if (PerPage != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PerPage);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Pagination other) {
      if (other == null) {
        return;
      }
      if (other.Page != 0) {
        Page = other.Page;
      }
      if (other.PerPage != 0) {
        PerPage = other.PerPage;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Page = input.ReadUInt32();
            break;
          }
          case 16: {
            PerPage = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /////////////////////////////////////////////////////////////////////////////////
  /// Requests / Responses from /proto/clarifai/api/annotation.proto
  /////////////////////////////////////////////////////////////////////////////////
  /// </summary>
  public sealed partial class GetAnnotationRequest : pb::IMessage<GetAnnotationRequest> {
    private static readonly pb::MessageParser<GetAnnotationRequest> _parser = new pb::MessageParser<GetAnnotationRequest>(() => new GetAnnotationRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetAnnotationRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAnnotationRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAnnotationRequest(GetAnnotationRequest other) : this() {
      userAppId_ = other.userAppId_ != null ? other.userAppId_.Clone() : null;
      annotationId_ = other.annotationId_;
      inputId_ = other.inputId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAnnotationRequest Clone() {
      return new GetAnnotationRequest(this);
    }

    /// <summary>Field number for the "user_app_id" field.</summary>
    public const int UserAppIdFieldNumber = 1;
    private global::Clarifai.Api.UserAppIDSet userAppId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.UserAppIDSet UserAppId {
      get { return userAppId_; }
      set {
        userAppId_ = value;
      }
    }

    /// <summary>Field number for the "annotation_id" field.</summary>
    public const int AnnotationIdFieldNumber = 2;
    private string annotationId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AnnotationId {
      get { return annotationId_; }
      set {
        annotationId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "input_id" field.</summary>
    public const int InputIdFieldNumber = 3;
    private string inputId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string InputId {
      get { return inputId_; }
      set {
        inputId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetAnnotationRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetAnnotationRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserAppId, other.UserAppId)) return false;
      if (AnnotationId != other.AnnotationId) return false;
      if (InputId != other.InputId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (userAppId_ != null) hash ^= UserAppId.GetHashCode();
      if (AnnotationId.Length != 0) hash ^= AnnotationId.GetHashCode();
      if (InputId.Length != 0) hash ^= InputId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (userAppId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserAppId);
      }
      if (AnnotationId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(AnnotationId);
      }
      if (InputId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(InputId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (userAppId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserAppId);
      }
      if (AnnotationId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AnnotationId);
      }
      if (InputId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InputId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetAnnotationRequest other) {
      if (other == null) {
        return;
      }
      if (other.userAppId_ != null) {
        if (userAppId_ == null) {
          UserAppId = new global::Clarifai.Api.UserAppIDSet();
        }
        UserAppId.MergeFrom(other.UserAppId);
      }
      if (other.AnnotationId.Length != 0) {
        AnnotationId = other.AnnotationId;
      }
      if (other.InputId.Length != 0) {
        InputId = other.InputId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (userAppId_ == null) {
              UserAppId = new global::Clarifai.Api.UserAppIDSet();
            }
            input.ReadMessage(UserAppId);
            break;
          }
          case 18: {
            AnnotationId = input.ReadString();
            break;
          }
          case 26: {
            InputId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ListAnnotationsRequest : pb::IMessage<ListAnnotationsRequest> {
    private static readonly pb::MessageParser<ListAnnotationsRequest> _parser = new pb::MessageParser<ListAnnotationsRequest>(() => new ListAnnotationsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListAnnotationsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListAnnotationsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListAnnotationsRequest(ListAnnotationsRequest other) : this() {
      userAppId_ = other.userAppId_ != null ? other.userAppId_.Clone() : null;
      ids_ = other.ids_.Clone();
      inputIds_ = other.inputIds_.Clone();
      userIds_ = other.userIds_.Clone();
      modelVersionIds_ = other.modelVersionIds_.Clone();
      statuses_ = other.statuses_.Clone();
      listAllAnnotations_ = other.listAllAnnotations_;
      page_ = other.page_;
      perPage_ = other.perPage_;
      taskId_ = other.taskId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListAnnotationsRequest Clone() {
      return new ListAnnotationsRequest(this);
    }

    /// <summary>Field number for the "user_app_id" field.</summary>
    public const int UserAppIdFieldNumber = 1;
    private global::Clarifai.Api.UserAppIDSet userAppId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.UserAppIDSet UserAppId {
      get { return userAppId_; }
      set {
        userAppId_ = value;
      }
    }

    /// <summary>Field number for the "ids" field.</summary>
    public const int IdsFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_ids_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> ids_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// List annotations for these IDs
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Ids {
      get { return ids_; }
    }

    /// <summary>Field number for the "input_ids" field.</summary>
    public const int InputIdsFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_inputIds_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> inputIds_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// List annotations for these Input IDs
    /// Note that 'ids' are optional but if the are provided the number and order in
    /// 'ids' and 'input_ids' should match
    /// If you do not specify 'ids' all the annotations for 'input_ids' are returned
    /// If a you do not specify both 'input_ids' and 'ids' all the annotations in the app are returned
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> InputIds {
      get { return inputIds_; }
    }

    /// <summary>Field number for the "user_ids" field.</summary>
    public const int UserIdsFieldNumber = 9;
    private static readonly pb::FieldCodec<string> _repeated_userIds_codec
        = pb::FieldCodec.ForString(74);
    private readonly pbc::RepeatedField<string> userIds_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Only return the annotations that has one of these user IDs, effectively operating as an
    /// OR among them to filter down the results.
    /// If model_version_ids are also provided these user_ids are OR'd with them as well since
    /// annotations are either provided by users or model versions and we want the union of any
    /// provided user or model version annotations in the results of ListAnnotations request.
    /// If no user_ids are provided then annotations from all users are returned.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> UserIds {
      get { return userIds_; }
    }

    /// <summary>Field number for the "model_version_ids" field.</summary>
    public const int ModelVersionIdsFieldNumber = 10;
    private static readonly pb::FieldCodec<string> _repeated_modelVersionIds_codec
        = pb::FieldCodec.ForString(82);
    private readonly pbc::RepeatedField<string> modelVersionIds_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Only return the annotations that has one of these model version IDs, effectively operating as an
    /// OR among them to filter down the results.
    /// If user_ids are also provided these model_versions_ids are OR'd with them as well since
    /// annotations are either provided by users or model versions and we want the union of any
    /// provided user or model version annotations in the results of ListAnnotations request.
    /// If no model_version_ids are provided then annotations from all model versions are returned.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> ModelVersionIds {
      get { return modelVersionIds_; }
    }

    /// <summary>Field number for the "statuses" field.</summary>
    public const int StatusesFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Clarifai.Api.Status.Status> _repeated_statuses_codec
        = pb::FieldCodec.ForMessage(42, global::Clarifai.Api.Status.Status.Parser);
    private readonly pbc::RepeatedField<global::Clarifai.Api.Status.Status> statuses_ = new pbc::RepeatedField<global::Clarifai.Api.Status.Status>();
    /// <summary>
    /// Set status to filter by a list of statuses
    /// If not statuses are provided then annotations with any status will be returned.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Clarifai.Api.Status.Status> Statuses {
      get { return statuses_; }
    }

    /// <summary>Field number for the "list_all_annotations" field.</summary>
    public const int ListAllAnnotationsFieldNumber = 6;
    private bool listAllAnnotations_;
    /// <summary>
    /// Set this flag to list both trusted and not trusted annotations
    /// by default it's listing only trusted annotations
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ListAllAnnotations {
      get { return listAllAnnotations_; }
      set {
        listAllAnnotations_ = value;
      }
    }

    /// <summary>Field number for the "page" field.</summary>
    public const int PageFieldNumber = 7;
    private uint page_;
    /// <summary>
    /// (optional URL parameter) The page number. Pagination is used to split the results into chunks.
    /// Defaults to 1.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Page {
      get { return page_; }
      set {
        page_ = value;
      }
    }

    /// <summary>Field number for the "per_page" field.</summary>
    public const int PerPageFieldNumber = 8;
    private uint perPage_;
    /// <summary>
    /// (optional URL parameter) The number of results that will be contained in each page. Defaults
    /// to 128.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint PerPage {
      get { return perPage_; }
      set {
        perPage_ = value;
      }
    }

    /// <summary>Field number for the "task_id" field.</summary>
    public const int TaskIdFieldNumber = 11;
    private string taskId_ = "";
    /// <summary>
    /// Flag to filter annotations by task_id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TaskId {
      get { return taskId_; }
      set {
        taskId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListAnnotationsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListAnnotationsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserAppId, other.UserAppId)) return false;
      if(!ids_.Equals(other.ids_)) return false;
      if(!inputIds_.Equals(other.inputIds_)) return false;
      if(!userIds_.Equals(other.userIds_)) return false;
      if(!modelVersionIds_.Equals(other.modelVersionIds_)) return false;
      if(!statuses_.Equals(other.statuses_)) return false;
      if (ListAllAnnotations != other.ListAllAnnotations) return false;
      if (Page != other.Page) return false;
      if (PerPage != other.PerPage) return false;
      if (TaskId != other.TaskId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (userAppId_ != null) hash ^= UserAppId.GetHashCode();
      hash ^= ids_.GetHashCode();
      hash ^= inputIds_.GetHashCode();
      hash ^= userIds_.GetHashCode();
      hash ^= modelVersionIds_.GetHashCode();
      hash ^= statuses_.GetHashCode();
      if (ListAllAnnotations != false) hash ^= ListAllAnnotations.GetHashCode();
      if (Page != 0) hash ^= Page.GetHashCode();
      if (PerPage != 0) hash ^= PerPage.GetHashCode();
      if (TaskId.Length != 0) hash ^= TaskId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (userAppId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserAppId);
      }
      ids_.WriteTo(output, _repeated_ids_codec);
      inputIds_.WriteTo(output, _repeated_inputIds_codec);
      statuses_.WriteTo(output, _repeated_statuses_codec);
      if (ListAllAnnotations != false) {
        output.WriteRawTag(48);
        output.WriteBool(ListAllAnnotations);
      }
      if (Page != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(Page);
      }
      if (PerPage != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(PerPage);
      }
      userIds_.WriteTo(output, _repeated_userIds_codec);
      modelVersionIds_.WriteTo(output, _repeated_modelVersionIds_codec);
      if (TaskId.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(TaskId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (userAppId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserAppId);
      }
      size += ids_.CalculateSize(_repeated_ids_codec);
      size += inputIds_.CalculateSize(_repeated_inputIds_codec);
      size += userIds_.CalculateSize(_repeated_userIds_codec);
      size += modelVersionIds_.CalculateSize(_repeated_modelVersionIds_codec);
      size += statuses_.CalculateSize(_repeated_statuses_codec);
      if (ListAllAnnotations != false) {
        size += 1 + 1;
      }
      if (Page != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Page);
      }
      if (PerPage != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PerPage);
      }
      if (TaskId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TaskId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListAnnotationsRequest other) {
      if (other == null) {
        return;
      }
      if (other.userAppId_ != null) {
        if (userAppId_ == null) {
          UserAppId = new global::Clarifai.Api.UserAppIDSet();
        }
        UserAppId.MergeFrom(other.UserAppId);
      }
      ids_.Add(other.ids_);
      inputIds_.Add(other.inputIds_);
      userIds_.Add(other.userIds_);
      modelVersionIds_.Add(other.modelVersionIds_);
      statuses_.Add(other.statuses_);
      if (other.ListAllAnnotations != false) {
        ListAllAnnotations = other.ListAllAnnotations;
      }
      if (other.Page != 0) {
        Page = other.Page;
      }
      if (other.PerPage != 0) {
        PerPage = other.PerPage;
      }
      if (other.TaskId.Length != 0) {
        TaskId = other.TaskId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (userAppId_ == null) {
              UserAppId = new global::Clarifai.Api.UserAppIDSet();
            }
            input.ReadMessage(UserAppId);
            break;
          }
          case 18: {
            ids_.AddEntriesFrom(input, _repeated_ids_codec);
            break;
          }
          case 26: {
            inputIds_.AddEntriesFrom(input, _repeated_inputIds_codec);
            break;
          }
          case 42: {
            statuses_.AddEntriesFrom(input, _repeated_statuses_codec);
            break;
          }
          case 48: {
            ListAllAnnotations = input.ReadBool();
            break;
          }
          case 56: {
            Page = input.ReadUInt32();
            break;
          }
          case 64: {
            PerPage = input.ReadUInt32();
            break;
          }
          case 74: {
            userIds_.AddEntriesFrom(input, _repeated_userIds_codec);
            break;
          }
          case 82: {
            modelVersionIds_.AddEntriesFrom(input, _repeated_modelVersionIds_codec);
            break;
          }
          case 90: {
            TaskId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PostAnnotationsRequest : pb::IMessage<PostAnnotationsRequest> {
    private static readonly pb::MessageParser<PostAnnotationsRequest> _parser = new pb::MessageParser<PostAnnotationsRequest>(() => new PostAnnotationsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PostAnnotationsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostAnnotationsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostAnnotationsRequest(PostAnnotationsRequest other) : this() {
      userAppId_ = other.userAppId_ != null ? other.userAppId_.Clone() : null;
      annotations_ = other.annotations_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostAnnotationsRequest Clone() {
      return new PostAnnotationsRequest(this);
    }

    /// <summary>Field number for the "user_app_id" field.</summary>
    public const int UserAppIdFieldNumber = 1;
    private global::Clarifai.Api.UserAppIDSet userAppId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.UserAppIDSet UserAppId {
      get { return userAppId_; }
      set {
        userAppId_ = value;
      }
    }

    /// <summary>Field number for the "annotations" field.</summary>
    public const int AnnotationsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Clarifai.Api.Annotation> _repeated_annotations_codec
        = pb::FieldCodec.ForMessage(18, global::Clarifai.Api.Annotation.Parser);
    private readonly pbc::RepeatedField<global::Clarifai.Api.Annotation> annotations_ = new pbc::RepeatedField<global::Clarifai.Api.Annotation>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Clarifai.Api.Annotation> Annotations {
      get { return annotations_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PostAnnotationsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PostAnnotationsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserAppId, other.UserAppId)) return false;
      if(!annotations_.Equals(other.annotations_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (userAppId_ != null) hash ^= UserAppId.GetHashCode();
      hash ^= annotations_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (userAppId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserAppId);
      }
      annotations_.WriteTo(output, _repeated_annotations_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (userAppId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserAppId);
      }
      size += annotations_.CalculateSize(_repeated_annotations_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PostAnnotationsRequest other) {
      if (other == null) {
        return;
      }
      if (other.userAppId_ != null) {
        if (userAppId_ == null) {
          UserAppId = new global::Clarifai.Api.UserAppIDSet();
        }
        UserAppId.MergeFrom(other.UserAppId);
      }
      annotations_.Add(other.annotations_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (userAppId_ == null) {
              UserAppId = new global::Clarifai.Api.UserAppIDSet();
            }
            input.ReadMessage(UserAppId);
            break;
          }
          case 18: {
            annotations_.AddEntriesFrom(input, _repeated_annotations_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PatchAnnotationsRequest : pb::IMessage<PatchAnnotationsRequest> {
    private static readonly pb::MessageParser<PatchAnnotationsRequest> _parser = new pb::MessageParser<PatchAnnotationsRequest>(() => new PatchAnnotationsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PatchAnnotationsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PatchAnnotationsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PatchAnnotationsRequest(PatchAnnotationsRequest other) : this() {
      userAppId_ = other.userAppId_ != null ? other.userAppId_.Clone() : null;
      annotations_ = other.annotations_.Clone();
      action_ = other.action_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PatchAnnotationsRequest Clone() {
      return new PatchAnnotationsRequest(this);
    }

    /// <summary>Field number for the "user_app_id" field.</summary>
    public const int UserAppIdFieldNumber = 1;
    private global::Clarifai.Api.UserAppIDSet userAppId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.UserAppIDSet UserAppId {
      get { return userAppId_; }
      set {
        userAppId_ = value;
      }
    }

    /// <summary>Field number for the "annotations" field.</summary>
    public const int AnnotationsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Clarifai.Api.Annotation> _repeated_annotations_codec
        = pb::FieldCodec.ForMessage(18, global::Clarifai.Api.Annotation.Parser);
    private readonly pbc::RepeatedField<global::Clarifai.Api.Annotation> annotations_ = new pbc::RepeatedField<global::Clarifai.Api.Annotation>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Clarifai.Api.Annotation> Annotations {
      get { return annotations_; }
    }

    /// <summary>Field number for the "action" field.</summary>
    public const int ActionFieldNumber = 3;
    private string action_ = "";
    /// <summary>
    /// The action to perform on the patched objects
    /// For now actions 'merge', 'overwrite', and 'remove' are supported
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Action {
      get { return action_; }
      set {
        action_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PatchAnnotationsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PatchAnnotationsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserAppId, other.UserAppId)) return false;
      if(!annotations_.Equals(other.annotations_)) return false;
      if (Action != other.Action) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (userAppId_ != null) hash ^= UserAppId.GetHashCode();
      hash ^= annotations_.GetHashCode();
      if (Action.Length != 0) hash ^= Action.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (userAppId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserAppId);
      }
      annotations_.WriteTo(output, _repeated_annotations_codec);
      if (Action.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Action);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (userAppId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserAppId);
      }
      size += annotations_.CalculateSize(_repeated_annotations_codec);
      if (Action.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Action);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PatchAnnotationsRequest other) {
      if (other == null) {
        return;
      }
      if (other.userAppId_ != null) {
        if (userAppId_ == null) {
          UserAppId = new global::Clarifai.Api.UserAppIDSet();
        }
        UserAppId.MergeFrom(other.UserAppId);
      }
      annotations_.Add(other.annotations_);
      if (other.Action.Length != 0) {
        Action = other.Action;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (userAppId_ == null) {
              UserAppId = new global::Clarifai.Api.UserAppIDSet();
            }
            input.ReadMessage(UserAppId);
            break;
          }
          case 18: {
            annotations_.AddEntriesFrom(input, _repeated_annotations_codec);
            break;
          }
          case 26: {
            Action = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PatchAnnotationsStatusRequest : pb::IMessage<PatchAnnotationsStatusRequest> {
    private static readonly pb::MessageParser<PatchAnnotationsStatusRequest> _parser = new pb::MessageParser<PatchAnnotationsStatusRequest>(() => new PatchAnnotationsStatusRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PatchAnnotationsStatusRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PatchAnnotationsStatusRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PatchAnnotationsStatusRequest(PatchAnnotationsStatusRequest other) : this() {
      userAppId_ = other.userAppId_ != null ? other.userAppId_.Clone() : null;
      statusCode_ = other.statusCode_;
      userIds_ = other.userIds_.Clone();
      taskId_ = other.taskId_;
      action_ = other.action_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PatchAnnotationsStatusRequest Clone() {
      return new PatchAnnotationsStatusRequest(this);
    }

    /// <summary>Field number for the "user_app_id" field.</summary>
    public const int UserAppIdFieldNumber = 1;
    private global::Clarifai.Api.UserAppIDSet userAppId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.UserAppIDSet UserAppId {
      get { return userAppId_; }
      set {
        userAppId_ = value;
      }
    }

    /// <summary>Field number for the "status_code" field.</summary>
    public const int StatusCodeFieldNumber = 2;
    private global::Clarifai.Api.Status.StatusCode statusCode_ = global::Clarifai.Api.Status.StatusCode.Zero;
    /// <summary>
    /// Annotation Status code
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.Status.StatusCode StatusCode {
      get { return statusCode_; }
      set {
        statusCode_ = value;
      }
    }

    /// <summary>Field number for the "user_ids" field.</summary>
    public const int UserIdsFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_userIds_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> userIds_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> UserIds {
      get { return userIds_; }
    }

    /// <summary>Field number for the "task_id" field.</summary>
    public const int TaskIdFieldNumber = 4;
    private string taskId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TaskId {
      get { return taskId_; }
      set {
        taskId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "action" field.</summary>
    public const int ActionFieldNumber = 5;
    private string action_ = "";
    /// <summary>
    /// 'overwrite' is supported
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Action {
      get { return action_; }
      set {
        action_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PatchAnnotationsStatusRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PatchAnnotationsStatusRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserAppId, other.UserAppId)) return false;
      if (StatusCode != other.StatusCode) return false;
      if(!userIds_.Equals(other.userIds_)) return false;
      if (TaskId != other.TaskId) return false;
      if (Action != other.Action) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (userAppId_ != null) hash ^= UserAppId.GetHashCode();
      if (StatusCode != global::Clarifai.Api.Status.StatusCode.Zero) hash ^= StatusCode.GetHashCode();
      hash ^= userIds_.GetHashCode();
      if (TaskId.Length != 0) hash ^= TaskId.GetHashCode();
      if (Action.Length != 0) hash ^= Action.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (userAppId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserAppId);
      }
      if (StatusCode != global::Clarifai.Api.Status.StatusCode.Zero) {
        output.WriteRawTag(16);
        output.WriteEnum((int) StatusCode);
      }
      userIds_.WriteTo(output, _repeated_userIds_codec);
      if (TaskId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(TaskId);
      }
      if (Action.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Action);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (userAppId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserAppId);
      }
      if (StatusCode != global::Clarifai.Api.Status.StatusCode.Zero) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) StatusCode);
      }
      size += userIds_.CalculateSize(_repeated_userIds_codec);
      if (TaskId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TaskId);
      }
      if (Action.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Action);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PatchAnnotationsStatusRequest other) {
      if (other == null) {
        return;
      }
      if (other.userAppId_ != null) {
        if (userAppId_ == null) {
          UserAppId = new global::Clarifai.Api.UserAppIDSet();
        }
        UserAppId.MergeFrom(other.UserAppId);
      }
      if (other.StatusCode != global::Clarifai.Api.Status.StatusCode.Zero) {
        StatusCode = other.StatusCode;
      }
      userIds_.Add(other.userIds_);
      if (other.TaskId.Length != 0) {
        TaskId = other.TaskId;
      }
      if (other.Action.Length != 0) {
        Action = other.Action;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (userAppId_ == null) {
              UserAppId = new global::Clarifai.Api.UserAppIDSet();
            }
            input.ReadMessage(UserAppId);
            break;
          }
          case 16: {
            StatusCode = (global::Clarifai.Api.Status.StatusCode) input.ReadEnum();
            break;
          }
          case 26: {
            userIds_.AddEntriesFrom(input, _repeated_userIds_codec);
            break;
          }
          case 34: {
            TaskId = input.ReadString();
            break;
          }
          case 42: {
            Action = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PatchAnnotationsStatusResponse : pb::IMessage<PatchAnnotationsStatusResponse> {
    private static readonly pb::MessageParser<PatchAnnotationsStatusResponse> _parser = new pb::MessageParser<PatchAnnotationsStatusResponse>(() => new PatchAnnotationsStatusResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PatchAnnotationsStatusResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PatchAnnotationsStatusResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PatchAnnotationsStatusResponse(PatchAnnotationsStatusResponse other) : this() {
      status_ = other.status_ != null ? other.status_.Clone() : null;
      userIds_ = other.userIds_.Clone();
      updatedCount_ = other.updatedCount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PatchAnnotationsStatusResponse Clone() {
      return new PatchAnnotationsStatusResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::Clarifai.Api.Status.Status status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.Status.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "user_ids" field.</summary>
    public const int UserIdsFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_userIds_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> userIds_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> UserIds {
      get { return userIds_; }
    }

    /// <summary>Field number for the "updated_count" field.</summary>
    public const int UpdatedCountFieldNumber = 3;
    private uint updatedCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint UpdatedCount {
      get { return updatedCount_; }
      set {
        updatedCount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PatchAnnotationsStatusResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PatchAnnotationsStatusResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Status, other.Status)) return false;
      if(!userIds_.Equals(other.userIds_)) return false;
      if (UpdatedCount != other.UpdatedCount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (status_ != null) hash ^= Status.GetHashCode();
      hash ^= userIds_.GetHashCode();
      if (UpdatedCount != 0) hash ^= UpdatedCount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (status_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Status);
      }
      userIds_.WriteTo(output, _repeated_userIds_codec);
      if (UpdatedCount != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(UpdatedCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      size += userIds_.CalculateSize(_repeated_userIds_codec);
      if (UpdatedCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UpdatedCount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PatchAnnotationsStatusResponse other) {
      if (other == null) {
        return;
      }
      if (other.status_ != null) {
        if (status_ == null) {
          Status = new global::Clarifai.Api.Status.Status();
        }
        Status.MergeFrom(other.Status);
      }
      userIds_.Add(other.userIds_);
      if (other.UpdatedCount != 0) {
        UpdatedCount = other.UpdatedCount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (status_ == null) {
              Status = new global::Clarifai.Api.Status.Status();
            }
            input.ReadMessage(Status);
            break;
          }
          case 18: {
            userIds_.AddEntriesFrom(input, _repeated_userIds_codec);
            break;
          }
          case 24: {
            UpdatedCount = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DeleteAnnotationRequest : pb::IMessage<DeleteAnnotationRequest> {
    private static readonly pb::MessageParser<DeleteAnnotationRequest> _parser = new pb::MessageParser<DeleteAnnotationRequest>(() => new DeleteAnnotationRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteAnnotationRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteAnnotationRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteAnnotationRequest(DeleteAnnotationRequest other) : this() {
      userAppId_ = other.userAppId_ != null ? other.userAppId_.Clone() : null;
      inputId_ = other.inputId_;
      annotationId_ = other.annotationId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteAnnotationRequest Clone() {
      return new DeleteAnnotationRequest(this);
    }

    /// <summary>Field number for the "user_app_id" field.</summary>
    public const int UserAppIdFieldNumber = 1;
    private global::Clarifai.Api.UserAppIDSet userAppId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.UserAppIDSet UserAppId {
      get { return userAppId_; }
      set {
        userAppId_ = value;
      }
    }

    /// <summary>Field number for the "input_id" field.</summary>
    public const int InputIdFieldNumber = 2;
    private string inputId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string InputId {
      get { return inputId_; }
      set {
        inputId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "annotation_id" field.</summary>
    public const int AnnotationIdFieldNumber = 3;
    private string annotationId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AnnotationId {
      get { return annotationId_; }
      set {
        annotationId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteAnnotationRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteAnnotationRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserAppId, other.UserAppId)) return false;
      if (InputId != other.InputId) return false;
      if (AnnotationId != other.AnnotationId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (userAppId_ != null) hash ^= UserAppId.GetHashCode();
      if (InputId.Length != 0) hash ^= InputId.GetHashCode();
      if (AnnotationId.Length != 0) hash ^= AnnotationId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (userAppId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserAppId);
      }
      if (InputId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(InputId);
      }
      if (AnnotationId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(AnnotationId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (userAppId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserAppId);
      }
      if (InputId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InputId);
      }
      if (AnnotationId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AnnotationId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteAnnotationRequest other) {
      if (other == null) {
        return;
      }
      if (other.userAppId_ != null) {
        if (userAppId_ == null) {
          UserAppId = new global::Clarifai.Api.UserAppIDSet();
        }
        UserAppId.MergeFrom(other.UserAppId);
      }
      if (other.InputId.Length != 0) {
        InputId = other.InputId;
      }
      if (other.AnnotationId.Length != 0) {
        AnnotationId = other.AnnotationId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (userAppId_ == null) {
              UserAppId = new global::Clarifai.Api.UserAppIDSet();
            }
            input.ReadMessage(UserAppId);
            break;
          }
          case 18: {
            InputId = input.ReadString();
            break;
          }
          case 26: {
            AnnotationId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Request to delete several things by the list of ids.
  /// </summary>
  public sealed partial class DeleteAnnotationsRequest : pb::IMessage<DeleteAnnotationsRequest> {
    private static readonly pb::MessageParser<DeleteAnnotationsRequest> _parser = new pb::MessageParser<DeleteAnnotationsRequest>(() => new DeleteAnnotationsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteAnnotationsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteAnnotationsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteAnnotationsRequest(DeleteAnnotationsRequest other) : this() {
      userAppId_ = other.userAppId_ != null ? other.userAppId_.Clone() : null;
      ids_ = other.ids_.Clone();
      inputIds_ = other.inputIds_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteAnnotationsRequest Clone() {
      return new DeleteAnnotationsRequest(this);
    }

    /// <summary>Field number for the "user_app_id" field.</summary>
    public const int UserAppIdFieldNumber = 1;
    private global::Clarifai.Api.UserAppIDSet userAppId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.UserAppIDSet UserAppId {
      get { return userAppId_; }
      set {
        userAppId_ = value;
      }
    }

    /// <summary>Field number for the "ids" field.</summary>
    public const int IdsFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_ids_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> ids_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Delete annotations with IDs
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Ids {
      get { return ids_; }
    }

    /// <summary>Field number for the "input_ids" field.</summary>
    public const int InputIdsFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_inputIds_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> inputIds_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Delete annotations for these Input IDs
    /// Note that 'ids' are optional but if the are provided the number and order in
    /// 'ids' and 'input_ids' should match
    /// If you do not specifiy 'ids' all the annotations for 'input_ids' are deleted
    /// However you need to specify at least one value for 'input_ids'
    /// i.e. this API does not support deleting all annotations
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> InputIds {
      get { return inputIds_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteAnnotationsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteAnnotationsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserAppId, other.UserAppId)) return false;
      if(!ids_.Equals(other.ids_)) return false;
      if(!inputIds_.Equals(other.inputIds_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (userAppId_ != null) hash ^= UserAppId.GetHashCode();
      hash ^= ids_.GetHashCode();
      hash ^= inputIds_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (userAppId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserAppId);
      }
      ids_.WriteTo(output, _repeated_ids_codec);
      inputIds_.WriteTo(output, _repeated_inputIds_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (userAppId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserAppId);
      }
      size += ids_.CalculateSize(_repeated_ids_codec);
      size += inputIds_.CalculateSize(_repeated_inputIds_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteAnnotationsRequest other) {
      if (other == null) {
        return;
      }
      if (other.userAppId_ != null) {
        if (userAppId_ == null) {
          UserAppId = new global::Clarifai.Api.UserAppIDSet();
        }
        UserAppId.MergeFrom(other.UserAppId);
      }
      ids_.Add(other.ids_);
      inputIds_.Add(other.inputIds_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (userAppId_ == null) {
              UserAppId = new global::Clarifai.Api.UserAppIDSet();
            }
            input.ReadMessage(UserAppId);
            break;
          }
          case 18: {
            ids_.AddEntriesFrom(input, _repeated_ids_codec);
            break;
          }
          case 26: {
            inputIds_.AddEntriesFrom(input, _repeated_inputIds_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SingleAnnotationResponse : pb::IMessage<SingleAnnotationResponse> {
    private static readonly pb::MessageParser<SingleAnnotationResponse> _parser = new pb::MessageParser<SingleAnnotationResponse>(() => new SingleAnnotationResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SingleAnnotationResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SingleAnnotationResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SingleAnnotationResponse(SingleAnnotationResponse other) : this() {
      status_ = other.status_ != null ? other.status_.Clone() : null;
      annotation_ = other.annotation_ != null ? other.annotation_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SingleAnnotationResponse Clone() {
      return new SingleAnnotationResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::Clarifai.Api.Status.Status status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.Status.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "annotation" field.</summary>
    public const int AnnotationFieldNumber = 2;
    private global::Clarifai.Api.Annotation annotation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.Annotation Annotation {
      get { return annotation_; }
      set {
        annotation_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SingleAnnotationResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SingleAnnotationResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Status, other.Status)) return false;
      if (!object.Equals(Annotation, other.Annotation)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (status_ != null) hash ^= Status.GetHashCode();
      if (annotation_ != null) hash ^= Annotation.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (status_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Status);
      }
      if (annotation_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Annotation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      if (annotation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Annotation);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SingleAnnotationResponse other) {
      if (other == null) {
        return;
      }
      if (other.status_ != null) {
        if (status_ == null) {
          Status = new global::Clarifai.Api.Status.Status();
        }
        Status.MergeFrom(other.Status);
      }
      if (other.annotation_ != null) {
        if (annotation_ == null) {
          Annotation = new global::Clarifai.Api.Annotation();
        }
        Annotation.MergeFrom(other.Annotation);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (status_ == null) {
              Status = new global::Clarifai.Api.Status.Status();
            }
            input.ReadMessage(Status);
            break;
          }
          case 18: {
            if (annotation_ == null) {
              Annotation = new global::Clarifai.Api.Annotation();
            }
            input.ReadMessage(Annotation);
            break;
          }
        }
      }
    }

  }

  public sealed partial class MultiAnnotationResponse : pb::IMessage<MultiAnnotationResponse> {
    private static readonly pb::MessageParser<MultiAnnotationResponse> _parser = new pb::MessageParser<MultiAnnotationResponse>(() => new MultiAnnotationResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MultiAnnotationResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiAnnotationResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiAnnotationResponse(MultiAnnotationResponse other) : this() {
      status_ = other.status_ != null ? other.status_.Clone() : null;
      annotations_ = other.annotations_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiAnnotationResponse Clone() {
      return new MultiAnnotationResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::Clarifai.Api.Status.Status status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.Status.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "annotations" field.</summary>
    public const int AnnotationsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Clarifai.Api.Annotation> _repeated_annotations_codec
        = pb::FieldCodec.ForMessage(18, global::Clarifai.Api.Annotation.Parser);
    private readonly pbc::RepeatedField<global::Clarifai.Api.Annotation> annotations_ = new pbc::RepeatedField<global::Clarifai.Api.Annotation>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Clarifai.Api.Annotation> Annotations {
      get { return annotations_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MultiAnnotationResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MultiAnnotationResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Status, other.Status)) return false;
      if(!annotations_.Equals(other.annotations_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (status_ != null) hash ^= Status.GetHashCode();
      hash ^= annotations_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (status_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Status);
      }
      annotations_.WriteTo(output, _repeated_annotations_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      size += annotations_.CalculateSize(_repeated_annotations_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MultiAnnotationResponse other) {
      if (other == null) {
        return;
      }
      if (other.status_ != null) {
        if (status_ == null) {
          Status = new global::Clarifai.Api.Status.Status();
        }
        Status.MergeFrom(other.Status);
      }
      annotations_.Add(other.annotations_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (status_ == null) {
              Status = new global::Clarifai.Api.Status.Status();
            }
            input.ReadMessage(Status);
            break;
          }
          case 18: {
            annotations_.AddEntriesFrom(input, _repeated_annotations_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /////////////////////////////////////////////////////////////////////////////////
  /// Requests / Responses from /proto/clarifai/api/app.proto
  /////////////////////////////////////////////////////////////////////////////////
  /// </summary>
  public sealed partial class GetAppRequest : pb::IMessage<GetAppRequest> {
    private static readonly pb::MessageParser<GetAppRequest> _parser = new pb::MessageParser<GetAppRequest>(() => new GetAppRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetAppRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAppRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAppRequest(GetAppRequest other) : this() {
      userAppId_ = other.userAppId_ != null ? other.userAppId_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAppRequest Clone() {
      return new GetAppRequest(this);
    }

    /// <summary>Field number for the "user_app_id" field.</summary>
    public const int UserAppIdFieldNumber = 1;
    private global::Clarifai.Api.UserAppIDSet userAppId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.UserAppIDSet UserAppId {
      get { return userAppId_; }
      set {
        userAppId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetAppRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetAppRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserAppId, other.UserAppId)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (userAppId_ != null) hash ^= UserAppId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (userAppId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserAppId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (userAppId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserAppId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetAppRequest other) {
      if (other == null) {
        return;
      }
      if (other.userAppId_ != null) {
        if (userAppId_ == null) {
          UserAppId = new global::Clarifai.Api.UserAppIDSet();
        }
        UserAppId.MergeFrom(other.UserAppId);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (userAppId_ == null) {
              UserAppId = new global::Clarifai.Api.UserAppIDSet();
            }
            input.ReadMessage(UserAppId);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ListAppsRequest : pb::IMessage<ListAppsRequest> {
    private static readonly pb::MessageParser<ListAppsRequest> _parser = new pb::MessageParser<ListAppsRequest>(() => new ListAppsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListAppsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListAppsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListAppsRequest(ListAppsRequest other) : this() {
      userAppId_ = other.userAppId_ != null ? other.userAppId_.Clone() : null;
      page_ = other.page_;
      perPage_ = other.perPage_;
      sortAscending_ = other.sortAscending_;
      query_ = other.query_;
      name_ = other.name_;
      switch (other.SortByCase) {
        case SortByOneofCase.SortByName:
          SortByName = other.SortByName;
          break;
        case SortByOneofCase.SortByModifiedAt:
          SortByModifiedAt = other.SortByModifiedAt;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListAppsRequest Clone() {
      return new ListAppsRequest(this);
    }

    /// <summary>Field number for the "user_app_id" field.</summary>
    public const int UserAppIdFieldNumber = 1;
    private global::Clarifai.Api.UserAppIDSet userAppId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.UserAppIDSet UserAppId {
      get { return userAppId_; }
      set {
        userAppId_ = value;
      }
    }

    /// <summary>Field number for the "page" field.</summary>
    public const int PageFieldNumber = 2;
    private uint page_;
    /// <summary>
    /// (optional URL parameter) The page number. Pagination is used to split the results into chunks.
    /// Defaults to 1.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Page {
      get { return page_; }
      set {
        page_ = value;
      }
    }

    /// <summary>Field number for the "per_page" field.</summary>
    public const int PerPageFieldNumber = 3;
    private uint perPage_;
    /// <summary>
    /// (optional URL parameter) The number of results that will be contained in each page. Defaults
    /// to 128.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint PerPage {
      get { return perPage_; }
      set {
        perPage_ = value;
      }
    }

    /// <summary>Field number for the "sort_ascending" field.</summary>
    public const int SortAscendingFieldNumber = 5;
    private bool sortAscending_;
    /// <summary>
    /// Sorting opitons:
    /// Whether to sort in ascending order. If false, will order in descending order. 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool SortAscending {
      get { return sortAscending_; }
      set {
        sortAscending_ = value;
      }
    }

    /// <summary>Field number for the "sort_by_name" field.</summary>
    public const int SortByNameFieldNumber = 6;
    /// <summary>
    /// Whether to order by the name
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool SortByName {
      get { return sortByCase_ == SortByOneofCase.SortByName ? (bool) sortBy_ : false; }
      set {
        sortBy_ = value;
        sortByCase_ = SortByOneofCase.SortByName;
      }
    }

    /// <summary>Field number for the "sort_by_modified_at" field.</summary>
    public const int SortByModifiedAtFieldNumber = 7;
    /// <summary>
    /// Whether to order by the modified_at time.
    /// If neither sort option is set to true, will sort by modified_at.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool SortByModifiedAt {
      get { return sortByCase_ == SortByOneofCase.SortByModifiedAt ? (bool) sortBy_ : false; }
      set {
        sortBy_ = value;
        sortByCase_ = SortByOneofCase.SortByModifiedAt;
      }
    }

    /// <summary>Field number for the "query" field.</summary>
    public const int QueryFieldNumber = 8;
    private string query_ = "";
    /// <summary>
    /// Filtering options:
    /// Query various text fields that can contain the words in the query string
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Query {
      get { return query_; }
      set {
        query_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 4;
    private string name_ = "";
    /// <summary>
    /// Filter by the name of the app. This supports wilcard queries like "gen*" to match "general" as an example.
    /// Deprecated in favor of query
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    private object sortBy_;
    /// <summary>Enum of possible cases for the "sort_by" oneof.</summary>
    public enum SortByOneofCase {
      None = 0,
      SortByName = 6,
      SortByModifiedAt = 7,
    }
    private SortByOneofCase sortByCase_ = SortByOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SortByOneofCase SortByCase {
      get { return sortByCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSortBy() {
      sortByCase_ = SortByOneofCase.None;
      sortBy_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListAppsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListAppsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserAppId, other.UserAppId)) return false;
      if (Page != other.Page) return false;
      if (PerPage != other.PerPage) return false;
      if (SortAscending != other.SortAscending) return false;
      if (SortByName != other.SortByName) return false;
      if (SortByModifiedAt != other.SortByModifiedAt) return false;
      if (Query != other.Query) return false;
      if (Name != other.Name) return false;
      if (SortByCase != other.SortByCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (userAppId_ != null) hash ^= UserAppId.GetHashCode();
      if (Page != 0) hash ^= Page.GetHashCode();
      if (PerPage != 0) hash ^= PerPage.GetHashCode();
      if (SortAscending != false) hash ^= SortAscending.GetHashCode();
      if (sortByCase_ == SortByOneofCase.SortByName) hash ^= SortByName.GetHashCode();
      if (sortByCase_ == SortByOneofCase.SortByModifiedAt) hash ^= SortByModifiedAt.GetHashCode();
      if (Query.Length != 0) hash ^= Query.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      hash ^= (int) sortByCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (userAppId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserAppId);
      }
      if (Page != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Page);
      }
      if (PerPage != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(PerPage);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Name);
      }
      if (SortAscending != false) {
        output.WriteRawTag(40);
        output.WriteBool(SortAscending);
      }
      if (sortByCase_ == SortByOneofCase.SortByName) {
        output.WriteRawTag(48);
        output.WriteBool(SortByName);
      }
      if (sortByCase_ == SortByOneofCase.SortByModifiedAt) {
        output.WriteRawTag(56);
        output.WriteBool(SortByModifiedAt);
      }
      if (Query.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Query);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (userAppId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserAppId);
      }
      if (Page != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Page);
      }
      if (PerPage != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PerPage);
      }
      if (SortAscending != false) {
        size += 1 + 1;
      }
      if (sortByCase_ == SortByOneofCase.SortByName) {
        size += 1 + 1;
      }
      if (sortByCase_ == SortByOneofCase.SortByModifiedAt) {
        size += 1 + 1;
      }
      if (Query.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Query);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListAppsRequest other) {
      if (other == null) {
        return;
      }
      if (other.userAppId_ != null) {
        if (userAppId_ == null) {
          UserAppId = new global::Clarifai.Api.UserAppIDSet();
        }
        UserAppId.MergeFrom(other.UserAppId);
      }
      if (other.Page != 0) {
        Page = other.Page;
      }
      if (other.PerPage != 0) {
        PerPage = other.PerPage;
      }
      if (other.SortAscending != false) {
        SortAscending = other.SortAscending;
      }
      if (other.Query.Length != 0) {
        Query = other.Query;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      switch (other.SortByCase) {
        case SortByOneofCase.SortByName:
          SortByName = other.SortByName;
          break;
        case SortByOneofCase.SortByModifiedAt:
          SortByModifiedAt = other.SortByModifiedAt;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (userAppId_ == null) {
              UserAppId = new global::Clarifai.Api.UserAppIDSet();
            }
            input.ReadMessage(UserAppId);
            break;
          }
          case 16: {
            Page = input.ReadUInt32();
            break;
          }
          case 24: {
            PerPage = input.ReadUInt32();
            break;
          }
          case 34: {
            Name = input.ReadString();
            break;
          }
          case 40: {
            SortAscending = input.ReadBool();
            break;
          }
          case 48: {
            SortByName = input.ReadBool();
            break;
          }
          case 56: {
            SortByModifiedAt = input.ReadBool();
            break;
          }
          case 66: {
            Query = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PostAppsRequest : pb::IMessage<PostAppsRequest> {
    private static readonly pb::MessageParser<PostAppsRequest> _parser = new pb::MessageParser<PostAppsRequest>(() => new PostAppsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PostAppsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostAppsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostAppsRequest(PostAppsRequest other) : this() {
      userAppId_ = other.userAppId_ != null ? other.userAppId_.Clone() : null;
      apps_ = other.apps_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostAppsRequest Clone() {
      return new PostAppsRequest(this);
    }

    /// <summary>Field number for the "user_app_id" field.</summary>
    public const int UserAppIdFieldNumber = 1;
    private global::Clarifai.Api.UserAppIDSet userAppId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.UserAppIDSet UserAppId {
      get { return userAppId_; }
      set {
        userAppId_ = value;
      }
    }

    /// <summary>Field number for the "apps" field.</summary>
    public const int AppsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Clarifai.Api.App> _repeated_apps_codec
        = pb::FieldCodec.ForMessage(18, global::Clarifai.Api.App.Parser);
    private readonly pbc::RepeatedField<global::Clarifai.Api.App> apps_ = new pbc::RepeatedField<global::Clarifai.Api.App>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Clarifai.Api.App> Apps {
      get { return apps_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PostAppsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PostAppsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserAppId, other.UserAppId)) return false;
      if(!apps_.Equals(other.apps_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (userAppId_ != null) hash ^= UserAppId.GetHashCode();
      hash ^= apps_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (userAppId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserAppId);
      }
      apps_.WriteTo(output, _repeated_apps_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (userAppId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserAppId);
      }
      size += apps_.CalculateSize(_repeated_apps_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PostAppsRequest other) {
      if (other == null) {
        return;
      }
      if (other.userAppId_ != null) {
        if (userAppId_ == null) {
          UserAppId = new global::Clarifai.Api.UserAppIDSet();
        }
        UserAppId.MergeFrom(other.UserAppId);
      }
      apps_.Add(other.apps_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (userAppId_ == null) {
              UserAppId = new global::Clarifai.Api.UserAppIDSet();
            }
            input.ReadMessage(UserAppId);
            break;
          }
          case 18: {
            apps_.AddEntriesFrom(input, _repeated_apps_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class DeleteAppRequest : pb::IMessage<DeleteAppRequest> {
    private static readonly pb::MessageParser<DeleteAppRequest> _parser = new pb::MessageParser<DeleteAppRequest>(() => new DeleteAppRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteAppRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteAppRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteAppRequest(DeleteAppRequest other) : this() {
      userAppId_ = other.userAppId_ != null ? other.userAppId_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteAppRequest Clone() {
      return new DeleteAppRequest(this);
    }

    /// <summary>Field number for the "user_app_id" field.</summary>
    public const int UserAppIdFieldNumber = 1;
    private global::Clarifai.Api.UserAppIDSet userAppId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.UserAppIDSet UserAppId {
      get { return userAppId_; }
      set {
        userAppId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteAppRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteAppRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserAppId, other.UserAppId)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (userAppId_ != null) hash ^= UserAppId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (userAppId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserAppId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (userAppId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserAppId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteAppRequest other) {
      if (other == null) {
        return;
      }
      if (other.userAppId_ != null) {
        if (userAppId_ == null) {
          UserAppId = new global::Clarifai.Api.UserAppIDSet();
        }
        UserAppId.MergeFrom(other.UserAppId);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (userAppId_ == null) {
              UserAppId = new global::Clarifai.Api.UserAppIDSet();
            }
            input.ReadMessage(UserAppId);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PatchAppsRequest : pb::IMessage<PatchAppsRequest> {
    private static readonly pb::MessageParser<PatchAppsRequest> _parser = new pb::MessageParser<PatchAppsRequest>(() => new PatchAppsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PatchAppsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PatchAppsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PatchAppsRequest(PatchAppsRequest other) : this() {
      userAppId_ = other.userAppId_ != null ? other.userAppId_.Clone() : null;
      apps_ = other.apps_.Clone();
      action_ = other.action_;
      metadataAction_ = other.metadataAction_ != null ? other.metadataAction_.Clone() : null;
      reindex_ = other.reindex_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PatchAppsRequest Clone() {
      return new PatchAppsRequest(this);
    }

    /// <summary>Field number for the "user_app_id" field.</summary>
    public const int UserAppIdFieldNumber = 1;
    private global::Clarifai.Api.UserAppIDSet userAppId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.UserAppIDSet UserAppId {
      get { return userAppId_; }
      set {
        userAppId_ = value;
      }
    }

    /// <summary>Field number for the "apps" field.</summary>
    public const int AppsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Clarifai.Api.App> _repeated_apps_codec
        = pb::FieldCodec.ForMessage(18, global::Clarifai.Api.App.Parser);
    private readonly pbc::RepeatedField<global::Clarifai.Api.App> apps_ = new pbc::RepeatedField<global::Clarifai.Api.App>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Clarifai.Api.App> Apps {
      get { return apps_; }
    }

    /// <summary>Field number for the "action" field.</summary>
    public const int ActionFieldNumber = 3;
    private string action_ = "";
    /// <summary>
    /// The action to perform on the patched App objects except App.Metadata
    /// For now only action 'overwrite' is supported
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Action {
      get { return action_; }
      set {
        action_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "metadata_action" field.</summary>
    public const int MetadataActionFieldNumber = 4;
    private global::Clarifai.Api.PatchAction metadataAction_;
    /// <summary>
    /// The action to perform on the patched App.Metadata
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.PatchAction MetadataAction {
      get { return metadataAction_; }
      set {
        metadataAction_ = value;
      }
    }

    /// <summary>Field number for the "reindex" field.</summary>
    public const int ReindexFieldNumber = 5;
    private bool reindex_;
    /// <summary>
    /// If set, the app will be automatically reindexed upon change of its base workflow.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Reindex {
      get { return reindex_; }
      set {
        reindex_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PatchAppsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PatchAppsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserAppId, other.UserAppId)) return false;
      if(!apps_.Equals(other.apps_)) return false;
      if (Action != other.Action) return false;
      if (!object.Equals(MetadataAction, other.MetadataAction)) return false;
      if (Reindex != other.Reindex) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (userAppId_ != null) hash ^= UserAppId.GetHashCode();
      hash ^= apps_.GetHashCode();
      if (Action.Length != 0) hash ^= Action.GetHashCode();
      if (metadataAction_ != null) hash ^= MetadataAction.GetHashCode();
      if (Reindex != false) hash ^= Reindex.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (userAppId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserAppId);
      }
      apps_.WriteTo(output, _repeated_apps_codec);
      if (Action.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Action);
      }
      if (metadataAction_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(MetadataAction);
      }
      if (Reindex != false) {
        output.WriteRawTag(40);
        output.WriteBool(Reindex);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (userAppId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserAppId);
      }
      size += apps_.CalculateSize(_repeated_apps_codec);
      if (Action.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Action);
      }
      if (metadataAction_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MetadataAction);
      }
      if (Reindex != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PatchAppsRequest other) {
      if (other == null) {
        return;
      }
      if (other.userAppId_ != null) {
        if (userAppId_ == null) {
          UserAppId = new global::Clarifai.Api.UserAppIDSet();
        }
        UserAppId.MergeFrom(other.UserAppId);
      }
      apps_.Add(other.apps_);
      if (other.Action.Length != 0) {
        Action = other.Action;
      }
      if (other.metadataAction_ != null) {
        if (metadataAction_ == null) {
          MetadataAction = new global::Clarifai.Api.PatchAction();
        }
        MetadataAction.MergeFrom(other.MetadataAction);
      }
      if (other.Reindex != false) {
        Reindex = other.Reindex;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (userAppId_ == null) {
              UserAppId = new global::Clarifai.Api.UserAppIDSet();
            }
            input.ReadMessage(UserAppId);
            break;
          }
          case 18: {
            apps_.AddEntriesFrom(input, _repeated_apps_codec);
            break;
          }
          case 26: {
            Action = input.ReadString();
            break;
          }
          case 34: {
            if (metadataAction_ == null) {
              MetadataAction = new global::Clarifai.Api.PatchAction();
            }
            input.ReadMessage(MetadataAction);
            break;
          }
          case 40: {
            Reindex = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Search over the available applications.
  /// </summary>
  public sealed partial class PostAppsSearchesRequest : pb::IMessage<PostAppsSearchesRequest> {
    private static readonly pb::MessageParser<PostAppsSearchesRequest> _parser = new pb::MessageParser<PostAppsSearchesRequest>(() => new PostAppsSearchesRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PostAppsSearchesRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostAppsSearchesRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostAppsSearchesRequest(PostAppsSearchesRequest other) : this() {
      userAppId_ = other.userAppId_ != null ? other.userAppId_.Clone() : null;
      appQuery_ = other.appQuery_ != null ? other.appQuery_.Clone() : null;
      pagination_ = other.pagination_ != null ? other.pagination_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostAppsSearchesRequest Clone() {
      return new PostAppsSearchesRequest(this);
    }

    /// <summary>Field number for the "user_app_id" field.</summary>
    public const int UserAppIdFieldNumber = 1;
    private global::Clarifai.Api.UserAppIDSet userAppId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.UserAppIDSet UserAppId {
      get { return userAppId_; }
      set {
        userAppId_ = value;
      }
    }

    /// <summary>Field number for the "app_query" field.</summary>
    public const int AppQueryFieldNumber = 2;
    private global::Clarifai.Api.AppQuery appQuery_;
    /// <summary>
    /// The body of the request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.AppQuery AppQuery {
      get { return appQuery_; }
      set {
        appQuery_ = value;
      }
    }

    /// <summary>Field number for the "pagination" field.</summary>
    public const int PaginationFieldNumber = 3;
    private global::Clarifai.Api.Pagination pagination_;
    /// <summary>
    /// Pagination parameters here since there are no url args in this
    /// POST request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.Pagination Pagination {
      get { return pagination_; }
      set {
        pagination_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PostAppsSearchesRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PostAppsSearchesRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserAppId, other.UserAppId)) return false;
      if (!object.Equals(AppQuery, other.AppQuery)) return false;
      if (!object.Equals(Pagination, other.Pagination)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (userAppId_ != null) hash ^= UserAppId.GetHashCode();
      if (appQuery_ != null) hash ^= AppQuery.GetHashCode();
      if (pagination_ != null) hash ^= Pagination.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (userAppId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserAppId);
      }
      if (appQuery_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(AppQuery);
      }
      if (pagination_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Pagination);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (userAppId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserAppId);
      }
      if (appQuery_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AppQuery);
      }
      if (pagination_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pagination);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PostAppsSearchesRequest other) {
      if (other == null) {
        return;
      }
      if (other.userAppId_ != null) {
        if (userAppId_ == null) {
          UserAppId = new global::Clarifai.Api.UserAppIDSet();
        }
        UserAppId.MergeFrom(other.UserAppId);
      }
      if (other.appQuery_ != null) {
        if (appQuery_ == null) {
          AppQuery = new global::Clarifai.Api.AppQuery();
        }
        AppQuery.MergeFrom(other.AppQuery);
      }
      if (other.pagination_ != null) {
        if (pagination_ == null) {
          Pagination = new global::Clarifai.Api.Pagination();
        }
        Pagination.MergeFrom(other.Pagination);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (userAppId_ == null) {
              UserAppId = new global::Clarifai.Api.UserAppIDSet();
            }
            input.ReadMessage(UserAppId);
            break;
          }
          case 18: {
            if (appQuery_ == null) {
              AppQuery = new global::Clarifai.Api.AppQuery();
            }
            input.ReadMessage(AppQuery);
            break;
          }
          case 26: {
            if (pagination_ == null) {
              Pagination = new global::Clarifai.Api.Pagination();
            }
            input.ReadMessage(Pagination);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SingleAppResponse : pb::IMessage<SingleAppResponse> {
    private static readonly pb::MessageParser<SingleAppResponse> _parser = new pb::MessageParser<SingleAppResponse>(() => new SingleAppResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SingleAppResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SingleAppResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SingleAppResponse(SingleAppResponse other) : this() {
      status_ = other.status_ != null ? other.status_.Clone() : null;
      app_ = other.app_ != null ? other.app_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SingleAppResponse Clone() {
      return new SingleAppResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::Clarifai.Api.Status.Status status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.Status.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "app" field.</summary>
    public const int AppFieldNumber = 2;
    private global::Clarifai.Api.App app_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.App App {
      get { return app_; }
      set {
        app_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SingleAppResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SingleAppResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Status, other.Status)) return false;
      if (!object.Equals(App, other.App)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (status_ != null) hash ^= Status.GetHashCode();
      if (app_ != null) hash ^= App.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (status_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Status);
      }
      if (app_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(App);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      if (app_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(App);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SingleAppResponse other) {
      if (other == null) {
        return;
      }
      if (other.status_ != null) {
        if (status_ == null) {
          Status = new global::Clarifai.Api.Status.Status();
        }
        Status.MergeFrom(other.Status);
      }
      if (other.app_ != null) {
        if (app_ == null) {
          App = new global::Clarifai.Api.App();
        }
        App.MergeFrom(other.App);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (status_ == null) {
              Status = new global::Clarifai.Api.Status.Status();
            }
            input.ReadMessage(Status);
            break;
          }
          case 18: {
            if (app_ == null) {
              App = new global::Clarifai.Api.App();
            }
            input.ReadMessage(App);
            break;
          }
        }
      }
    }

  }

  public sealed partial class MultiAppResponse : pb::IMessage<MultiAppResponse> {
    private static readonly pb::MessageParser<MultiAppResponse> _parser = new pb::MessageParser<MultiAppResponse>(() => new MultiAppResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MultiAppResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiAppResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiAppResponse(MultiAppResponse other) : this() {
      status_ = other.status_ != null ? other.status_.Clone() : null;
      apps_ = other.apps_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiAppResponse Clone() {
      return new MultiAppResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::Clarifai.Api.Status.Status status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.Status.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "apps" field.</summary>
    public const int AppsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Clarifai.Api.App> _repeated_apps_codec
        = pb::FieldCodec.ForMessage(18, global::Clarifai.Api.App.Parser);
    private readonly pbc::RepeatedField<global::Clarifai.Api.App> apps_ = new pbc::RepeatedField<global::Clarifai.Api.App>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Clarifai.Api.App> Apps {
      get { return apps_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MultiAppResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MultiAppResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Status, other.Status)) return false;
      if(!apps_.Equals(other.apps_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (status_ != null) hash ^= Status.GetHashCode();
      hash ^= apps_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (status_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Status);
      }
      apps_.WriteTo(output, _repeated_apps_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      size += apps_.CalculateSize(_repeated_apps_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MultiAppResponse other) {
      if (other == null) {
        return;
      }
      if (other.status_ != null) {
        if (status_ == null) {
          Status = new global::Clarifai.Api.Status.Status();
        }
        Status.MergeFrom(other.Status);
      }
      apps_.Add(other.apps_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (status_ == null) {
              Status = new global::Clarifai.Api.Status.Status();
            }
            input.ReadMessage(Status);
            break;
          }
          case 18: {
            apps_.AddEntriesFrom(input, _repeated_apps_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /////////////////////////////////////////////////////////////////////////////////
  /// Requests / Responses from /proto/clarifai/api/app_sharing.proto
  /////////////////////////////////////////////////////////////////////////////////
  /// </summary>
  public sealed partial class ListCollaboratorsRequest : pb::IMessage<ListCollaboratorsRequest> {
    private static readonly pb::MessageParser<ListCollaboratorsRequest> _parser = new pb::MessageParser<ListCollaboratorsRequest>(() => new ListCollaboratorsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListCollaboratorsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListCollaboratorsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListCollaboratorsRequest(ListCollaboratorsRequest other) : this() {
      userAppId_ = other.userAppId_ != null ? other.userAppId_.Clone() : null;
      listAllCollaborators_ = other.listAllCollaborators_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListCollaboratorsRequest Clone() {
      return new ListCollaboratorsRequest(this);
    }

    /// <summary>Field number for the "user_app_id" field.</summary>
    public const int UserAppIdFieldNumber = 1;
    private global::Clarifai.Api.UserAppIDSet userAppId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.UserAppIDSet UserAppId {
      get { return userAppId_; }
      set {
        userAppId_ = value;
      }
    }

    /// <summary>Field number for the "list_all_collaborators" field.</summary>
    public const int ListAllCollaboratorsFieldNumber = 2;
    private bool listAllCollaborators_;
    /// <summary>
    /// Set this flag to list both deleted and not deleted collaborators
    /// by default it's listing only not deleted collaborators
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ListAllCollaborators {
      get { return listAllCollaborators_; }
      set {
        listAllCollaborators_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListCollaboratorsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListCollaboratorsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserAppId, other.UserAppId)) return false;
      if (ListAllCollaborators != other.ListAllCollaborators) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (userAppId_ != null) hash ^= UserAppId.GetHashCode();
      if (ListAllCollaborators != false) hash ^= ListAllCollaborators.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (userAppId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserAppId);
      }
      if (ListAllCollaborators != false) {
        output.WriteRawTag(16);
        output.WriteBool(ListAllCollaborators);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (userAppId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserAppId);
      }
      if (ListAllCollaborators != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListCollaboratorsRequest other) {
      if (other == null) {
        return;
      }
      if (other.userAppId_ != null) {
        if (userAppId_ == null) {
          UserAppId = new global::Clarifai.Api.UserAppIDSet();
        }
        UserAppId.MergeFrom(other.UserAppId);
      }
      if (other.ListAllCollaborators != false) {
        ListAllCollaborators = other.ListAllCollaborators;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (userAppId_ == null) {
              UserAppId = new global::Clarifai.Api.UserAppIDSet();
            }
            input.ReadMessage(UserAppId);
            break;
          }
          case 16: {
            ListAllCollaborators = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PostCollaboratorsRequest : pb::IMessage<PostCollaboratorsRequest> {
    private static readonly pb::MessageParser<PostCollaboratorsRequest> _parser = new pb::MessageParser<PostCollaboratorsRequest>(() => new PostCollaboratorsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PostCollaboratorsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostCollaboratorsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostCollaboratorsRequest(PostCollaboratorsRequest other) : this() {
      userAppId_ = other.userAppId_ != null ? other.userAppId_.Clone() : null;
      collaborators_ = other.collaborators_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostCollaboratorsRequest Clone() {
      return new PostCollaboratorsRequest(this);
    }

    /// <summary>Field number for the "user_app_id" field.</summary>
    public const int UserAppIdFieldNumber = 1;
    private global::Clarifai.Api.UserAppIDSet userAppId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.UserAppIDSet UserAppId {
      get { return userAppId_; }
      set {
        userAppId_ = value;
      }
    }

    /// <summary>Field number for the "collaborators" field.</summary>
    public const int CollaboratorsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Clarifai.Api.Collaborator> _repeated_collaborators_codec
        = pb::FieldCodec.ForMessage(18, global::Clarifai.Api.Collaborator.Parser);
    private readonly pbc::RepeatedField<global::Clarifai.Api.Collaborator> collaborators_ = new pbc::RepeatedField<global::Clarifai.Api.Collaborator>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Clarifai.Api.Collaborator> Collaborators {
      get { return collaborators_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PostCollaboratorsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PostCollaboratorsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserAppId, other.UserAppId)) return false;
      if(!collaborators_.Equals(other.collaborators_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (userAppId_ != null) hash ^= UserAppId.GetHashCode();
      hash ^= collaborators_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (userAppId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserAppId);
      }
      collaborators_.WriteTo(output, _repeated_collaborators_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (userAppId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserAppId);
      }
      size += collaborators_.CalculateSize(_repeated_collaborators_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PostCollaboratorsRequest other) {
      if (other == null) {
        return;
      }
      if (other.userAppId_ != null) {
        if (userAppId_ == null) {
          UserAppId = new global::Clarifai.Api.UserAppIDSet();
        }
        UserAppId.MergeFrom(other.UserAppId);
      }
      collaborators_.Add(other.collaborators_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (userAppId_ == null) {
              UserAppId = new global::Clarifai.Api.UserAppIDSet();
            }
            input.ReadMessage(UserAppId);
            break;
          }
          case 18: {
            collaborators_.AddEntriesFrom(input, _repeated_collaborators_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PatchCollaboratorsRequest : pb::IMessage<PatchCollaboratorsRequest> {
    private static readonly pb::MessageParser<PatchCollaboratorsRequest> _parser = new pb::MessageParser<PatchCollaboratorsRequest>(() => new PatchCollaboratorsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PatchCollaboratorsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PatchCollaboratorsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PatchCollaboratorsRequest(PatchCollaboratorsRequest other) : this() {
      userAppId_ = other.userAppId_ != null ? other.userAppId_.Clone() : null;
      collaborators_ = other.collaborators_.Clone();
      action_ = other.action_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PatchCollaboratorsRequest Clone() {
      return new PatchCollaboratorsRequest(this);
    }

    /// <summary>Field number for the "user_app_id" field.</summary>
    public const int UserAppIdFieldNumber = 1;
    private global::Clarifai.Api.UserAppIDSet userAppId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.UserAppIDSet UserAppId {
      get { return userAppId_; }
      set {
        userAppId_ = value;
      }
    }

    /// <summary>Field number for the "collaborators" field.</summary>
    public const int CollaboratorsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Clarifai.Api.Collaborator> _repeated_collaborators_codec
        = pb::FieldCodec.ForMessage(18, global::Clarifai.Api.Collaborator.Parser);
    private readonly pbc::RepeatedField<global::Clarifai.Api.Collaborator> collaborators_ = new pbc::RepeatedField<global::Clarifai.Api.Collaborator>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Clarifai.Api.Collaborator> Collaborators {
      get { return collaborators_; }
    }

    /// <summary>Field number for the "action" field.</summary>
    public const int ActionFieldNumber = 3;
    private string action_ = "";
    /// <summary>
    /// The action to perform on the patched objects
    /// For now only action 'overwrite' is supported
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Action {
      get { return action_; }
      set {
        action_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PatchCollaboratorsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PatchCollaboratorsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserAppId, other.UserAppId)) return false;
      if(!collaborators_.Equals(other.collaborators_)) return false;
      if (Action != other.Action) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (userAppId_ != null) hash ^= UserAppId.GetHashCode();
      hash ^= collaborators_.GetHashCode();
      if (Action.Length != 0) hash ^= Action.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (userAppId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserAppId);
      }
      collaborators_.WriteTo(output, _repeated_collaborators_codec);
      if (Action.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Action);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (userAppId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserAppId);
      }
      size += collaborators_.CalculateSize(_repeated_collaborators_codec);
      if (Action.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Action);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PatchCollaboratorsRequest other) {
      if (other == null) {
        return;
      }
      if (other.userAppId_ != null) {
        if (userAppId_ == null) {
          UserAppId = new global::Clarifai.Api.UserAppIDSet();
        }
        UserAppId.MergeFrom(other.UserAppId);
      }
      collaborators_.Add(other.collaborators_);
      if (other.Action.Length != 0) {
        Action = other.Action;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (userAppId_ == null) {
              UserAppId = new global::Clarifai.Api.UserAppIDSet();
            }
            input.ReadMessage(UserAppId);
            break;
          }
          case 18: {
            collaborators_.AddEntriesFrom(input, _repeated_collaborators_codec);
            break;
          }
          case 26: {
            Action = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DeleteCollaboratorsRequest : pb::IMessage<DeleteCollaboratorsRequest> {
    private static readonly pb::MessageParser<DeleteCollaboratorsRequest> _parser = new pb::MessageParser<DeleteCollaboratorsRequest>(() => new DeleteCollaboratorsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteCollaboratorsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteCollaboratorsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteCollaboratorsRequest(DeleteCollaboratorsRequest other) : this() {
      userAppId_ = other.userAppId_ != null ? other.userAppId_.Clone() : null;
      collaboratorIds_ = other.collaboratorIds_.Clone();
      userEmails_ = other.userEmails_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteCollaboratorsRequest Clone() {
      return new DeleteCollaboratorsRequest(this);
    }

    /// <summary>Field number for the "user_app_id" field.</summary>
    public const int UserAppIdFieldNumber = 1;
    private global::Clarifai.Api.UserAppIDSet userAppId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.UserAppIDSet UserAppId {
      get { return userAppId_; }
      set {
        userAppId_ = value;
      }
    }

    /// <summary>Field number for the "collaborator_ids" field.</summary>
    public const int CollaboratorIdsFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_collaboratorIds_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> collaboratorIds_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> CollaboratorIds {
      get { return collaboratorIds_; }
    }

    /// <summary>Field number for the "user_emails" field.</summary>
    public const int UserEmailsFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_userEmails_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> userEmails_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> UserEmails {
      get { return userEmails_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteCollaboratorsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteCollaboratorsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserAppId, other.UserAppId)) return false;
      if(!collaboratorIds_.Equals(other.collaboratorIds_)) return false;
      if(!userEmails_.Equals(other.userEmails_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (userAppId_ != null) hash ^= UserAppId.GetHashCode();
      hash ^= collaboratorIds_.GetHashCode();
      hash ^= userEmails_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (userAppId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserAppId);
      }
      collaboratorIds_.WriteTo(output, _repeated_collaboratorIds_codec);
      userEmails_.WriteTo(output, _repeated_userEmails_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (userAppId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserAppId);
      }
      size += collaboratorIds_.CalculateSize(_repeated_collaboratorIds_codec);
      size += userEmails_.CalculateSize(_repeated_userEmails_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteCollaboratorsRequest other) {
      if (other == null) {
        return;
      }
      if (other.userAppId_ != null) {
        if (userAppId_ == null) {
          UserAppId = new global::Clarifai.Api.UserAppIDSet();
        }
        UserAppId.MergeFrom(other.UserAppId);
      }
      collaboratorIds_.Add(other.collaboratorIds_);
      userEmails_.Add(other.userEmails_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (userAppId_ == null) {
              UserAppId = new global::Clarifai.Api.UserAppIDSet();
            }
            input.ReadMessage(UserAppId);
            break;
          }
          case 18: {
            collaboratorIds_.AddEntriesFrom(input, _repeated_collaboratorIds_codec);
            break;
          }
          case 26: {
            userEmails_.AddEntriesFrom(input, _repeated_userEmails_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class MultiCollaboratorsResponse : pb::IMessage<MultiCollaboratorsResponse> {
    private static readonly pb::MessageParser<MultiCollaboratorsResponse> _parser = new pb::MessageParser<MultiCollaboratorsResponse>(() => new MultiCollaboratorsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MultiCollaboratorsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiCollaboratorsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiCollaboratorsResponse(MultiCollaboratorsResponse other) : this() {
      status_ = other.status_ != null ? other.status_.Clone() : null;
      collaborators_ = other.collaborators_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiCollaboratorsResponse Clone() {
      return new MultiCollaboratorsResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::Clarifai.Api.Status.Status status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.Status.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "collaborators" field.</summary>
    public const int CollaboratorsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Clarifai.Api.Collaborator> _repeated_collaborators_codec
        = pb::FieldCodec.ForMessage(18, global::Clarifai.Api.Collaborator.Parser);
    private readonly pbc::RepeatedField<global::Clarifai.Api.Collaborator> collaborators_ = new pbc::RepeatedField<global::Clarifai.Api.Collaborator>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Clarifai.Api.Collaborator> Collaborators {
      get { return collaborators_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MultiCollaboratorsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MultiCollaboratorsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Status, other.Status)) return false;
      if(!collaborators_.Equals(other.collaborators_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (status_ != null) hash ^= Status.GetHashCode();
      hash ^= collaborators_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (status_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Status);
      }
      collaborators_.WriteTo(output, _repeated_collaborators_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      size += collaborators_.CalculateSize(_repeated_collaborators_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MultiCollaboratorsResponse other) {
      if (other == null) {
        return;
      }
      if (other.status_ != null) {
        if (status_ == null) {
          Status = new global::Clarifai.Api.Status.Status();
        }
        Status.MergeFrom(other.Status);
      }
      collaborators_.Add(other.collaborators_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (status_ == null) {
              Status = new global::Clarifai.Api.Status.Status();
            }
            input.ReadMessage(Status);
            break;
          }
          case 18: {
            collaborators_.AddEntriesFrom(input, _repeated_collaborators_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ListCollaborationsRequest : pb::IMessage<ListCollaborationsRequest> {
    private static readonly pb::MessageParser<ListCollaborationsRequest> _parser = new pb::MessageParser<ListCollaborationsRequest>(() => new ListCollaborationsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListCollaborationsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListCollaborationsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListCollaborationsRequest(ListCollaborationsRequest other) : this() {
      userAppId_ = other.userAppId_ != null ? other.userAppId_.Clone() : null;
      page_ = other.page_;
      perPage_ = other.perPage_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListCollaborationsRequest Clone() {
      return new ListCollaborationsRequest(this);
    }

    /// <summary>Field number for the "user_app_id" field.</summary>
    public const int UserAppIdFieldNumber = 1;
    private global::Clarifai.Api.UserAppIDSet userAppId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.UserAppIDSet UserAppId {
      get { return userAppId_; }
      set {
        userAppId_ = value;
      }
    }

    /// <summary>Field number for the "page" field.</summary>
    public const int PageFieldNumber = 2;
    private uint page_;
    /// <summary>
    /// (optional URL parameter) The page number. Pagination is used to split the results into chunks.
    /// Defaults to 1.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Page {
      get { return page_; }
      set {
        page_ = value;
      }
    }

    /// <summary>Field number for the "per_page" field.</summary>
    public const int PerPageFieldNumber = 3;
    private uint perPage_;
    /// <summary>
    /// (optional URL parameter) The number of results that will be contained in each page. Defaults
    /// to 128.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint PerPage {
      get { return perPage_; }
      set {
        perPage_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListCollaborationsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListCollaborationsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserAppId, other.UserAppId)) return false;
      if (Page != other.Page) return false;
      if (PerPage != other.PerPage) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (userAppId_ != null) hash ^= UserAppId.GetHashCode();
      if (Page != 0) hash ^= Page.GetHashCode();
      if (PerPage != 0) hash ^= PerPage.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (userAppId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserAppId);
      }
      if (Page != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Page);
      }
      if (PerPage != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(PerPage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (userAppId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserAppId);
      }
      if (Page != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Page);
      }
      if (PerPage != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PerPage);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListCollaborationsRequest other) {
      if (other == null) {
        return;
      }
      if (other.userAppId_ != null) {
        if (userAppId_ == null) {
          UserAppId = new global::Clarifai.Api.UserAppIDSet();
        }
        UserAppId.MergeFrom(other.UserAppId);
      }
      if (other.Page != 0) {
        Page = other.Page;
      }
      if (other.PerPage != 0) {
        PerPage = other.PerPage;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (userAppId_ == null) {
              UserAppId = new global::Clarifai.Api.UserAppIDSet();
            }
            input.ReadMessage(UserAppId);
            break;
          }
          case 16: {
            Page = input.ReadUInt32();
            break;
          }
          case 24: {
            PerPage = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class MultiCollaborationsResponse : pb::IMessage<MultiCollaborationsResponse> {
    private static readonly pb::MessageParser<MultiCollaborationsResponse> _parser = new pb::MessageParser<MultiCollaborationsResponse>(() => new MultiCollaborationsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MultiCollaborationsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiCollaborationsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiCollaborationsResponse(MultiCollaborationsResponse other) : this() {
      status_ = other.status_ != null ? other.status_.Clone() : null;
      collaborations_ = other.collaborations_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiCollaborationsResponse Clone() {
      return new MultiCollaborationsResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::Clarifai.Api.Status.Status status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.Status.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "collaborations" field.</summary>
    public const int CollaborationsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Clarifai.Api.Collaboration> _repeated_collaborations_codec
        = pb::FieldCodec.ForMessage(18, global::Clarifai.Api.Collaboration.Parser);
    private readonly pbc::RepeatedField<global::Clarifai.Api.Collaboration> collaborations_ = new pbc::RepeatedField<global::Clarifai.Api.Collaboration>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Clarifai.Api.Collaboration> Collaborations {
      get { return collaborations_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MultiCollaborationsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MultiCollaborationsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Status, other.Status)) return false;
      if(!collaborations_.Equals(other.collaborations_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (status_ != null) hash ^= Status.GetHashCode();
      hash ^= collaborations_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (status_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Status);
      }
      collaborations_.WriteTo(output, _repeated_collaborations_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      size += collaborations_.CalculateSize(_repeated_collaborations_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MultiCollaborationsResponse other) {
      if (other == null) {
        return;
      }
      if (other.status_ != null) {
        if (status_ == null) {
          Status = new global::Clarifai.Api.Status.Status();
        }
        Status.MergeFrom(other.Status);
      }
      collaborations_.Add(other.collaborations_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (status_ == null) {
              Status = new global::Clarifai.Api.Status.Status();
            }
            input.ReadMessage(Status);
            break;
          }
          case 18: {
            collaborations_.AddEntriesFrom(input, _repeated_collaborations_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /////////////////////////////////////////////////////////////////////////////////
  /// Requests / Responses from /proto/clarifai/api/code.proto
  /////////////////////////////////////////////////////////////////////////////////
  /// </summary>
  public sealed partial class GetStatusCodeRequest : pb::IMessage<GetStatusCodeRequest> {
    private static readonly pb::MessageParser<GetStatusCodeRequest> _parser = new pb::MessageParser<GetStatusCodeRequest>(() => new GetStatusCodeRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetStatusCodeRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetStatusCodeRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetStatusCodeRequest(GetStatusCodeRequest other) : this() {
      statusCodeId_ = other.statusCodeId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetStatusCodeRequest Clone() {
      return new GetStatusCodeRequest(this);
    }

    /// <summary>Field number for the "status_code_id" field.</summary>
    public const int StatusCodeIdFieldNumber = 1;
    private string statusCodeId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StatusCodeId {
      get { return statusCodeId_; }
      set {
        statusCodeId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetStatusCodeRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetStatusCodeRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (StatusCodeId != other.StatusCodeId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (StatusCodeId.Length != 0) hash ^= StatusCodeId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (StatusCodeId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(StatusCodeId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (StatusCodeId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StatusCodeId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetStatusCodeRequest other) {
      if (other == null) {
        return;
      }
      if (other.StatusCodeId.Length != 0) {
        StatusCodeId = other.StatusCodeId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            StatusCodeId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ListStatusCodesRequest : pb::IMessage<ListStatusCodesRequest> {
    private static readonly pb::MessageParser<ListStatusCodesRequest> _parser = new pb::MessageParser<ListStatusCodesRequest>(() => new ListStatusCodesRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListStatusCodesRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListStatusCodesRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListStatusCodesRequest(ListStatusCodesRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListStatusCodesRequest Clone() {
      return new ListStatusCodesRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListStatusCodesRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListStatusCodesRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListStatusCodesRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class SingleStatusCodeResponse : pb::IMessage<SingleStatusCodeResponse> {
    private static readonly pb::MessageParser<SingleStatusCodeResponse> _parser = new pb::MessageParser<SingleStatusCodeResponse>(() => new SingleStatusCodeResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SingleStatusCodeResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SingleStatusCodeResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SingleStatusCodeResponse(SingleStatusCodeResponse other) : this() {
      status_ = other.status_ != null ? other.status_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SingleStatusCodeResponse Clone() {
      return new SingleStatusCodeResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::Clarifai.Api.Status.Status status_;
    /// <summary>
    /// Status of this request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.Status.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SingleStatusCodeResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SingleStatusCodeResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Status, other.Status)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (status_ != null) hash ^= Status.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (status_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SingleStatusCodeResponse other) {
      if (other == null) {
        return;
      }
      if (other.status_ != null) {
        if (status_ == null) {
          Status = new global::Clarifai.Api.Status.Status();
        }
        Status.MergeFrom(other.Status);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (status_ == null) {
              Status = new global::Clarifai.Api.Status.Status();
            }
            input.ReadMessage(Status);
            break;
          }
        }
      }
    }

  }

  public sealed partial class MultiStatusCodeResponse : pb::IMessage<MultiStatusCodeResponse> {
    private static readonly pb::MessageParser<MultiStatusCodeResponse> _parser = new pb::MessageParser<MultiStatusCodeResponse>(() => new MultiStatusCodeResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MultiStatusCodeResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiStatusCodeResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiStatusCodeResponse(MultiStatusCodeResponse other) : this() {
      status_ = other.status_ != null ? other.status_.Clone() : null;
      statuses_ = other.statuses_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiStatusCodeResponse Clone() {
      return new MultiStatusCodeResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::Clarifai.Api.Status.Status status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.Status.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "statuses" field.</summary>
    public const int StatusesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Clarifai.Api.Status.Status> _repeated_statuses_codec
        = pb::FieldCodec.ForMessage(18, global::Clarifai.Api.Status.Status.Parser);
    private readonly pbc::RepeatedField<global::Clarifai.Api.Status.Status> statuses_ = new pbc::RepeatedField<global::Clarifai.Api.Status.Status>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Clarifai.Api.Status.Status> Statuses {
      get { return statuses_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MultiStatusCodeResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MultiStatusCodeResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Status, other.Status)) return false;
      if(!statuses_.Equals(other.statuses_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (status_ != null) hash ^= Status.GetHashCode();
      hash ^= statuses_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (status_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Status);
      }
      statuses_.WriteTo(output, _repeated_statuses_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      size += statuses_.CalculateSize(_repeated_statuses_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MultiStatusCodeResponse other) {
      if (other == null) {
        return;
      }
      if (other.status_ != null) {
        if (status_ == null) {
          Status = new global::Clarifai.Api.Status.Status();
        }
        Status.MergeFrom(other.Status);
      }
      statuses_.Add(other.statuses_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (status_ == null) {
              Status = new global::Clarifai.Api.Status.Status();
            }
            input.ReadMessage(Status);
            break;
          }
          case 18: {
            statuses_.AddEntriesFrom(input, _repeated_statuses_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /////////////////////////////////////////////////////////////////////////////////
  /// Requests / Responses from /proto/clarifai/api/concept.proto
  /////////////////////////////////////////////////////////////////////////////////
  /// </summary>
  public sealed partial class GetConceptRequest : pb::IMessage<GetConceptRequest> {
    private static readonly pb::MessageParser<GetConceptRequest> _parser = new pb::MessageParser<GetConceptRequest>(() => new GetConceptRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetConceptRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[30]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetConceptRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetConceptRequest(GetConceptRequest other) : this() {
      userAppId_ = other.userAppId_ != null ? other.userAppId_.Clone() : null;
      conceptId_ = other.conceptId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetConceptRequest Clone() {
      return new GetConceptRequest(this);
    }

    /// <summary>Field number for the "user_app_id" field.</summary>
    public const int UserAppIdFieldNumber = 1;
    private global::Clarifai.Api.UserAppIDSet userAppId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.UserAppIDSet UserAppId {
      get { return userAppId_; }
      set {
        userAppId_ = value;
      }
    }

    /// <summary>Field number for the "concept_id" field.</summary>
    public const int ConceptIdFieldNumber = 2;
    private string conceptId_ = "";
    /// <summary>
    /// The concept's id.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConceptId {
      get { return conceptId_; }
      set {
        conceptId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetConceptRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetConceptRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserAppId, other.UserAppId)) return false;
      if (ConceptId != other.ConceptId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (userAppId_ != null) hash ^= UserAppId.GetHashCode();
      if (ConceptId.Length != 0) hash ^= ConceptId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (userAppId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserAppId);
      }
      if (ConceptId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ConceptId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (userAppId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserAppId);
      }
      if (ConceptId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConceptId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetConceptRequest other) {
      if (other == null) {
        return;
      }
      if (other.userAppId_ != null) {
        if (userAppId_ == null) {
          UserAppId = new global::Clarifai.Api.UserAppIDSet();
        }
        UserAppId.MergeFrom(other.UserAppId);
      }
      if (other.ConceptId.Length != 0) {
        ConceptId = other.ConceptId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (userAppId_ == null) {
              UserAppId = new global::Clarifai.Api.UserAppIDSet();
            }
            input.ReadMessage(UserAppId);
            break;
          }
          case 18: {
            ConceptId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ListConceptsRequest : pb::IMessage<ListConceptsRequest> {
    private static readonly pb::MessageParser<ListConceptsRequest> _parser = new pb::MessageParser<ListConceptsRequest>(() => new ListConceptsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListConceptsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[31]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListConceptsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListConceptsRequest(ListConceptsRequest other) : this() {
      userAppId_ = other.userAppId_ != null ? other.userAppId_.Clone() : null;
      page_ = other.page_;
      perPage_ = other.perPage_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListConceptsRequest Clone() {
      return new ListConceptsRequest(this);
    }

    /// <summary>Field number for the "user_app_id" field.</summary>
    public const int UserAppIdFieldNumber = 1;
    private global::Clarifai.Api.UserAppIDSet userAppId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.UserAppIDSet UserAppId {
      get { return userAppId_; }
      set {
        userAppId_ = value;
      }
    }

    /// <summary>Field number for the "page" field.</summary>
    public const int PageFieldNumber = 2;
    private uint page_;
    /// <summary>
    /// (optional URL parameter) The page number. Pagination is used to split the results into chunks.
    /// Defaults to 1.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Page {
      get { return page_; }
      set {
        page_ = value;
      }
    }

    /// <summary>Field number for the "per_page" field.</summary>
    public const int PerPageFieldNumber = 3;
    private uint perPage_;
    /// <summary>
    /// (optional URL parameter) The number of results that will be contained in each page. Defaults
    /// to 128.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint PerPage {
      get { return perPage_; }
      set {
        perPage_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListConceptsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListConceptsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserAppId, other.UserAppId)) return false;
      if (Page != other.Page) return false;
      if (PerPage != other.PerPage) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (userAppId_ != null) hash ^= UserAppId.GetHashCode();
      if (Page != 0) hash ^= Page.GetHashCode();
      if (PerPage != 0) hash ^= PerPage.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (userAppId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserAppId);
      }
      if (Page != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Page);
      }
      if (PerPage != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(PerPage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (userAppId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserAppId);
      }
      if (Page != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Page);
      }
      if (PerPage != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PerPage);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListConceptsRequest other) {
      if (other == null) {
        return;
      }
      if (other.userAppId_ != null) {
        if (userAppId_ == null) {
          UserAppId = new global::Clarifai.Api.UserAppIDSet();
        }
        UserAppId.MergeFrom(other.UserAppId);
      }
      if (other.Page != 0) {
        Page = other.Page;
      }
      if (other.PerPage != 0) {
        PerPage = other.PerPage;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (userAppId_ == null) {
              UserAppId = new global::Clarifai.Api.UserAppIDSet();
            }
            input.ReadMessage(UserAppId);
            break;
          }
          case 16: {
            Page = input.ReadUInt32();
            break;
          }
          case 24: {
            PerPage = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PostConceptsSearchesRequest : pb::IMessage<PostConceptsSearchesRequest> {
    private static readonly pb::MessageParser<PostConceptsSearchesRequest> _parser = new pb::MessageParser<PostConceptsSearchesRequest>(() => new PostConceptsSearchesRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PostConceptsSearchesRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[32]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostConceptsSearchesRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostConceptsSearchesRequest(PostConceptsSearchesRequest other) : this() {
      userAppId_ = other.userAppId_ != null ? other.userAppId_.Clone() : null;
      conceptQuery_ = other.conceptQuery_ != null ? other.conceptQuery_.Clone() : null;
      pagination_ = other.pagination_ != null ? other.pagination_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostConceptsSearchesRequest Clone() {
      return new PostConceptsSearchesRequest(this);
    }

    /// <summary>Field number for the "user_app_id" field.</summary>
    public const int UserAppIdFieldNumber = 1;
    private global::Clarifai.Api.UserAppIDSet userAppId_;
    /// <summary>
    /// Ids present in the url of the request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.UserAppIDSet UserAppId {
      get { return userAppId_; }
      set {
        userAppId_ = value;
      }
    }

    /// <summary>Field number for the "concept_query" field.</summary>
    public const int ConceptQueryFieldNumber = 2;
    private global::Clarifai.Api.ConceptQuery conceptQuery_;
    /// <summary>
    /// The body of the request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.ConceptQuery ConceptQuery {
      get { return conceptQuery_; }
      set {
        conceptQuery_ = value;
      }
    }

    /// <summary>Field number for the "pagination" field.</summary>
    public const int PaginationFieldNumber = 3;
    private global::Clarifai.Api.Pagination pagination_;
    /// <summary>
    /// Pagination parameters here since there are no url args in this
    /// POST request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.Pagination Pagination {
      get { return pagination_; }
      set {
        pagination_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PostConceptsSearchesRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PostConceptsSearchesRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserAppId, other.UserAppId)) return false;
      if (!object.Equals(ConceptQuery, other.ConceptQuery)) return false;
      if (!object.Equals(Pagination, other.Pagination)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (userAppId_ != null) hash ^= UserAppId.GetHashCode();
      if (conceptQuery_ != null) hash ^= ConceptQuery.GetHashCode();
      if (pagination_ != null) hash ^= Pagination.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (userAppId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserAppId);
      }
      if (conceptQuery_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ConceptQuery);
      }
      if (pagination_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Pagination);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (userAppId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserAppId);
      }
      if (conceptQuery_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ConceptQuery);
      }
      if (pagination_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pagination);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PostConceptsSearchesRequest other) {
      if (other == null) {
        return;
      }
      if (other.userAppId_ != null) {
        if (userAppId_ == null) {
          UserAppId = new global::Clarifai.Api.UserAppIDSet();
        }
        UserAppId.MergeFrom(other.UserAppId);
      }
      if (other.conceptQuery_ != null) {
        if (conceptQuery_ == null) {
          ConceptQuery = new global::Clarifai.Api.ConceptQuery();
        }
        ConceptQuery.MergeFrom(other.ConceptQuery);
      }
      if (other.pagination_ != null) {
        if (pagination_ == null) {
          Pagination = new global::Clarifai.Api.Pagination();
        }
        Pagination.MergeFrom(other.Pagination);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (userAppId_ == null) {
              UserAppId = new global::Clarifai.Api.UserAppIDSet();
            }
            input.ReadMessage(UserAppId);
            break;
          }
          case 18: {
            if (conceptQuery_ == null) {
              ConceptQuery = new global::Clarifai.Api.ConceptQuery();
            }
            input.ReadMessage(ConceptQuery);
            break;
          }
          case 26: {
            if (pagination_ == null) {
              Pagination = new global::Clarifai.Api.Pagination();
            }
            input.ReadMessage(Pagination);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PostConceptsRequest : pb::IMessage<PostConceptsRequest> {
    private static readonly pb::MessageParser<PostConceptsRequest> _parser = new pb::MessageParser<PostConceptsRequest>(() => new PostConceptsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PostConceptsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[33]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostConceptsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostConceptsRequest(PostConceptsRequest other) : this() {
      userAppId_ = other.userAppId_ != null ? other.userAppId_.Clone() : null;
      concepts_ = other.concepts_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostConceptsRequest Clone() {
      return new PostConceptsRequest(this);
    }

    /// <summary>Field number for the "user_app_id" field.</summary>
    public const int UserAppIdFieldNumber = 1;
    private global::Clarifai.Api.UserAppIDSet userAppId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.UserAppIDSet UserAppId {
      get { return userAppId_; }
      set {
        userAppId_ = value;
      }
    }

    /// <summary>Field number for the "concepts" field.</summary>
    public const int ConceptsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Clarifai.Api.Concept> _repeated_concepts_codec
        = pb::FieldCodec.ForMessage(18, global::Clarifai.Api.Concept.Parser);
    private readonly pbc::RepeatedField<global::Clarifai.Api.Concept> concepts_ = new pbc::RepeatedField<global::Clarifai.Api.Concept>();
    /// <summary>
    /// The concepts to add.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Clarifai.Api.Concept> Concepts {
      get { return concepts_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PostConceptsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PostConceptsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserAppId, other.UserAppId)) return false;
      if(!concepts_.Equals(other.concepts_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (userAppId_ != null) hash ^= UserAppId.GetHashCode();
      hash ^= concepts_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (userAppId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserAppId);
      }
      concepts_.WriteTo(output, _repeated_concepts_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (userAppId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserAppId);
      }
      size += concepts_.CalculateSize(_repeated_concepts_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PostConceptsRequest other) {
      if (other == null) {
        return;
      }
      if (other.userAppId_ != null) {
        if (userAppId_ == null) {
          UserAppId = new global::Clarifai.Api.UserAppIDSet();
        }
        UserAppId.MergeFrom(other.UserAppId);
      }
      concepts_.Add(other.concepts_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (userAppId_ == null) {
              UserAppId = new global::Clarifai.Api.UserAppIDSet();
            }
            input.ReadMessage(UserAppId);
            break;
          }
          case 18: {
            concepts_.AddEntriesFrom(input, _repeated_concepts_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PatchConceptsRequest : pb::IMessage<PatchConceptsRequest> {
    private static readonly pb::MessageParser<PatchConceptsRequest> _parser = new pb::MessageParser<PatchConceptsRequest>(() => new PatchConceptsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PatchConceptsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[34]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PatchConceptsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PatchConceptsRequest(PatchConceptsRequest other) : this() {
      userAppId_ = other.userAppId_ != null ? other.userAppId_.Clone() : null;
      concepts_ = other.concepts_.Clone();
      action_ = other.action_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PatchConceptsRequest Clone() {
      return new PatchConceptsRequest(this);
    }

    /// <summary>Field number for the "user_app_id" field.</summary>
    public const int UserAppIdFieldNumber = 1;
    private global::Clarifai.Api.UserAppIDSet userAppId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.UserAppIDSet UserAppId {
      get { return userAppId_; }
      set {
        userAppId_ = value;
      }
    }

    /// <summary>Field number for the "concepts" field.</summary>
    public const int ConceptsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Clarifai.Api.Concept> _repeated_concepts_codec
        = pb::FieldCodec.ForMessage(18, global::Clarifai.Api.Concept.Parser);
    private readonly pbc::RepeatedField<global::Clarifai.Api.Concept> concepts_ = new pbc::RepeatedField<global::Clarifai.Api.Concept>();
    /// <summary>
    /// The concepts to patch.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Clarifai.Api.Concept> Concepts {
      get { return concepts_; }
    }

    /// <summary>Field number for the "action" field.</summary>
    public const int ActionFieldNumber = 3;
    private string action_ = "";
    /// <summary>
    /// The action to perform on the patched objects
    /// For now ony action 'overwrite' is supported
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Action {
      get { return action_; }
      set {
        action_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PatchConceptsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PatchConceptsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserAppId, other.UserAppId)) return false;
      if(!concepts_.Equals(other.concepts_)) return false;
      if (Action != other.Action) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (userAppId_ != null) hash ^= UserAppId.GetHashCode();
      hash ^= concepts_.GetHashCode();
      if (Action.Length != 0) hash ^= Action.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (userAppId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserAppId);
      }
      concepts_.WriteTo(output, _repeated_concepts_codec);
      if (Action.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Action);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (userAppId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserAppId);
      }
      size += concepts_.CalculateSize(_repeated_concepts_codec);
      if (Action.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Action);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PatchConceptsRequest other) {
      if (other == null) {
        return;
      }
      if (other.userAppId_ != null) {
        if (userAppId_ == null) {
          UserAppId = new global::Clarifai.Api.UserAppIDSet();
        }
        UserAppId.MergeFrom(other.UserAppId);
      }
      concepts_.Add(other.concepts_);
      if (other.Action.Length != 0) {
        Action = other.Action;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (userAppId_ == null) {
              UserAppId = new global::Clarifai.Api.UserAppIDSet();
            }
            input.ReadMessage(UserAppId);
            break;
          }
          case 18: {
            concepts_.AddEntriesFrom(input, _repeated_concepts_codec);
            break;
          }
          case 26: {
            Action = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetConceptCountsRequest : pb::IMessage<GetConceptCountsRequest> {
    private static readonly pb::MessageParser<GetConceptCountsRequest> _parser = new pb::MessageParser<GetConceptCountsRequest>(() => new GetConceptCountsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetConceptCountsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[35]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetConceptCountsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetConceptCountsRequest(GetConceptCountsRequest other) : this() {
      userAppId_ = other.userAppId_ != null ? other.userAppId_.Clone() : null;
      page_ = other.page_;
      perPage_ = other.perPage_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetConceptCountsRequest Clone() {
      return new GetConceptCountsRequest(this);
    }

    /// <summary>Field number for the "user_app_id" field.</summary>
    public const int UserAppIdFieldNumber = 1;
    private global::Clarifai.Api.UserAppIDSet userAppId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.UserAppIDSet UserAppId {
      get { return userAppId_; }
      set {
        userAppId_ = value;
      }
    }

    /// <summary>Field number for the "page" field.</summary>
    public const int PageFieldNumber = 2;
    private uint page_;
    /// <summary>
    /// (optional URL parameter) The page number. Pagination is used to split the results into chunks.
    /// Defaults to 1.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Page {
      get { return page_; }
      set {
        page_ = value;
      }
    }

    /// <summary>Field number for the "per_page" field.</summary>
    public const int PerPageFieldNumber = 3;
    private uint perPage_;
    /// <summary>
    /// (optional URL parameter) The number of results that will be contained in each page. Defaults
    /// to 128.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint PerPage {
      get { return perPage_; }
      set {
        perPage_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetConceptCountsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetConceptCountsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserAppId, other.UserAppId)) return false;
      if (Page != other.Page) return false;
      if (PerPage != other.PerPage) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (userAppId_ != null) hash ^= UserAppId.GetHashCode();
      if (Page != 0) hash ^= Page.GetHashCode();
      if (PerPage != 0) hash ^= PerPage.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (userAppId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserAppId);
      }
      if (Page != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Page);
      }
      if (PerPage != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(PerPage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (userAppId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserAppId);
      }
      if (Page != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Page);
      }
      if (PerPage != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PerPage);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetConceptCountsRequest other) {
      if (other == null) {
        return;
      }
      if (other.userAppId_ != null) {
        if (userAppId_ == null) {
          UserAppId = new global::Clarifai.Api.UserAppIDSet();
        }
        UserAppId.MergeFrom(other.UserAppId);
      }
      if (other.Page != 0) {
        Page = other.Page;
      }
      if (other.PerPage != 0) {
        PerPage = other.PerPage;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (userAppId_ == null) {
              UserAppId = new global::Clarifai.Api.UserAppIDSet();
            }
            input.ReadMessage(UserAppId);
            break;
          }
          case 16: {
            Page = input.ReadUInt32();
            break;
          }
          case 24: {
            PerPage = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SingleConceptResponse : pb::IMessage<SingleConceptResponse> {
    private static readonly pb::MessageParser<SingleConceptResponse> _parser = new pb::MessageParser<SingleConceptResponse>(() => new SingleConceptResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SingleConceptResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[36]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SingleConceptResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SingleConceptResponse(SingleConceptResponse other) : this() {
      status_ = other.status_ != null ? other.status_.Clone() : null;
      concept_ = other.concept_ != null ? other.concept_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SingleConceptResponse Clone() {
      return new SingleConceptResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::Clarifai.Api.Status.Status status_;
    /// <summary>
    /// The response status.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.Status.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "concept" field.</summary>
    public const int ConceptFieldNumber = 2;
    private global::Clarifai.Api.Concept concept_;
    /// <summary>
    /// The returned concept.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.Concept Concept {
      get { return concept_; }
      set {
        concept_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SingleConceptResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SingleConceptResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Status, other.Status)) return false;
      if (!object.Equals(Concept, other.Concept)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (status_ != null) hash ^= Status.GetHashCode();
      if (concept_ != null) hash ^= Concept.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (status_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Status);
      }
      if (concept_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Concept);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      if (concept_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Concept);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SingleConceptResponse other) {
      if (other == null) {
        return;
      }
      if (other.status_ != null) {
        if (status_ == null) {
          Status = new global::Clarifai.Api.Status.Status();
        }
        Status.MergeFrom(other.Status);
      }
      if (other.concept_ != null) {
        if (concept_ == null) {
          Concept = new global::Clarifai.Api.Concept();
        }
        Concept.MergeFrom(other.Concept);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (status_ == null) {
              Status = new global::Clarifai.Api.Status.Status();
            }
            input.ReadMessage(Status);
            break;
          }
          case 18: {
            if (concept_ == null) {
              Concept = new global::Clarifai.Api.Concept();
            }
            input.ReadMessage(Concept);
            break;
          }
        }
      }
    }

  }

  public sealed partial class MultiConceptResponse : pb::IMessage<MultiConceptResponse> {
    private static readonly pb::MessageParser<MultiConceptResponse> _parser = new pb::MessageParser<MultiConceptResponse>(() => new MultiConceptResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MultiConceptResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[37]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiConceptResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiConceptResponse(MultiConceptResponse other) : this() {
      status_ = other.status_ != null ? other.status_.Clone() : null;
      concepts_ = other.concepts_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiConceptResponse Clone() {
      return new MultiConceptResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::Clarifai.Api.Status.Status status_;
    /// <summary>
    /// The response status.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.Status.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "concepts" field.</summary>
    public const int ConceptsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Clarifai.Api.Concept> _repeated_concepts_codec
        = pb::FieldCodec.ForMessage(18, global::Clarifai.Api.Concept.Parser);
    private readonly pbc::RepeatedField<global::Clarifai.Api.Concept> concepts_ = new pbc::RepeatedField<global::Clarifai.Api.Concept>();
    /// <summary>
    /// The returned concepts.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Clarifai.Api.Concept> Concepts {
      get { return concepts_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MultiConceptResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MultiConceptResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Status, other.Status)) return false;
      if(!concepts_.Equals(other.concepts_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (status_ != null) hash ^= Status.GetHashCode();
      hash ^= concepts_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (status_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Status);
      }
      concepts_.WriteTo(output, _repeated_concepts_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      size += concepts_.CalculateSize(_repeated_concepts_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MultiConceptResponse other) {
      if (other == null) {
        return;
      }
      if (other.status_ != null) {
        if (status_ == null) {
          Status = new global::Clarifai.Api.Status.Status();
        }
        Status.MergeFrom(other.Status);
      }
      concepts_.Add(other.concepts_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (status_ == null) {
              Status = new global::Clarifai.Api.Status.Status();
            }
            input.ReadMessage(Status);
            break;
          }
          case 18: {
            concepts_.AddEntriesFrom(input, _repeated_concepts_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class MultiConceptCountResponse : pb::IMessage<MultiConceptCountResponse> {
    private static readonly pb::MessageParser<MultiConceptCountResponse> _parser = new pb::MessageParser<MultiConceptCountResponse>(() => new MultiConceptCountResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MultiConceptCountResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[38]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiConceptCountResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiConceptCountResponse(MultiConceptCountResponse other) : this() {
      status_ = other.status_ != null ? other.status_.Clone() : null;
      conceptCounts_ = other.conceptCounts_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiConceptCountResponse Clone() {
      return new MultiConceptCountResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::Clarifai.Api.Status.Status status_;
    /// <summary>
    /// The response status.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.Status.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "concept_counts" field.</summary>
    public const int ConceptCountsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Clarifai.Api.ConceptCount> _repeated_conceptCounts_codec
        = pb::FieldCodec.ForMessage(18, global::Clarifai.Api.ConceptCount.Parser);
    private readonly pbc::RepeatedField<global::Clarifai.Api.ConceptCount> conceptCounts_ = new pbc::RepeatedField<global::Clarifai.Api.ConceptCount>();
    /// <summary>
    /// The returned concept counts.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Clarifai.Api.ConceptCount> ConceptCounts {
      get { return conceptCounts_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MultiConceptCountResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MultiConceptCountResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Status, other.Status)) return false;
      if(!conceptCounts_.Equals(other.conceptCounts_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (status_ != null) hash ^= Status.GetHashCode();
      hash ^= conceptCounts_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (status_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Status);
      }
      conceptCounts_.WriteTo(output, _repeated_conceptCounts_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      size += conceptCounts_.CalculateSize(_repeated_conceptCounts_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MultiConceptCountResponse other) {
      if (other == null) {
        return;
      }
      if (other.status_ != null) {
        if (status_ == null) {
          Status = new global::Clarifai.Api.Status.Status();
        }
        Status.MergeFrom(other.Status);
      }
      conceptCounts_.Add(other.conceptCounts_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (status_ == null) {
              Status = new global::Clarifai.Api.Status.Status();
            }
            input.ReadMessage(Status);
            break;
          }
          case 18: {
            conceptCounts_.AddEntriesFrom(input, _repeated_conceptCounts_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /////////////////////////////////////////////////////////////////////////////////
  /// Requests / Responses from /proto/clarifai/api/concept_graph.proto
  /////////////////////////////////////////////////////////////////////////////////
  ///////////////////////
  /// Responses
  ///////////////////////
  /// Requests
  ///////////////////////
  /// GET all relations such that the concept_id refers to the subject of the relation
  /// </summary>
  public sealed partial class ListConceptRelationsRequest : pb::IMessage<ListConceptRelationsRequest> {
    private static readonly pb::MessageParser<ListConceptRelationsRequest> _parser = new pb::MessageParser<ListConceptRelationsRequest>(() => new ListConceptRelationsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListConceptRelationsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[39]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListConceptRelationsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListConceptRelationsRequest(ListConceptRelationsRequest other) : this() {
      userAppId_ = other.userAppId_ != null ? other.userAppId_.Clone() : null;
      conceptId_ = other.conceptId_;
      predicate_ = other.predicate_;
      knowledgeGraphId_ = other.knowledgeGraphId_;
      page_ = other.page_;
      perPage_ = other.perPage_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListConceptRelationsRequest Clone() {
      return new ListConceptRelationsRequest(this);
    }

    /// <summary>Field number for the "user_app_id" field.</summary>
    public const int UserAppIdFieldNumber = 1;
    private global::Clarifai.Api.UserAppIDSet userAppId_;
    /// <summary>
    /// The user_id and app_id information.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.UserAppIDSet UserAppId {
      get { return userAppId_; }
      set {
        userAppId_ = value;
      }
    }

    /// <summary>Field number for the "concept_id" field.</summary>
    public const int ConceptIdFieldNumber = 2;
    private string conceptId_ = "";
    /// <summary>
    /// The subject concept id in your app to get all the relationships for.
    /// Leave as an empty string (GET /concepts/relations) to list ALL the relations in the app.
    ///
    /// When listing all the relations it will only return one direction of the relationship
    /// with the predicate acting on the subject and not the inverse like is done when providing a
    /// concept_id so that we can return a reliable page size always.
    ///
    /// When providing a concept_id, if a hyponym is present in the DB such as:
    /// 'honey' (subject), 'hyponym' (predict for "is a kind of"), 'food' (object)
    /// then you can list the concept relations for 'honey' and get hyponym predicate with 'food'
    /// object.
    /// But you can also list the concept relations for 'food' and it will return the same hyponym
    /// relationship with 'honey' as subject and 'food' as predicate.
    /// Synonyms by nature are symmetrical relationships so either side can be the concept_id (subject)
    /// when listing the relations.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConceptId {
      get { return conceptId_; }
      set {
        conceptId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "predicate" field.</summary>
    public const int PredicateFieldNumber = 3;
    private string predicate_ = "";
    /// <summary>
    /// This is part of the url so we can extend to multiple link types in the future.
    /// Valid predicates are:
    /// 'hypernyms'
    /// 'hyponyms'
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Predicate {
      get { return predicate_; }
      set {
        predicate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "knowledge_graph_id" field.</summary>
    public const int KnowledgeGraphIdFieldNumber = 4;
    private string knowledgeGraphId_ = "";
    /// <summary>
    /// If knowledge_graph_id is provided then just list relations from that knowledge graph.
    /// If not provided then list relations from all knowledge graphs including the global one for this
    /// app one (ie. knowledge_graph "") and any specific ones in the app.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string KnowledgeGraphId {
      get { return knowledgeGraphId_; }
      set {
        knowledgeGraphId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "page" field.</summary>
    public const int PageFieldNumber = 5;
    private uint page_;
    /// <summary>
    /// (optional URL parameter) The page number. Pagination is used to split the results into chunks.
    /// Defaults to 1.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Page {
      get { return page_; }
      set {
        page_ = value;
      }
    }

    /// <summary>Field number for the "per_page" field.</summary>
    public const int PerPageFieldNumber = 6;
    private uint perPage_;
    /// <summary>
    /// (optional URL parameter) The number of results that will be contained in each page. Defaults
    /// to 128.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint PerPage {
      get { return perPage_; }
      set {
        perPage_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListConceptRelationsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListConceptRelationsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserAppId, other.UserAppId)) return false;
      if (ConceptId != other.ConceptId) return false;
      if (Predicate != other.Predicate) return false;
      if (KnowledgeGraphId != other.KnowledgeGraphId) return false;
      if (Page != other.Page) return false;
      if (PerPage != other.PerPage) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (userAppId_ != null) hash ^= UserAppId.GetHashCode();
      if (ConceptId.Length != 0) hash ^= ConceptId.GetHashCode();
      if (Predicate.Length != 0) hash ^= Predicate.GetHashCode();
      if (KnowledgeGraphId.Length != 0) hash ^= KnowledgeGraphId.GetHashCode();
      if (Page != 0) hash ^= Page.GetHashCode();
      if (PerPage != 0) hash ^= PerPage.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (userAppId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserAppId);
      }
      if (ConceptId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ConceptId);
      }
      if (Predicate.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Predicate);
      }
      if (KnowledgeGraphId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(KnowledgeGraphId);
      }
      if (Page != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(Page);
      }
      if (PerPage != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(PerPage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (userAppId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserAppId);
      }
      if (ConceptId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConceptId);
      }
      if (Predicate.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Predicate);
      }
      if (KnowledgeGraphId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(KnowledgeGraphId);
      }
      if (Page != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Page);
      }
      if (PerPage != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PerPage);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListConceptRelationsRequest other) {
      if (other == null) {
        return;
      }
      if (other.userAppId_ != null) {
        if (userAppId_ == null) {
          UserAppId = new global::Clarifai.Api.UserAppIDSet();
        }
        UserAppId.MergeFrom(other.UserAppId);
      }
      if (other.ConceptId.Length != 0) {
        ConceptId = other.ConceptId;
      }
      if (other.Predicate.Length != 0) {
        Predicate = other.Predicate;
      }
      if (other.KnowledgeGraphId.Length != 0) {
        KnowledgeGraphId = other.KnowledgeGraphId;
      }
      if (other.Page != 0) {
        Page = other.Page;
      }
      if (other.PerPage != 0) {
        PerPage = other.PerPage;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (userAppId_ == null) {
              UserAppId = new global::Clarifai.Api.UserAppIDSet();
            }
            input.ReadMessage(UserAppId);
            break;
          }
          case 18: {
            ConceptId = input.ReadString();
            break;
          }
          case 26: {
            Predicate = input.ReadString();
            break;
          }
          case 34: {
            KnowledgeGraphId = input.ReadString();
            break;
          }
          case 40: {
            Page = input.ReadUInt32();
            break;
          }
          case 48: {
            PerPage = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// POST new concept relations
  /// </summary>
  public sealed partial class PostConceptRelationsRequest : pb::IMessage<PostConceptRelationsRequest> {
    private static readonly pb::MessageParser<PostConceptRelationsRequest> _parser = new pb::MessageParser<PostConceptRelationsRequest>(() => new PostConceptRelationsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PostConceptRelationsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[40]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostConceptRelationsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostConceptRelationsRequest(PostConceptRelationsRequest other) : this() {
      userAppId_ = other.userAppId_ != null ? other.userAppId_.Clone() : null;
      conceptId_ = other.conceptId_;
      conceptRelations_ = other.conceptRelations_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostConceptRelationsRequest Clone() {
      return new PostConceptRelationsRequest(this);
    }

    /// <summary>Field number for the "user_app_id" field.</summary>
    public const int UserAppIdFieldNumber = 1;
    private global::Clarifai.Api.UserAppIDSet userAppId_;
    /// <summary>
    /// The user_id and app_id information.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.UserAppIDSet UserAppId {
      get { return userAppId_; }
      set {
        userAppId_ = value;
      }
    }

    /// <summary>Field number for the "concept_id" field.</summary>
    public const int ConceptIdFieldNumber = 2;
    private string conceptId_ = "";
    /// <summary>
    /// The subject concept id you're going to add relations for.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConceptId {
      get { return conceptId_; }
      set {
        conceptId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "concept_relations" field.</summary>
    public const int ConceptRelationsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Clarifai.Api.ConceptRelation> _repeated_conceptRelations_codec
        = pb::FieldCodec.ForMessage(26, global::Clarifai.Api.ConceptRelation.Parser);
    private readonly pbc::RepeatedField<global::Clarifai.Api.ConceptRelation> conceptRelations_ = new pbc::RepeatedField<global::Clarifai.Api.ConceptRelation>();
    /// <summary>
    /// The relationships you're going to add.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Clarifai.Api.ConceptRelation> ConceptRelations {
      get { return conceptRelations_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PostConceptRelationsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PostConceptRelationsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserAppId, other.UserAppId)) return false;
      if (ConceptId != other.ConceptId) return false;
      if(!conceptRelations_.Equals(other.conceptRelations_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (userAppId_ != null) hash ^= UserAppId.GetHashCode();
      if (ConceptId.Length != 0) hash ^= ConceptId.GetHashCode();
      hash ^= conceptRelations_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (userAppId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserAppId);
      }
      if (ConceptId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ConceptId);
      }
      conceptRelations_.WriteTo(output, _repeated_conceptRelations_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (userAppId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserAppId);
      }
      if (ConceptId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConceptId);
      }
      size += conceptRelations_.CalculateSize(_repeated_conceptRelations_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PostConceptRelationsRequest other) {
      if (other == null) {
        return;
      }
      if (other.userAppId_ != null) {
        if (userAppId_ == null) {
          UserAppId = new global::Clarifai.Api.UserAppIDSet();
        }
        UserAppId.MergeFrom(other.UserAppId);
      }
      if (other.ConceptId.Length != 0) {
        ConceptId = other.ConceptId;
      }
      conceptRelations_.Add(other.conceptRelations_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (userAppId_ == null) {
              UserAppId = new global::Clarifai.Api.UserAppIDSet();
            }
            input.ReadMessage(UserAppId);
            break;
          }
          case 18: {
            ConceptId = input.ReadString();
            break;
          }
          case 26: {
            conceptRelations_.AddEntriesFrom(input, _repeated_conceptRelations_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// DELETE concept relations
  /// </summary>
  public sealed partial class DeleteConceptRelationsRequest : pb::IMessage<DeleteConceptRelationsRequest> {
    private static readonly pb::MessageParser<DeleteConceptRelationsRequest> _parser = new pb::MessageParser<DeleteConceptRelationsRequest>(() => new DeleteConceptRelationsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteConceptRelationsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[41]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteConceptRelationsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteConceptRelationsRequest(DeleteConceptRelationsRequest other) : this() {
      userAppId_ = other.userAppId_ != null ? other.userAppId_.Clone() : null;
      conceptId_ = other.conceptId_;
      ids_ = other.ids_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteConceptRelationsRequest Clone() {
      return new DeleteConceptRelationsRequest(this);
    }

    /// <summary>Field number for the "user_app_id" field.</summary>
    public const int UserAppIdFieldNumber = 1;
    private global::Clarifai.Api.UserAppIDSet userAppId_;
    /// <summary>
    /// The user_id and app_id information.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.UserAppIDSet UserAppId {
      get { return userAppId_; }
      set {
        userAppId_ = value;
      }
    }

    /// <summary>Field number for the "concept_id" field.</summary>
    public const int ConceptIdFieldNumber = 2;
    private string conceptId_ = "";
    /// <summary>
    /// The concept to delete relationship for.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConceptId {
      get { return conceptId_; }
      set {
        conceptId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ids" field.</summary>
    public const int IdsFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_ids_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> ids_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// The concept relationship ids to delete.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Ids {
      get { return ids_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteConceptRelationsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteConceptRelationsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserAppId, other.UserAppId)) return false;
      if (ConceptId != other.ConceptId) return false;
      if(!ids_.Equals(other.ids_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (userAppId_ != null) hash ^= UserAppId.GetHashCode();
      if (ConceptId.Length != 0) hash ^= ConceptId.GetHashCode();
      hash ^= ids_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (userAppId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserAppId);
      }
      if (ConceptId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ConceptId);
      }
      ids_.WriteTo(output, _repeated_ids_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (userAppId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserAppId);
      }
      if (ConceptId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConceptId);
      }
      size += ids_.CalculateSize(_repeated_ids_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteConceptRelationsRequest other) {
      if (other == null) {
        return;
      }
      if (other.userAppId_ != null) {
        if (userAppId_ == null) {
          UserAppId = new global::Clarifai.Api.UserAppIDSet();
        }
        UserAppId.MergeFrom(other.UserAppId);
      }
      if (other.ConceptId.Length != 0) {
        ConceptId = other.ConceptId;
      }
      ids_.Add(other.ids_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (userAppId_ == null) {
              UserAppId = new global::Clarifai.Api.UserAppIDSet();
            }
            input.ReadMessage(UserAppId);
            break;
          }
          case 18: {
            ConceptId = input.ReadString();
            break;
          }
          case 26: {
            ids_.AddEntriesFrom(input, _repeated_ids_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// GET all knowledge graphs
  /// </summary>
  public sealed partial class ListKnowledgeGraphsRequest : pb::IMessage<ListKnowledgeGraphsRequest> {
    private static readonly pb::MessageParser<ListKnowledgeGraphsRequest> _parser = new pb::MessageParser<ListKnowledgeGraphsRequest>(() => new ListKnowledgeGraphsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListKnowledgeGraphsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[42]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListKnowledgeGraphsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListKnowledgeGraphsRequest(ListKnowledgeGraphsRequest other) : this() {
      userAppId_ = other.userAppId_ != null ? other.userAppId_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListKnowledgeGraphsRequest Clone() {
      return new ListKnowledgeGraphsRequest(this);
    }

    /// <summary>Field number for the "user_app_id" field.</summary>
    public const int UserAppIdFieldNumber = 1;
    private global::Clarifai.Api.UserAppIDSet userAppId_;
    /// <summary>
    /// The user_id and app_id information.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.UserAppIDSet UserAppId {
      get { return userAppId_; }
      set {
        userAppId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListKnowledgeGraphsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListKnowledgeGraphsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserAppId, other.UserAppId)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (userAppId_ != null) hash ^= UserAppId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (userAppId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserAppId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (userAppId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserAppId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListKnowledgeGraphsRequest other) {
      if (other == null) {
        return;
      }
      if (other.userAppId_ != null) {
        if (userAppId_ == null) {
          UserAppId = new global::Clarifai.Api.UserAppIDSet();
        }
        UserAppId.MergeFrom(other.UserAppId);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (userAppId_ == null) {
              UserAppId = new global::Clarifai.Api.UserAppIDSet();
            }
            input.ReadMessage(UserAppId);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// POST new knowledge graphs
  /// </summary>
  public sealed partial class PostKnowledgeGraphsRequest : pb::IMessage<PostKnowledgeGraphsRequest> {
    private static readonly pb::MessageParser<PostKnowledgeGraphsRequest> _parser = new pb::MessageParser<PostKnowledgeGraphsRequest>(() => new PostKnowledgeGraphsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PostKnowledgeGraphsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[43]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostKnowledgeGraphsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostKnowledgeGraphsRequest(PostKnowledgeGraphsRequest other) : this() {
      userAppId_ = other.userAppId_ != null ? other.userAppId_.Clone() : null;
      knowledgeGraphs_ = other.knowledgeGraphs_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostKnowledgeGraphsRequest Clone() {
      return new PostKnowledgeGraphsRequest(this);
    }

    /// <summary>Field number for the "user_app_id" field.</summary>
    public const int UserAppIdFieldNumber = 1;
    private global::Clarifai.Api.UserAppIDSet userAppId_;
    /// <summary>
    /// The user_id and app_id information.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.UserAppIDSet UserAppId {
      get { return userAppId_; }
      set {
        userAppId_ = value;
      }
    }

    /// <summary>Field number for the "knowledge_graphs" field.</summary>
    public const int KnowledgeGraphsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Clarifai.Api.KnowledgeGraph> _repeated_knowledgeGraphs_codec
        = pb::FieldCodec.ForMessage(18, global::Clarifai.Api.KnowledgeGraph.Parser);
    private readonly pbc::RepeatedField<global::Clarifai.Api.KnowledgeGraph> knowledgeGraphs_ = new pbc::RepeatedField<global::Clarifai.Api.KnowledgeGraph>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Clarifai.Api.KnowledgeGraph> KnowledgeGraphs {
      get { return knowledgeGraphs_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PostKnowledgeGraphsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PostKnowledgeGraphsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserAppId, other.UserAppId)) return false;
      if(!knowledgeGraphs_.Equals(other.knowledgeGraphs_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (userAppId_ != null) hash ^= UserAppId.GetHashCode();
      hash ^= knowledgeGraphs_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (userAppId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserAppId);
      }
      knowledgeGraphs_.WriteTo(output, _repeated_knowledgeGraphs_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (userAppId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserAppId);
      }
      size += knowledgeGraphs_.CalculateSize(_repeated_knowledgeGraphs_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PostKnowledgeGraphsRequest other) {
      if (other == null) {
        return;
      }
      if (other.userAppId_ != null) {
        if (userAppId_ == null) {
          UserAppId = new global::Clarifai.Api.UserAppIDSet();
        }
        UserAppId.MergeFrom(other.UserAppId);
      }
      knowledgeGraphs_.Add(other.knowledgeGraphs_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (userAppId_ == null) {
              UserAppId = new global::Clarifai.Api.UserAppIDSet();
            }
            input.ReadMessage(UserAppId);
            break;
          }
          case 18: {
            knowledgeGraphs_.AddEntriesFrom(input, _repeated_knowledgeGraphs_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Start concept mapping jobs
  /// </summary>
  public sealed partial class PostConceptMappingJobsRequest : pb::IMessage<PostConceptMappingJobsRequest> {
    private static readonly pb::MessageParser<PostConceptMappingJobsRequest> _parser = new pb::MessageParser<PostConceptMappingJobsRequest>(() => new PostConceptMappingJobsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PostConceptMappingJobsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[44]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostConceptMappingJobsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostConceptMappingJobsRequest(PostConceptMappingJobsRequest other) : this() {
      userAppId_ = other.userAppId_ != null ? other.userAppId_.Clone() : null;
      conceptMappingJobs_ = other.conceptMappingJobs_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostConceptMappingJobsRequest Clone() {
      return new PostConceptMappingJobsRequest(this);
    }

    /// <summary>Field number for the "user_app_id" field.</summary>
    public const int UserAppIdFieldNumber = 1;
    private global::Clarifai.Api.UserAppIDSet userAppId_;
    /// <summary>
    /// The user_id and app_id information.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.UserAppIDSet UserAppId {
      get { return userAppId_; }
      set {
        userAppId_ = value;
      }
    }

    /// <summary>Field number for the "concept_mapping_jobs" field.</summary>
    public const int ConceptMappingJobsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Clarifai.Api.ConceptMappingJob> _repeated_conceptMappingJobs_codec
        = pb::FieldCodec.ForMessage(18, global::Clarifai.Api.ConceptMappingJob.Parser);
    private readonly pbc::RepeatedField<global::Clarifai.Api.ConceptMappingJob> conceptMappingJobs_ = new pbc::RepeatedField<global::Clarifai.Api.ConceptMappingJob>();
    /// <summary>
    /// The concept mapping jobs that are being started
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Clarifai.Api.ConceptMappingJob> ConceptMappingJobs {
      get { return conceptMappingJobs_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PostConceptMappingJobsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PostConceptMappingJobsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserAppId, other.UserAppId)) return false;
      if(!conceptMappingJobs_.Equals(other.conceptMappingJobs_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (userAppId_ != null) hash ^= UserAppId.GetHashCode();
      hash ^= conceptMappingJobs_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (userAppId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserAppId);
      }
      conceptMappingJobs_.WriteTo(output, _repeated_conceptMappingJobs_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (userAppId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserAppId);
      }
      size += conceptMappingJobs_.CalculateSize(_repeated_conceptMappingJobs_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PostConceptMappingJobsRequest other) {
      if (other == null) {
        return;
      }
      if (other.userAppId_ != null) {
        if (userAppId_ == null) {
          UserAppId = new global::Clarifai.Api.UserAppIDSet();
        }
        UserAppId.MergeFrom(other.UserAppId);
      }
      conceptMappingJobs_.Add(other.conceptMappingJobs_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (userAppId_ == null) {
              UserAppId = new global::Clarifai.Api.UserAppIDSet();
            }
            input.ReadMessage(UserAppId);
            break;
          }
          case 18: {
            conceptMappingJobs_.AddEntriesFrom(input, _repeated_conceptMappingJobs_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class MultiConceptRelationResponse : pb::IMessage<MultiConceptRelationResponse> {
    private static readonly pb::MessageParser<MultiConceptRelationResponse> _parser = new pb::MessageParser<MultiConceptRelationResponse>(() => new MultiConceptRelationResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MultiConceptRelationResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[45]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiConceptRelationResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiConceptRelationResponse(MultiConceptRelationResponse other) : this() {
      status_ = other.status_ != null ? other.status_.Clone() : null;
      conceptRelations_ = other.conceptRelations_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiConceptRelationResponse Clone() {
      return new MultiConceptRelationResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::Clarifai.Api.Status.Status status_;
    /// <summary>
    /// The response status.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.Status.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "concept_relations" field.</summary>
    public const int ConceptRelationsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Clarifai.Api.ConceptRelation> _repeated_conceptRelations_codec
        = pb::FieldCodec.ForMessage(18, global::Clarifai.Api.ConceptRelation.Parser);
    private readonly pbc::RepeatedField<global::Clarifai.Api.ConceptRelation> conceptRelations_ = new pbc::RepeatedField<global::Clarifai.Api.ConceptRelation>();
    /// <summary>
    /// The returned concept relations.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Clarifai.Api.ConceptRelation> ConceptRelations {
      get { return conceptRelations_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MultiConceptRelationResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MultiConceptRelationResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Status, other.Status)) return false;
      if(!conceptRelations_.Equals(other.conceptRelations_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (status_ != null) hash ^= Status.GetHashCode();
      hash ^= conceptRelations_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (status_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Status);
      }
      conceptRelations_.WriteTo(output, _repeated_conceptRelations_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      size += conceptRelations_.CalculateSize(_repeated_conceptRelations_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MultiConceptRelationResponse other) {
      if (other == null) {
        return;
      }
      if (other.status_ != null) {
        if (status_ == null) {
          Status = new global::Clarifai.Api.Status.Status();
        }
        Status.MergeFrom(other.Status);
      }
      conceptRelations_.Add(other.conceptRelations_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (status_ == null) {
              Status = new global::Clarifai.Api.Status.Status();
            }
            input.ReadMessage(Status);
            break;
          }
          case 18: {
            conceptRelations_.AddEntriesFrom(input, _repeated_conceptRelations_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class MultiKnowledgeGraphResponse : pb::IMessage<MultiKnowledgeGraphResponse> {
    private static readonly pb::MessageParser<MultiKnowledgeGraphResponse> _parser = new pb::MessageParser<MultiKnowledgeGraphResponse>(() => new MultiKnowledgeGraphResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MultiKnowledgeGraphResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[46]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiKnowledgeGraphResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiKnowledgeGraphResponse(MultiKnowledgeGraphResponse other) : this() {
      status_ = other.status_ != null ? other.status_.Clone() : null;
      knowledgeGraphs_ = other.knowledgeGraphs_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiKnowledgeGraphResponse Clone() {
      return new MultiKnowledgeGraphResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::Clarifai.Api.Status.Status status_;
    /// <summary>
    /// The response status.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.Status.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "knowledge_graphs" field.</summary>
    public const int KnowledgeGraphsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Clarifai.Api.KnowledgeGraph> _repeated_knowledgeGraphs_codec
        = pb::FieldCodec.ForMessage(18, global::Clarifai.Api.KnowledgeGraph.Parser);
    private readonly pbc::RepeatedField<global::Clarifai.Api.KnowledgeGraph> knowledgeGraphs_ = new pbc::RepeatedField<global::Clarifai.Api.KnowledgeGraph>();
    /// <summary>
    /// The returned knowledge graphs.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Clarifai.Api.KnowledgeGraph> KnowledgeGraphs {
      get { return knowledgeGraphs_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MultiKnowledgeGraphResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MultiKnowledgeGraphResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Status, other.Status)) return false;
      if(!knowledgeGraphs_.Equals(other.knowledgeGraphs_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (status_ != null) hash ^= Status.GetHashCode();
      hash ^= knowledgeGraphs_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (status_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Status);
      }
      knowledgeGraphs_.WriteTo(output, _repeated_knowledgeGraphs_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      size += knowledgeGraphs_.CalculateSize(_repeated_knowledgeGraphs_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MultiKnowledgeGraphResponse other) {
      if (other == null) {
        return;
      }
      if (other.status_ != null) {
        if (status_ == null) {
          Status = new global::Clarifai.Api.Status.Status();
        }
        Status.MergeFrom(other.Status);
      }
      knowledgeGraphs_.Add(other.knowledgeGraphs_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (status_ == null) {
              Status = new global::Clarifai.Api.Status.Status();
            }
            input.ReadMessage(Status);
            break;
          }
          case 18: {
            knowledgeGraphs_.AddEntriesFrom(input, _repeated_knowledgeGraphs_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class MultiConceptMappingJobResponse : pb::IMessage<MultiConceptMappingJobResponse> {
    private static readonly pb::MessageParser<MultiConceptMappingJobResponse> _parser = new pb::MessageParser<MultiConceptMappingJobResponse>(() => new MultiConceptMappingJobResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MultiConceptMappingJobResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[47]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiConceptMappingJobResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiConceptMappingJobResponse(MultiConceptMappingJobResponse other) : this() {
      status_ = other.status_ != null ? other.status_.Clone() : null;
      ids_ = other.ids_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiConceptMappingJobResponse Clone() {
      return new MultiConceptMappingJobResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::Clarifai.Api.Status.Status status_;
    /// <summary>
    /// The response status.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.Status.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "ids" field.</summary>
    public const int IdsFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_ids_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> ids_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// The ids of the concept mapping jobs underway.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Ids {
      get { return ids_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MultiConceptMappingJobResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MultiConceptMappingJobResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Status, other.Status)) return false;
      if(!ids_.Equals(other.ids_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (status_ != null) hash ^= Status.GetHashCode();
      hash ^= ids_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (status_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Status);
      }
      ids_.WriteTo(output, _repeated_ids_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      size += ids_.CalculateSize(_repeated_ids_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MultiConceptMappingJobResponse other) {
      if (other == null) {
        return;
      }
      if (other.status_ != null) {
        if (status_ == null) {
          Status = new global::Clarifai.Api.Status.Status();
        }
        Status.MergeFrom(other.Status);
      }
      ids_.Add(other.ids_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (status_ == null) {
              Status = new global::Clarifai.Api.Status.Status();
            }
            input.ReadMessage(Status);
            break;
          }
          case 18: {
            ids_.AddEntriesFrom(input, _repeated_ids_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /////////////////////////////////////////////////////////////////////////////////
  /// Requests / Responses from /proto/clarifai/api/concept_language.proto
  /////////////////////////////////////////////////////////////////////////////////
  /// GET single concept language for the given concept.
  /// </summary>
  public sealed partial class GetConceptLanguageRequest : pb::IMessage<GetConceptLanguageRequest> {
    private static readonly pb::MessageParser<GetConceptLanguageRequest> _parser = new pb::MessageParser<GetConceptLanguageRequest>(() => new GetConceptLanguageRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetConceptLanguageRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[48]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetConceptLanguageRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetConceptLanguageRequest(GetConceptLanguageRequest other) : this() {
      userAppId_ = other.userAppId_ != null ? other.userAppId_.Clone() : null;
      conceptId_ = other.conceptId_;
      language_ = other.language_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetConceptLanguageRequest Clone() {
      return new GetConceptLanguageRequest(this);
    }

    /// <summary>Field number for the "user_app_id" field.</summary>
    public const int UserAppIdFieldNumber = 1;
    private global::Clarifai.Api.UserAppIDSet userAppId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.UserAppIDSet UserAppId {
      get { return userAppId_; }
      set {
        userAppId_ = value;
      }
    }

    /// <summary>Field number for the "concept_id" field.</summary>
    public const int ConceptIdFieldNumber = 2;
    private string conceptId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConceptId {
      get { return conceptId_; }
      set {
        conceptId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "language" field.</summary>
    public const int LanguageFieldNumber = 3;
    private string language_ = "";
    /// <summary>
    /// This is the language identifier.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Language {
      get { return language_; }
      set {
        language_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetConceptLanguageRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetConceptLanguageRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserAppId, other.UserAppId)) return false;
      if (ConceptId != other.ConceptId) return false;
      if (Language != other.Language) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (userAppId_ != null) hash ^= UserAppId.GetHashCode();
      if (ConceptId.Length != 0) hash ^= ConceptId.GetHashCode();
      if (Language.Length != 0) hash ^= Language.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (userAppId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserAppId);
      }
      if (ConceptId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ConceptId);
      }
      if (Language.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Language);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (userAppId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserAppId);
      }
      if (ConceptId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConceptId);
      }
      if (Language.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Language);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetConceptLanguageRequest other) {
      if (other == null) {
        return;
      }
      if (other.userAppId_ != null) {
        if (userAppId_ == null) {
          UserAppId = new global::Clarifai.Api.UserAppIDSet();
        }
        UserAppId.MergeFrom(other.UserAppId);
      }
      if (other.ConceptId.Length != 0) {
        ConceptId = other.ConceptId;
      }
      if (other.Language.Length != 0) {
        Language = other.Language;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (userAppId_ == null) {
              UserAppId = new global::Clarifai.Api.UserAppIDSet();
            }
            input.ReadMessage(UserAppId);
            break;
          }
          case 18: {
            ConceptId = input.ReadString();
            break;
          }
          case 26: {
            Language = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// List multiple concept languages for the given concept.
  /// </summary>
  public sealed partial class ListConceptLanguagesRequest : pb::IMessage<ListConceptLanguagesRequest> {
    private static readonly pb::MessageParser<ListConceptLanguagesRequest> _parser = new pb::MessageParser<ListConceptLanguagesRequest>(() => new ListConceptLanguagesRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListConceptLanguagesRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[49]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListConceptLanguagesRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListConceptLanguagesRequest(ListConceptLanguagesRequest other) : this() {
      userAppId_ = other.userAppId_ != null ? other.userAppId_.Clone() : null;
      conceptId_ = other.conceptId_;
      page_ = other.page_;
      perPage_ = other.perPage_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListConceptLanguagesRequest Clone() {
      return new ListConceptLanguagesRequest(this);
    }

    /// <summary>Field number for the "user_app_id" field.</summary>
    public const int UserAppIdFieldNumber = 1;
    private global::Clarifai.Api.UserAppIDSet userAppId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.UserAppIDSet UserAppId {
      get { return userAppId_; }
      set {
        userAppId_ = value;
      }
    }

    /// <summary>Field number for the "concept_id" field.</summary>
    public const int ConceptIdFieldNumber = 2;
    private string conceptId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConceptId {
      get { return conceptId_; }
      set {
        conceptId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "page" field.</summary>
    public const int PageFieldNumber = 3;
    private uint page_;
    /// <summary>
    /// (optional URL parameter) The page number. Pagination is used to split the results into chunks.
    /// Defaults to 1.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Page {
      get { return page_; }
      set {
        page_ = value;
      }
    }

    /// <summary>Field number for the "per_page" field.</summary>
    public const int PerPageFieldNumber = 4;
    private uint perPage_;
    /// <summary>
    /// (optional URL parameter) The number of results that will be contained in each page. Defaults
    /// to 128.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint PerPage {
      get { return perPage_; }
      set {
        perPage_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListConceptLanguagesRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListConceptLanguagesRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserAppId, other.UserAppId)) return false;
      if (ConceptId != other.ConceptId) return false;
      if (Page != other.Page) return false;
      if (PerPage != other.PerPage) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (userAppId_ != null) hash ^= UserAppId.GetHashCode();
      if (ConceptId.Length != 0) hash ^= ConceptId.GetHashCode();
      if (Page != 0) hash ^= Page.GetHashCode();
      if (PerPage != 0) hash ^= PerPage.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (userAppId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserAppId);
      }
      if (ConceptId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ConceptId);
      }
      if (Page != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Page);
      }
      if (PerPage != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(PerPage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (userAppId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserAppId);
      }
      if (ConceptId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConceptId);
      }
      if (Page != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Page);
      }
      if (PerPage != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PerPage);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListConceptLanguagesRequest other) {
      if (other == null) {
        return;
      }
      if (other.userAppId_ != null) {
        if (userAppId_ == null) {
          UserAppId = new global::Clarifai.Api.UserAppIDSet();
        }
        UserAppId.MergeFrom(other.UserAppId);
      }
      if (other.ConceptId.Length != 0) {
        ConceptId = other.ConceptId;
      }
      if (other.Page != 0) {
        Page = other.Page;
      }
      if (other.PerPage != 0) {
        PerPage = other.PerPage;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (userAppId_ == null) {
              UserAppId = new global::Clarifai.Api.UserAppIDSet();
            }
            input.ReadMessage(UserAppId);
            break;
          }
          case 18: {
            ConceptId = input.ReadString();
            break;
          }
          case 24: {
            Page = input.ReadUInt32();
            break;
          }
          case 32: {
            PerPage = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// PATCH multiple concept languages for the given concept.
  /// </summary>
  public sealed partial class PatchConceptLanguagesRequest : pb::IMessage<PatchConceptLanguagesRequest> {
    private static readonly pb::MessageParser<PatchConceptLanguagesRequest> _parser = new pb::MessageParser<PatchConceptLanguagesRequest>(() => new PatchConceptLanguagesRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PatchConceptLanguagesRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[50]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PatchConceptLanguagesRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PatchConceptLanguagesRequest(PatchConceptLanguagesRequest other) : this() {
      userAppId_ = other.userAppId_ != null ? other.userAppId_.Clone() : null;
      conceptId_ = other.conceptId_;
      conceptLanguages_ = other.conceptLanguages_.Clone();
      action_ = other.action_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PatchConceptLanguagesRequest Clone() {
      return new PatchConceptLanguagesRequest(this);
    }

    /// <summary>Field number for the "user_app_id" field.</summary>
    public const int UserAppIdFieldNumber = 1;
    private global::Clarifai.Api.UserAppIDSet userAppId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.UserAppIDSet UserAppId {
      get { return userAppId_; }
      set {
        userAppId_ = value;
      }
    }

    /// <summary>Field number for the "concept_id" field.</summary>
    public const int ConceptIdFieldNumber = 2;
    private string conceptId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConceptId {
      get { return conceptId_; }
      set {
        conceptId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "concept_languages" field.</summary>
    public const int ConceptLanguagesFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Clarifai.Api.ConceptLanguage> _repeated_conceptLanguages_codec
        = pb::FieldCodec.ForMessage(26, global::Clarifai.Api.ConceptLanguage.Parser);
    private readonly pbc::RepeatedField<global::Clarifai.Api.ConceptLanguage> conceptLanguages_ = new pbc::RepeatedField<global::Clarifai.Api.ConceptLanguage>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Clarifai.Api.ConceptLanguage> ConceptLanguages {
      get { return conceptLanguages_; }
    }

    /// <summary>Field number for the "action" field.</summary>
    public const int ActionFieldNumber = 4;
    private string action_ = "";
    /// <summary>
    /// The action to perform with the objects in the PATCH.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Action {
      get { return action_; }
      set {
        action_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PatchConceptLanguagesRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PatchConceptLanguagesRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserAppId, other.UserAppId)) return false;
      if (ConceptId != other.ConceptId) return false;
      if(!conceptLanguages_.Equals(other.conceptLanguages_)) return false;
      if (Action != other.Action) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (userAppId_ != null) hash ^= UserAppId.GetHashCode();
      if (ConceptId.Length != 0) hash ^= ConceptId.GetHashCode();
      hash ^= conceptLanguages_.GetHashCode();
      if (Action.Length != 0) hash ^= Action.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (userAppId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserAppId);
      }
      if (ConceptId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ConceptId);
      }
      conceptLanguages_.WriteTo(output, _repeated_conceptLanguages_codec);
      if (Action.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Action);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (userAppId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserAppId);
      }
      if (ConceptId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConceptId);
      }
      size += conceptLanguages_.CalculateSize(_repeated_conceptLanguages_codec);
      if (Action.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Action);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PatchConceptLanguagesRequest other) {
      if (other == null) {
        return;
      }
      if (other.userAppId_ != null) {
        if (userAppId_ == null) {
          UserAppId = new global::Clarifai.Api.UserAppIDSet();
        }
        UserAppId.MergeFrom(other.UserAppId);
      }
      if (other.ConceptId.Length != 0) {
        ConceptId = other.ConceptId;
      }
      conceptLanguages_.Add(other.conceptLanguages_);
      if (other.Action.Length != 0) {
        Action = other.Action;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (userAppId_ == null) {
              UserAppId = new global::Clarifai.Api.UserAppIDSet();
            }
            input.ReadMessage(UserAppId);
            break;
          }
          case 18: {
            ConceptId = input.ReadString();
            break;
          }
          case 26: {
            conceptLanguages_.AddEntriesFrom(input, _repeated_conceptLanguages_codec);
            break;
          }
          case 34: {
            Action = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// POST multiple concept languages for the given concept.
  /// </summary>
  public sealed partial class PostConceptLanguagesRequest : pb::IMessage<PostConceptLanguagesRequest> {
    private static readonly pb::MessageParser<PostConceptLanguagesRequest> _parser = new pb::MessageParser<PostConceptLanguagesRequest>(() => new PostConceptLanguagesRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PostConceptLanguagesRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[51]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostConceptLanguagesRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostConceptLanguagesRequest(PostConceptLanguagesRequest other) : this() {
      userAppId_ = other.userAppId_ != null ? other.userAppId_.Clone() : null;
      conceptId_ = other.conceptId_;
      conceptLanguages_ = other.conceptLanguages_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostConceptLanguagesRequest Clone() {
      return new PostConceptLanguagesRequest(this);
    }

    /// <summary>Field number for the "user_app_id" field.</summary>
    public const int UserAppIdFieldNumber = 1;
    private global::Clarifai.Api.UserAppIDSet userAppId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.UserAppIDSet UserAppId {
      get { return userAppId_; }
      set {
        userAppId_ = value;
      }
    }

    /// <summary>Field number for the "concept_id" field.</summary>
    public const int ConceptIdFieldNumber = 2;
    private string conceptId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConceptId {
      get { return conceptId_; }
      set {
        conceptId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "concept_languages" field.</summary>
    public const int ConceptLanguagesFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Clarifai.Api.ConceptLanguage> _repeated_conceptLanguages_codec
        = pb::FieldCodec.ForMessage(26, global::Clarifai.Api.ConceptLanguage.Parser);
    private readonly pbc::RepeatedField<global::Clarifai.Api.ConceptLanguage> conceptLanguages_ = new pbc::RepeatedField<global::Clarifai.Api.ConceptLanguage>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Clarifai.Api.ConceptLanguage> ConceptLanguages {
      get { return conceptLanguages_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PostConceptLanguagesRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PostConceptLanguagesRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserAppId, other.UserAppId)) return false;
      if (ConceptId != other.ConceptId) return false;
      if(!conceptLanguages_.Equals(other.conceptLanguages_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (userAppId_ != null) hash ^= UserAppId.GetHashCode();
      if (ConceptId.Length != 0) hash ^= ConceptId.GetHashCode();
      hash ^= conceptLanguages_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (userAppId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserAppId);
      }
      if (ConceptId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ConceptId);
      }
      conceptLanguages_.WriteTo(output, _repeated_conceptLanguages_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (userAppId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserAppId);
      }
      if (ConceptId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConceptId);
      }
      size += conceptLanguages_.CalculateSize(_repeated_conceptLanguages_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PostConceptLanguagesRequest other) {
      if (other == null) {
        return;
      }
      if (other.userAppId_ != null) {
        if (userAppId_ == null) {
          UserAppId = new global::Clarifai.Api.UserAppIDSet();
        }
        UserAppId.MergeFrom(other.UserAppId);
      }
      if (other.ConceptId.Length != 0) {
        ConceptId = other.ConceptId;
      }
      conceptLanguages_.Add(other.conceptLanguages_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (userAppId_ == null) {
              UserAppId = new global::Clarifai.Api.UserAppIDSet();
            }
            input.ReadMessage(UserAppId);
            break;
          }
          case 18: {
            ConceptId = input.ReadString();
            break;
          }
          case 26: {
            conceptLanguages_.AddEntriesFrom(input, _repeated_conceptLanguages_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SingleConceptLanguageResponse : pb::IMessage<SingleConceptLanguageResponse> {
    private static readonly pb::MessageParser<SingleConceptLanguageResponse> _parser = new pb::MessageParser<SingleConceptLanguageResponse>(() => new SingleConceptLanguageResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SingleConceptLanguageResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[52]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SingleConceptLanguageResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SingleConceptLanguageResponse(SingleConceptLanguageResponse other) : this() {
      status_ = other.status_ != null ? other.status_.Clone() : null;
      conceptLanguage_ = other.conceptLanguage_ != null ? other.conceptLanguage_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SingleConceptLanguageResponse Clone() {
      return new SingleConceptLanguageResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::Clarifai.Api.Status.Status status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.Status.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "concept_language" field.</summary>
    public const int ConceptLanguageFieldNumber = 2;
    private global::Clarifai.Api.ConceptLanguage conceptLanguage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.ConceptLanguage ConceptLanguage {
      get { return conceptLanguage_; }
      set {
        conceptLanguage_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SingleConceptLanguageResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SingleConceptLanguageResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Status, other.Status)) return false;
      if (!object.Equals(ConceptLanguage, other.ConceptLanguage)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (status_ != null) hash ^= Status.GetHashCode();
      if (conceptLanguage_ != null) hash ^= ConceptLanguage.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (status_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Status);
      }
      if (conceptLanguage_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ConceptLanguage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      if (conceptLanguage_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ConceptLanguage);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SingleConceptLanguageResponse other) {
      if (other == null) {
        return;
      }
      if (other.status_ != null) {
        if (status_ == null) {
          Status = new global::Clarifai.Api.Status.Status();
        }
        Status.MergeFrom(other.Status);
      }
      if (other.conceptLanguage_ != null) {
        if (conceptLanguage_ == null) {
          ConceptLanguage = new global::Clarifai.Api.ConceptLanguage();
        }
        ConceptLanguage.MergeFrom(other.ConceptLanguage);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (status_ == null) {
              Status = new global::Clarifai.Api.Status.Status();
            }
            input.ReadMessage(Status);
            break;
          }
          case 18: {
            if (conceptLanguage_ == null) {
              ConceptLanguage = new global::Clarifai.Api.ConceptLanguage();
            }
            input.ReadMessage(ConceptLanguage);
            break;
          }
        }
      }
    }

  }

  public sealed partial class MultiConceptLanguageResponse : pb::IMessage<MultiConceptLanguageResponse> {
    private static readonly pb::MessageParser<MultiConceptLanguageResponse> _parser = new pb::MessageParser<MultiConceptLanguageResponse>(() => new MultiConceptLanguageResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MultiConceptLanguageResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[53]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiConceptLanguageResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiConceptLanguageResponse(MultiConceptLanguageResponse other) : this() {
      status_ = other.status_ != null ? other.status_.Clone() : null;
      conceptLanguages_ = other.conceptLanguages_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiConceptLanguageResponse Clone() {
      return new MultiConceptLanguageResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::Clarifai.Api.Status.Status status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.Status.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "concept_languages" field.</summary>
    public const int ConceptLanguagesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Clarifai.Api.ConceptLanguage> _repeated_conceptLanguages_codec
        = pb::FieldCodec.ForMessage(18, global::Clarifai.Api.ConceptLanguage.Parser);
    private readonly pbc::RepeatedField<global::Clarifai.Api.ConceptLanguage> conceptLanguages_ = new pbc::RepeatedField<global::Clarifai.Api.ConceptLanguage>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Clarifai.Api.ConceptLanguage> ConceptLanguages {
      get { return conceptLanguages_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MultiConceptLanguageResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MultiConceptLanguageResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Status, other.Status)) return false;
      if(!conceptLanguages_.Equals(other.conceptLanguages_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (status_ != null) hash ^= Status.GetHashCode();
      hash ^= conceptLanguages_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (status_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Status);
      }
      conceptLanguages_.WriteTo(output, _repeated_conceptLanguages_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      size += conceptLanguages_.CalculateSize(_repeated_conceptLanguages_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MultiConceptLanguageResponse other) {
      if (other == null) {
        return;
      }
      if (other.status_ != null) {
        if (status_ == null) {
          Status = new global::Clarifai.Api.Status.Status();
        }
        Status.MergeFrom(other.Status);
      }
      conceptLanguages_.Add(other.conceptLanguages_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (status_ == null) {
              Status = new global::Clarifai.Api.Status.Status();
            }
            input.ReadMessage(Status);
            break;
          }
          case 18: {
            conceptLanguages_.AddEntriesFrom(input, _repeated_conceptLanguages_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /////////////////////////////////////////////////////////////////////////////////
  /// Requests / Responses from /proto/clarifai/api/input.proto
  /////////////////////////////////////////////////////////////////////////////////
  /// </summary>
  public sealed partial class GetInputRequest : pb::IMessage<GetInputRequest> {
    private static readonly pb::MessageParser<GetInputRequest> _parser = new pb::MessageParser<GetInputRequest>(() => new GetInputRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetInputRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[54]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetInputRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetInputRequest(GetInputRequest other) : this() {
      userAppId_ = other.userAppId_ != null ? other.userAppId_.Clone() : null;
      inputId_ = other.inputId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetInputRequest Clone() {
      return new GetInputRequest(this);
    }

    /// <summary>Field number for the "user_app_id" field.</summary>
    public const int UserAppIdFieldNumber = 1;
    private global::Clarifai.Api.UserAppIDSet userAppId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.UserAppIDSet UserAppId {
      get { return userAppId_; }
      set {
        userAppId_ = value;
      }
    }

    /// <summary>Field number for the "input_id" field.</summary>
    public const int InputIdFieldNumber = 2;
    private string inputId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string InputId {
      get { return inputId_; }
      set {
        inputId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetInputRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetInputRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserAppId, other.UserAppId)) return false;
      if (InputId != other.InputId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (userAppId_ != null) hash ^= UserAppId.GetHashCode();
      if (InputId.Length != 0) hash ^= InputId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (userAppId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserAppId);
      }
      if (InputId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(InputId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (userAppId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserAppId);
      }
      if (InputId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InputId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetInputRequest other) {
      if (other == null) {
        return;
      }
      if (other.userAppId_ != null) {
        if (userAppId_ == null) {
          UserAppId = new global::Clarifai.Api.UserAppIDSet();
        }
        UserAppId.MergeFrom(other.UserAppId);
      }
      if (other.InputId.Length != 0) {
        InputId = other.InputId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (userAppId_ == null) {
              UserAppId = new global::Clarifai.Api.UserAppIDSet();
            }
            input.ReadMessage(UserAppId);
            break;
          }
          case 18: {
            InputId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetInputSamplesRequest : pb::IMessage<GetInputSamplesRequest> {
    private static readonly pb::MessageParser<GetInputSamplesRequest> _parser = new pb::MessageParser<GetInputSamplesRequest>(() => new GetInputSamplesRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetInputSamplesRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[55]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetInputSamplesRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetInputSamplesRequest(GetInputSamplesRequest other) : this() {
      userAppId_ = other.userAppId_ != null ? other.userAppId_.Clone() : null;
      taskId_ = other.taskId_;
      userIds_ = other.userIds_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetInputSamplesRequest Clone() {
      return new GetInputSamplesRequest(this);
    }

    /// <summary>Field number for the "user_app_id" field.</summary>
    public const int UserAppIdFieldNumber = 1;
    private global::Clarifai.Api.UserAppIDSet userAppId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.UserAppIDSet UserAppId {
      get { return userAppId_; }
      set {
        userAppId_ = value;
      }
    }

    /// <summary>Field number for the "task_id" field.</summary>
    public const int TaskIdFieldNumber = 2;
    private string taskId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TaskId {
      get { return taskId_; }
      set {
        taskId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "user_ids" field.</summary>
    public const int UserIdsFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_userIds_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> userIds_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// URL param. If zero ids provided, returns for all task labelers
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> UserIds {
      get { return userIds_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetInputSamplesRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetInputSamplesRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserAppId, other.UserAppId)) return false;
      if (TaskId != other.TaskId) return false;
      if(!userIds_.Equals(other.userIds_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (userAppId_ != null) hash ^= UserAppId.GetHashCode();
      if (TaskId.Length != 0) hash ^= TaskId.GetHashCode();
      hash ^= userIds_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (userAppId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserAppId);
      }
      if (TaskId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(TaskId);
      }
      userIds_.WriteTo(output, _repeated_userIds_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (userAppId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserAppId);
      }
      if (TaskId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TaskId);
      }
      size += userIds_.CalculateSize(_repeated_userIds_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetInputSamplesRequest other) {
      if (other == null) {
        return;
      }
      if (other.userAppId_ != null) {
        if (userAppId_ == null) {
          UserAppId = new global::Clarifai.Api.UserAppIDSet();
        }
        UserAppId.MergeFrom(other.UserAppId);
      }
      if (other.TaskId.Length != 0) {
        TaskId = other.TaskId;
      }
      userIds_.Add(other.userIds_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (userAppId_ == null) {
              UserAppId = new global::Clarifai.Api.UserAppIDSet();
            }
            input.ReadMessage(UserAppId);
            break;
          }
          case 18: {
            TaskId = input.ReadString();
            break;
          }
          case 26: {
            userIds_.AddEntriesFrom(input, _repeated_userIds_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ListInputsRequest : pb::IMessage<ListInputsRequest> {
    private static readonly pb::MessageParser<ListInputsRequest> _parser = new pb::MessageParser<ListInputsRequest>(() => new ListInputsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListInputsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[56]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListInputsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListInputsRequest(ListInputsRequest other) : this() {
      userAppId_ = other.userAppId_ != null ? other.userAppId_.Clone() : null;
      page_ = other.page_;
      perPage_ = other.perPage_;
      status_ = other.status_ != null ? other.status_.Clone() : null;
      ids_ = other.ids_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListInputsRequest Clone() {
      return new ListInputsRequest(this);
    }

    /// <summary>Field number for the "user_app_id" field.</summary>
    public const int UserAppIdFieldNumber = 1;
    private global::Clarifai.Api.UserAppIDSet userAppId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.UserAppIDSet UserAppId {
      get { return userAppId_; }
      set {
        userAppId_ = value;
      }
    }

    /// <summary>Field number for the "page" field.</summary>
    public const int PageFieldNumber = 2;
    private uint page_;
    /// <summary>
    /// (optional URL parameter) The page number. Pagination is used to split the results into chunks.
    /// Defaults to 1.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Page {
      get { return page_; }
      set {
        page_ = value;
      }
    }

    /// <summary>Field number for the "per_page" field.</summary>
    public const int PerPageFieldNumber = 3;
    private uint perPage_;
    /// <summary>
    /// (optional URL parameter) The number of results that will be contained in each page. Defaults
    /// to 128.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint PerPage {
      get { return perPage_; }
      set {
        perPage_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 5;
    private global::Clarifai.Api.Status.Status status_;
    /// <summary>
    /// Set status to filter by status
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.Status.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "ids" field.</summary>
    public const int IdsFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _repeated_ids_codec
        = pb::FieldCodec.ForString(34);
    private readonly pbc::RepeatedField<string> ids_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Ids {
      get { return ids_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListInputsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListInputsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserAppId, other.UserAppId)) return false;
      if (Page != other.Page) return false;
      if (PerPage != other.PerPage) return false;
      if (!object.Equals(Status, other.Status)) return false;
      if(!ids_.Equals(other.ids_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (userAppId_ != null) hash ^= UserAppId.GetHashCode();
      if (Page != 0) hash ^= Page.GetHashCode();
      if (PerPage != 0) hash ^= PerPage.GetHashCode();
      if (status_ != null) hash ^= Status.GetHashCode();
      hash ^= ids_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (userAppId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserAppId);
      }
      if (Page != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Page);
      }
      if (PerPage != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(PerPage);
      }
      ids_.WriteTo(output, _repeated_ids_codec);
      if (status_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (userAppId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserAppId);
      }
      if (Page != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Page);
      }
      if (PerPage != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PerPage);
      }
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      size += ids_.CalculateSize(_repeated_ids_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListInputsRequest other) {
      if (other == null) {
        return;
      }
      if (other.userAppId_ != null) {
        if (userAppId_ == null) {
          UserAppId = new global::Clarifai.Api.UserAppIDSet();
        }
        UserAppId.MergeFrom(other.UserAppId);
      }
      if (other.Page != 0) {
        Page = other.Page;
      }
      if (other.PerPage != 0) {
        PerPage = other.PerPage;
      }
      if (other.status_ != null) {
        if (status_ == null) {
          Status = new global::Clarifai.Api.Status.Status();
        }
        Status.MergeFrom(other.Status);
      }
      ids_.Add(other.ids_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (userAppId_ == null) {
              UserAppId = new global::Clarifai.Api.UserAppIDSet();
            }
            input.ReadMessage(UserAppId);
            break;
          }
          case 16: {
            Page = input.ReadUInt32();
            break;
          }
          case 24: {
            PerPage = input.ReadUInt32();
            break;
          }
          case 34: {
            ids_.AddEntriesFrom(input, _repeated_ids_codec);
            break;
          }
          case 42: {
            if (status_ == null) {
              Status = new global::Clarifai.Api.Status.Status();
            }
            input.ReadMessage(Status);
            break;
          }
        }
      }
    }

  }

  public sealed partial class StreamInputsRequest : pb::IMessage<StreamInputsRequest> {
    private static readonly pb::MessageParser<StreamInputsRequest> _parser = new pb::MessageParser<StreamInputsRequest>(() => new StreamInputsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StreamInputsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[57]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamInputsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamInputsRequest(StreamInputsRequest other) : this() {
      userAppId_ = other.userAppId_ != null ? other.userAppId_.Clone() : null;
      perPage_ = other.perPage_;
      lastId_ = other.lastId_;
      descending_ = other.descending_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamInputsRequest Clone() {
      return new StreamInputsRequest(this);
    }

    /// <summary>Field number for the "user_app_id" field.</summary>
    public const int UserAppIdFieldNumber = 1;
    private global::Clarifai.Api.UserAppIDSet userAppId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.UserAppIDSet UserAppId {
      get { return userAppId_; }
      set {
        userAppId_ = value;
      }
    }

    /// <summary>Field number for the "per_page" field.</summary>
    public const int PerPageFieldNumber = 2;
    private uint perPage_;
    /// <summary>
    /// (optional URL parameter) The number of results that will be contained in each page. Defaults
    /// to 20.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint PerPage {
      get { return perPage_; }
      set {
        perPage_ = value;
      }
    }

    /// <summary>Field number for the "last_id" field.</summary>
    public const int LastIdFieldNumber = 3;
    private string lastId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LastId {
      get { return lastId_; }
      set {
        lastId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "descending" field.</summary>
    public const int DescendingFieldNumber = 4;
    private bool descending_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Descending {
      get { return descending_; }
      set {
        descending_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StreamInputsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StreamInputsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserAppId, other.UserAppId)) return false;
      if (PerPage != other.PerPage) return false;
      if (LastId != other.LastId) return false;
      if (Descending != other.Descending) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (userAppId_ != null) hash ^= UserAppId.GetHashCode();
      if (PerPage != 0) hash ^= PerPage.GetHashCode();
      if (LastId.Length != 0) hash ^= LastId.GetHashCode();
      if (Descending != false) hash ^= Descending.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (userAppId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserAppId);
      }
      if (PerPage != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(PerPage);
      }
      if (LastId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(LastId);
      }
      if (Descending != false) {
        output.WriteRawTag(32);
        output.WriteBool(Descending);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (userAppId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserAppId);
      }
      if (PerPage != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PerPage);
      }
      if (LastId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LastId);
      }
      if (Descending != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StreamInputsRequest other) {
      if (other == null) {
        return;
      }
      if (other.userAppId_ != null) {
        if (userAppId_ == null) {
          UserAppId = new global::Clarifai.Api.UserAppIDSet();
        }
        UserAppId.MergeFrom(other.UserAppId);
      }
      if (other.PerPage != 0) {
        PerPage = other.PerPage;
      }
      if (other.LastId.Length != 0) {
        LastId = other.LastId;
      }
      if (other.Descending != false) {
        Descending = other.Descending;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (userAppId_ == null) {
              UserAppId = new global::Clarifai.Api.UserAppIDSet();
            }
            input.ReadMessage(UserAppId);
            break;
          }
          case 16: {
            PerPage = input.ReadUInt32();
            break;
          }
          case 26: {
            LastId = input.ReadString();
            break;
          }
          case 32: {
            Descending = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PostInputsRequest : pb::IMessage<PostInputsRequest> {
    private static readonly pb::MessageParser<PostInputsRequest> _parser = new pb::MessageParser<PostInputsRequest>(() => new PostInputsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PostInputsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[58]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostInputsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostInputsRequest(PostInputsRequest other) : this() {
      userAppId_ = other.userAppId_ != null ? other.userAppId_.Clone() : null;
      inputs_ = other.inputs_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostInputsRequest Clone() {
      return new PostInputsRequest(this);
    }

    /// <summary>Field number for the "user_app_id" field.</summary>
    public const int UserAppIdFieldNumber = 1;
    private global::Clarifai.Api.UserAppIDSet userAppId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.UserAppIDSet UserAppId {
      get { return userAppId_; }
      set {
        userAppId_ = value;
      }
    }

    /// <summary>Field number for the "inputs" field.</summary>
    public const int InputsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Clarifai.Api.Input> _repeated_inputs_codec
        = pb::FieldCodec.ForMessage(18, global::Clarifai.Api.Input.Parser);
    private readonly pbc::RepeatedField<global::Clarifai.Api.Input> inputs_ = new pbc::RepeatedField<global::Clarifai.Api.Input>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Clarifai.Api.Input> Inputs {
      get { return inputs_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PostInputsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PostInputsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserAppId, other.UserAppId)) return false;
      if(!inputs_.Equals(other.inputs_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (userAppId_ != null) hash ^= UserAppId.GetHashCode();
      hash ^= inputs_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (userAppId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserAppId);
      }
      inputs_.WriteTo(output, _repeated_inputs_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (userAppId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserAppId);
      }
      size += inputs_.CalculateSize(_repeated_inputs_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PostInputsRequest other) {
      if (other == null) {
        return;
      }
      if (other.userAppId_ != null) {
        if (userAppId_ == null) {
          UserAppId = new global::Clarifai.Api.UserAppIDSet();
        }
        UserAppId.MergeFrom(other.UserAppId);
      }
      inputs_.Add(other.inputs_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (userAppId_ == null) {
              UserAppId = new global::Clarifai.Api.UserAppIDSet();
            }
            input.ReadMessage(UserAppId);
            break;
          }
          case 18: {
            inputs_.AddEntriesFrom(input, _repeated_inputs_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PatchInputsRequest : pb::IMessage<PatchInputsRequest> {
    private static readonly pb::MessageParser<PatchInputsRequest> _parser = new pb::MessageParser<PatchInputsRequest>(() => new PatchInputsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PatchInputsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[59]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PatchInputsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PatchInputsRequest(PatchInputsRequest other) : this() {
      userAppId_ = other.userAppId_ != null ? other.userAppId_.Clone() : null;
      inputs_ = other.inputs_.Clone();
      action_ = other.action_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PatchInputsRequest Clone() {
      return new PatchInputsRequest(this);
    }

    /// <summary>Field number for the "user_app_id" field.</summary>
    public const int UserAppIdFieldNumber = 1;
    private global::Clarifai.Api.UserAppIDSet userAppId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.UserAppIDSet UserAppId {
      get { return userAppId_; }
      set {
        userAppId_ = value;
      }
    }

    /// <summary>Field number for the "inputs" field.</summary>
    public const int InputsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Clarifai.Api.Input> _repeated_inputs_codec
        = pb::FieldCodec.ForMessage(18, global::Clarifai.Api.Input.Parser);
    private readonly pbc::RepeatedField<global::Clarifai.Api.Input> inputs_ = new pbc::RepeatedField<global::Clarifai.Api.Input>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Clarifai.Api.Input> Inputs {
      get { return inputs_; }
    }

    /// <summary>Field number for the "action" field.</summary>
    public const int ActionFieldNumber = 3;
    private string action_ = "";
    /// <summary>
    /// The action to perform on the patched objects
    /// For now actions 'merge', 'overwrite', and 'remove' are supported
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Action {
      get { return action_; }
      set {
        action_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PatchInputsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PatchInputsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserAppId, other.UserAppId)) return false;
      if(!inputs_.Equals(other.inputs_)) return false;
      if (Action != other.Action) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (userAppId_ != null) hash ^= UserAppId.GetHashCode();
      hash ^= inputs_.GetHashCode();
      if (Action.Length != 0) hash ^= Action.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (userAppId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserAppId);
      }
      inputs_.WriteTo(output, _repeated_inputs_codec);
      if (Action.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Action);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (userAppId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserAppId);
      }
      size += inputs_.CalculateSize(_repeated_inputs_codec);
      if (Action.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Action);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PatchInputsRequest other) {
      if (other == null) {
        return;
      }
      if (other.userAppId_ != null) {
        if (userAppId_ == null) {
          UserAppId = new global::Clarifai.Api.UserAppIDSet();
        }
        UserAppId.MergeFrom(other.UserAppId);
      }
      inputs_.Add(other.inputs_);
      if (other.Action.Length != 0) {
        Action = other.Action;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (userAppId_ == null) {
              UserAppId = new global::Clarifai.Api.UserAppIDSet();
            }
            input.ReadMessage(UserAppId);
            break;
          }
          case 18: {
            inputs_.AddEntriesFrom(input, _repeated_inputs_codec);
            break;
          }
          case 26: {
            Action = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DeleteInputRequest : pb::IMessage<DeleteInputRequest> {
    private static readonly pb::MessageParser<DeleteInputRequest> _parser = new pb::MessageParser<DeleteInputRequest>(() => new DeleteInputRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteInputRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[60]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteInputRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteInputRequest(DeleteInputRequest other) : this() {
      userAppId_ = other.userAppId_ != null ? other.userAppId_.Clone() : null;
      inputId_ = other.inputId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteInputRequest Clone() {
      return new DeleteInputRequest(this);
    }

    /// <summary>Field number for the "user_app_id" field.</summary>
    public const int UserAppIdFieldNumber = 1;
    private global::Clarifai.Api.UserAppIDSet userAppId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.UserAppIDSet UserAppId {
      get { return userAppId_; }
      set {
        userAppId_ = value;
      }
    }

    /// <summary>Field number for the "input_id" field.</summary>
    public const int InputIdFieldNumber = 2;
    private string inputId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string InputId {
      get { return inputId_; }
      set {
        inputId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteInputRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteInputRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserAppId, other.UserAppId)) return false;
      if (InputId != other.InputId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (userAppId_ != null) hash ^= UserAppId.GetHashCode();
      if (InputId.Length != 0) hash ^= InputId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (userAppId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserAppId);
      }
      if (InputId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(InputId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (userAppId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserAppId);
      }
      if (InputId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InputId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteInputRequest other) {
      if (other == null) {
        return;
      }
      if (other.userAppId_ != null) {
        if (userAppId_ == null) {
          UserAppId = new global::Clarifai.Api.UserAppIDSet();
        }
        UserAppId.MergeFrom(other.UserAppId);
      }
      if (other.InputId.Length != 0) {
        InputId = other.InputId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (userAppId_ == null) {
              UserAppId = new global::Clarifai.Api.UserAppIDSet();
            }
            input.ReadMessage(UserAppId);
            break;
          }
          case 18: {
            InputId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Request to delete several things by the list of ids.
  /// </summary>
  public sealed partial class DeleteInputsRequest : pb::IMessage<DeleteInputsRequest> {
    private static readonly pb::MessageParser<DeleteInputsRequest> _parser = new pb::MessageParser<DeleteInputsRequest>(() => new DeleteInputsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteInputsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[61]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteInputsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteInputsRequest(DeleteInputsRequest other) : this() {
      userAppId_ = other.userAppId_ != null ? other.userAppId_.Clone() : null;
      ids_ = other.ids_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteInputsRequest Clone() {
      return new DeleteInputsRequest(this);
    }

    /// <summary>Field number for the "user_app_id" field.</summary>
    public const int UserAppIdFieldNumber = 1;
    private global::Clarifai.Api.UserAppIDSet userAppId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.UserAppIDSet UserAppId {
      get { return userAppId_; }
      set {
        userAppId_ = value;
      }
    }

    /// <summary>Field number for the "ids" field.</summary>
    public const int IdsFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_ids_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> ids_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Ids {
      get { return ids_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteInputsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteInputsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserAppId, other.UserAppId)) return false;
      if(!ids_.Equals(other.ids_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (userAppId_ != null) hash ^= UserAppId.GetHashCode();
      hash ^= ids_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (userAppId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserAppId);
      }
      ids_.WriteTo(output, _repeated_ids_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (userAppId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserAppId);
      }
      size += ids_.CalculateSize(_repeated_ids_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteInputsRequest other) {
      if (other == null) {
        return;
      }
      if (other.userAppId_ != null) {
        if (userAppId_ == null) {
          UserAppId = new global::Clarifai.Api.UserAppIDSet();
        }
        UserAppId.MergeFrom(other.UserAppId);
      }
      ids_.Add(other.ids_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (userAppId_ == null) {
              UserAppId = new global::Clarifai.Api.UserAppIDSet();
            }
            input.ReadMessage(UserAppId);
            break;
          }
          case 18: {
            ids_.AddEntriesFrom(input, _repeated_ids_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SingleInputResponse : pb::IMessage<SingleInputResponse> {
    private static readonly pb::MessageParser<SingleInputResponse> _parser = new pb::MessageParser<SingleInputResponse>(() => new SingleInputResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SingleInputResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[62]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SingleInputResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SingleInputResponse(SingleInputResponse other) : this() {
      status_ = other.status_ != null ? other.status_.Clone() : null;
      input_ = other.input_ != null ? other.input_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SingleInputResponse Clone() {
      return new SingleInputResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::Clarifai.Api.Status.Status status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.Status.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "input" field.</summary>
    public const int InputFieldNumber = 2;
    private global::Clarifai.Api.Input input_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.Input Input {
      get { return input_; }
      set {
        input_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SingleInputResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SingleInputResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Status, other.Status)) return false;
      if (!object.Equals(Input, other.Input)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (status_ != null) hash ^= Status.GetHashCode();
      if (input_ != null) hash ^= Input.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (status_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Status);
      }
      if (input_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Input);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      if (input_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Input);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SingleInputResponse other) {
      if (other == null) {
        return;
      }
      if (other.status_ != null) {
        if (status_ == null) {
          Status = new global::Clarifai.Api.Status.Status();
        }
        Status.MergeFrom(other.Status);
      }
      if (other.input_ != null) {
        if (input_ == null) {
          Input = new global::Clarifai.Api.Input();
        }
        Input.MergeFrom(other.Input);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (status_ == null) {
              Status = new global::Clarifai.Api.Status.Status();
            }
            input.ReadMessage(Status);
            break;
          }
          case 18: {
            if (input_ == null) {
              Input = new global::Clarifai.Api.Input();
            }
            input.ReadMessage(Input);
            break;
          }
        }
      }
    }

  }

  public sealed partial class MultiInputResponse : pb::IMessage<MultiInputResponse> {
    private static readonly pb::MessageParser<MultiInputResponse> _parser = new pb::MessageParser<MultiInputResponse>(() => new MultiInputResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MultiInputResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[63]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiInputResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiInputResponse(MultiInputResponse other) : this() {
      status_ = other.status_ != null ? other.status_.Clone() : null;
      inputs_ = other.inputs_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiInputResponse Clone() {
      return new MultiInputResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::Clarifai.Api.Status.Status status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.Status.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "inputs" field.</summary>
    public const int InputsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Clarifai.Api.Input> _repeated_inputs_codec
        = pb::FieldCodec.ForMessage(18, global::Clarifai.Api.Input.Parser);
    private readonly pbc::RepeatedField<global::Clarifai.Api.Input> inputs_ = new pbc::RepeatedField<global::Clarifai.Api.Input>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Clarifai.Api.Input> Inputs {
      get { return inputs_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MultiInputResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MultiInputResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Status, other.Status)) return false;
      if(!inputs_.Equals(other.inputs_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (status_ != null) hash ^= Status.GetHashCode();
      hash ^= inputs_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (status_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Status);
      }
      inputs_.WriteTo(output, _repeated_inputs_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      size += inputs_.CalculateSize(_repeated_inputs_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MultiInputResponse other) {
      if (other == null) {
        return;
      }
      if (other.status_ != null) {
        if (status_ == null) {
          Status = new global::Clarifai.Api.Status.Status();
        }
        Status.MergeFrom(other.Status);
      }
      inputs_.Add(other.inputs_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (status_ == null) {
              Status = new global::Clarifai.Api.Status.Status();
            }
            input.ReadMessage(Status);
            break;
          }
          case 18: {
            inputs_.AddEntriesFrom(input, _repeated_inputs_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class MultiInputAnnotationResponse : pb::IMessage<MultiInputAnnotationResponse> {
    private static readonly pb::MessageParser<MultiInputAnnotationResponse> _parser = new pb::MessageParser<MultiInputAnnotationResponse>(() => new MultiInputAnnotationResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MultiInputAnnotationResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[64]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiInputAnnotationResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiInputAnnotationResponse(MultiInputAnnotationResponse other) : this() {
      status_ = other.status_ != null ? other.status_.Clone() : null;
      hits_ = other.hits_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiInputAnnotationResponse Clone() {
      return new MultiInputAnnotationResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::Clarifai.Api.Status.Status status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.Status.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "hits" field.</summary>
    public const int HitsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Clarifai.Api.Hit> _repeated_hits_codec
        = pb::FieldCodec.ForMessage(26, global::Clarifai.Api.Hit.Parser);
    private readonly pbc::RepeatedField<global::Clarifai.Api.Hit> hits_ = new pbc::RepeatedField<global::Clarifai.Api.Hit>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Clarifai.Api.Hit> Hits {
      get { return hits_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MultiInputAnnotationResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MultiInputAnnotationResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Status, other.Status)) return false;
      if(!hits_.Equals(other.hits_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (status_ != null) hash ^= Status.GetHashCode();
      hash ^= hits_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (status_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Status);
      }
      hits_.WriteTo(output, _repeated_hits_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      size += hits_.CalculateSize(_repeated_hits_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MultiInputAnnotationResponse other) {
      if (other == null) {
        return;
      }
      if (other.status_ != null) {
        if (status_ == null) {
          Status = new global::Clarifai.Api.Status.Status();
        }
        Status.MergeFrom(other.Status);
      }
      hits_.Add(other.hits_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (status_ == null) {
              Status = new global::Clarifai.Api.Status.Status();
            }
            input.ReadMessage(Status);
            break;
          }
          case 26: {
            hits_.AddEntriesFrom(input, _repeated_hits_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SingleInputCountResponse : pb::IMessage<SingleInputCountResponse> {
    private static readonly pb::MessageParser<SingleInputCountResponse> _parser = new pb::MessageParser<SingleInputCountResponse>(() => new SingleInputCountResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SingleInputCountResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[65]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SingleInputCountResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SingleInputCountResponse(SingleInputCountResponse other) : this() {
      status_ = other.status_ != null ? other.status_.Clone() : null;
      counts_ = other.counts_ != null ? other.counts_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SingleInputCountResponse Clone() {
      return new SingleInputCountResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::Clarifai.Api.Status.Status status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.Status.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "counts" field.</summary>
    public const int CountsFieldNumber = 2;
    private global::Clarifai.Api.InputCount counts_;
    /// <summary>
    /// NOTE: inconsistency: not named after the object name.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.InputCount Counts {
      get { return counts_; }
      set {
        counts_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SingleInputCountResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SingleInputCountResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Status, other.Status)) return false;
      if (!object.Equals(Counts, other.Counts)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (status_ != null) hash ^= Status.GetHashCode();
      if (counts_ != null) hash ^= Counts.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (status_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Status);
      }
      if (counts_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Counts);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      if (counts_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Counts);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SingleInputCountResponse other) {
      if (other == null) {
        return;
      }
      if (other.status_ != null) {
        if (status_ == null) {
          Status = new global::Clarifai.Api.Status.Status();
        }
        Status.MergeFrom(other.Status);
      }
      if (other.counts_ != null) {
        if (counts_ == null) {
          Counts = new global::Clarifai.Api.InputCount();
        }
        Counts.MergeFrom(other.Counts);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (status_ == null) {
              Status = new global::Clarifai.Api.Status.Status();
            }
            input.ReadMessage(Status);
            break;
          }
          case 18: {
            if (counts_ == null) {
              Counts = new global::Clarifai.Api.InputCount();
            }
            input.ReadMessage(Counts);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetInputCountRequest : pb::IMessage<GetInputCountRequest> {
    private static readonly pb::MessageParser<GetInputCountRequest> _parser = new pb::MessageParser<GetInputCountRequest>(() => new GetInputCountRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetInputCountRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[66]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetInputCountRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetInputCountRequest(GetInputCountRequest other) : this() {
      userAppId_ = other.userAppId_ != null ? other.userAppId_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetInputCountRequest Clone() {
      return new GetInputCountRequest(this);
    }

    /// <summary>Field number for the "user_app_id" field.</summary>
    public const int UserAppIdFieldNumber = 1;
    private global::Clarifai.Api.UserAppIDSet userAppId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.UserAppIDSet UserAppId {
      get { return userAppId_; }
      set {
        userAppId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetInputCountRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetInputCountRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserAppId, other.UserAppId)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (userAppId_ != null) hash ^= UserAppId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (userAppId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserAppId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (userAppId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserAppId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetInputCountRequest other) {
      if (other == null) {
        return;
      }
      if (other.userAppId_ != null) {
        if (userAppId_ == null) {
          UserAppId = new global::Clarifai.Api.UserAppIDSet();
        }
        UserAppId.MergeFrom(other.UserAppId);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (userAppId_ == null) {
              UserAppId = new global::Clarifai.Api.UserAppIDSet();
            }
            input.ReadMessage(UserAppId);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /////////////////////////////////////////////////////
  /// Model prediction related stuff needs inputs and produces outputs.
  /////////////////////////////////////////////////////
  /// Model prediction.
  /// </summary>
  public sealed partial class PostModelOutputsRequest : pb::IMessage<PostModelOutputsRequest> {
    private static readonly pb::MessageParser<PostModelOutputsRequest> _parser = new pb::MessageParser<PostModelOutputsRequest>(() => new PostModelOutputsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PostModelOutputsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[67]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostModelOutputsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostModelOutputsRequest(PostModelOutputsRequest other) : this() {
      userAppId_ = other.userAppId_ != null ? other.userAppId_.Clone() : null;
      modelId_ = other.modelId_;
      versionId_ = other.versionId_;
      inputs_ = other.inputs_.Clone();
      model_ = other.model_ != null ? other.model_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostModelOutputsRequest Clone() {
      return new PostModelOutputsRequest(this);
    }

    /// <summary>Field number for the "user_app_id" field.</summary>
    public const int UserAppIdFieldNumber = 1;
    private global::Clarifai.Api.UserAppIDSet userAppId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.UserAppIDSet UserAppId {
      get { return userAppId_; }
      set {
        userAppId_ = value;
      }
    }

    /// <summary>Field number for the "model_id" field.</summary>
    public const int ModelIdFieldNumber = 2;
    private string modelId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModelId {
      get { return modelId_; }
      set {
        modelId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "version_id" field.</summary>
    public const int VersionIdFieldNumber = 3;
    private string versionId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string VersionId {
      get { return versionId_; }
      set {
        versionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "inputs" field.</summary>
    public const int InputsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Clarifai.Api.Input> _repeated_inputs_codec
        = pb::FieldCodec.ForMessage(34, global::Clarifai.Api.Input.Parser);
    private readonly pbc::RepeatedField<global::Clarifai.Api.Input> inputs_ = new pbc::RepeatedField<global::Clarifai.Api.Input>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Clarifai.Api.Input> Inputs {
      get { return inputs_; }
    }

    /// <summary>Field number for the "model" field.</summary>
    public const int ModelFieldNumber = 5;
    private global::Clarifai.Api.Model model_;
    /// <summary>
    /// This allows you to specify config options for the model such as
    /// the language which appear's in the model's output_info.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.Model Model {
      get { return model_; }
      set {
        model_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PostModelOutputsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PostModelOutputsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserAppId, other.UserAppId)) return false;
      if (ModelId != other.ModelId) return false;
      if (VersionId != other.VersionId) return false;
      if(!inputs_.Equals(other.inputs_)) return false;
      if (!object.Equals(Model, other.Model)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (userAppId_ != null) hash ^= UserAppId.GetHashCode();
      if (ModelId.Length != 0) hash ^= ModelId.GetHashCode();
      if (VersionId.Length != 0) hash ^= VersionId.GetHashCode();
      hash ^= inputs_.GetHashCode();
      if (model_ != null) hash ^= Model.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (userAppId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserAppId);
      }
      if (ModelId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ModelId);
      }
      if (VersionId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(VersionId);
      }
      inputs_.WriteTo(output, _repeated_inputs_codec);
      if (model_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Model);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (userAppId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserAppId);
      }
      if (ModelId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModelId);
      }
      if (VersionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(VersionId);
      }
      size += inputs_.CalculateSize(_repeated_inputs_codec);
      if (model_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Model);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PostModelOutputsRequest other) {
      if (other == null) {
        return;
      }
      if (other.userAppId_ != null) {
        if (userAppId_ == null) {
          UserAppId = new global::Clarifai.Api.UserAppIDSet();
        }
        UserAppId.MergeFrom(other.UserAppId);
      }
      if (other.ModelId.Length != 0) {
        ModelId = other.ModelId;
      }
      if (other.VersionId.Length != 0) {
        VersionId = other.VersionId;
      }
      inputs_.Add(other.inputs_);
      if (other.model_ != null) {
        if (model_ == null) {
          Model = new global::Clarifai.Api.Model();
        }
        Model.MergeFrom(other.Model);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (userAppId_ == null) {
              UserAppId = new global::Clarifai.Api.UserAppIDSet();
            }
            input.ReadMessage(UserAppId);
            break;
          }
          case 18: {
            ModelId = input.ReadString();
            break;
          }
          case 26: {
            VersionId = input.ReadString();
            break;
          }
          case 34: {
            inputs_.AddEntriesFrom(input, _repeated_inputs_codec);
            break;
          }
          case 42: {
            if (model_ == null) {
              Model = new global::Clarifai.Api.Model();
            }
            input.ReadMessage(Model);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Listing the inputs that went into training this model.
  /// </summary>
  public sealed partial class ListModelInputsRequest : pb::IMessage<ListModelInputsRequest> {
    private static readonly pb::MessageParser<ListModelInputsRequest> _parser = new pb::MessageParser<ListModelInputsRequest>(() => new ListModelInputsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListModelInputsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[68]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListModelInputsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListModelInputsRequest(ListModelInputsRequest other) : this() {
      userAppId_ = other.userAppId_ != null ? other.userAppId_.Clone() : null;
      modelId_ = other.modelId_;
      versionId_ = other.versionId_;
      page_ = other.page_;
      perPage_ = other.perPage_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListModelInputsRequest Clone() {
      return new ListModelInputsRequest(this);
    }

    /// <summary>Field number for the "user_app_id" field.</summary>
    public const int UserAppIdFieldNumber = 1;
    private global::Clarifai.Api.UserAppIDSet userAppId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.UserAppIDSet UserAppId {
      get { return userAppId_; }
      set {
        userAppId_ = value;
      }
    }

    /// <summary>Field number for the "model_id" field.</summary>
    public const int ModelIdFieldNumber = 2;
    private string modelId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModelId {
      get { return modelId_; }
      set {
        modelId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "version_id" field.</summary>
    public const int VersionIdFieldNumber = 3;
    private string versionId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string VersionId {
      get { return versionId_; }
      set {
        versionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "page" field.</summary>
    public const int PageFieldNumber = 4;
    private uint page_;
    /// <summary>
    /// (optional URL parameter) The page number. Pagination is used to split the results into chunks.
    /// Defaults to 1.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Page {
      get { return page_; }
      set {
        page_ = value;
      }
    }

    /// <summary>Field number for the "per_page" field.</summary>
    public const int PerPageFieldNumber = 5;
    private uint perPage_;
    /// <summary>
    /// (optional URL parameter) The number of results that will be contained in each page. Defaults
    /// to 128.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint PerPage {
      get { return perPage_; }
      set {
        perPage_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListModelInputsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListModelInputsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserAppId, other.UserAppId)) return false;
      if (ModelId != other.ModelId) return false;
      if (VersionId != other.VersionId) return false;
      if (Page != other.Page) return false;
      if (PerPage != other.PerPage) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (userAppId_ != null) hash ^= UserAppId.GetHashCode();
      if (ModelId.Length != 0) hash ^= ModelId.GetHashCode();
      if (VersionId.Length != 0) hash ^= VersionId.GetHashCode();
      if (Page != 0) hash ^= Page.GetHashCode();
      if (PerPage != 0) hash ^= PerPage.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (userAppId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserAppId);
      }
      if (ModelId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ModelId);
      }
      if (VersionId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(VersionId);
      }
      if (Page != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Page);
      }
      if (PerPage != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(PerPage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (userAppId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserAppId);
      }
      if (ModelId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModelId);
      }
      if (VersionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(VersionId);
      }
      if (Page != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Page);
      }
      if (PerPage != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PerPage);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListModelInputsRequest other) {
      if (other == null) {
        return;
      }
      if (other.userAppId_ != null) {
        if (userAppId_ == null) {
          UserAppId = new global::Clarifai.Api.UserAppIDSet();
        }
        UserAppId.MergeFrom(other.UserAppId);
      }
      if (other.ModelId.Length != 0) {
        ModelId = other.ModelId;
      }
      if (other.VersionId.Length != 0) {
        VersionId = other.VersionId;
      }
      if (other.Page != 0) {
        Page = other.Page;
      }
      if (other.PerPage != 0) {
        PerPage = other.PerPage;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (userAppId_ == null) {
              UserAppId = new global::Clarifai.Api.UserAppIDSet();
            }
            input.ReadMessage(UserAppId);
            break;
          }
          case 18: {
            ModelId = input.ReadString();
            break;
          }
          case 26: {
            VersionId = input.ReadString();
            break;
          }
          case 32: {
            Page = input.ReadUInt32();
            break;
          }
          case 40: {
            PerPage = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /////////////////////////////////////////////////////////////////////////////////
  /// Requests / Responses from /proto/clarifai/api/key.proto
  /////////////////////////////////////////////////////////////////////////////////
  /// </summary>
  public sealed partial class GetKeyRequest : pb::IMessage<GetKeyRequest> {
    private static readonly pb::MessageParser<GetKeyRequest> _parser = new pb::MessageParser<GetKeyRequest>(() => new GetKeyRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetKeyRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[69]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetKeyRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetKeyRequest(GetKeyRequest other) : this() {
      userAppId_ = other.userAppId_ != null ? other.userAppId_.Clone() : null;
      keyId_ = other.keyId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetKeyRequest Clone() {
      return new GetKeyRequest(this);
    }

    /// <summary>Field number for the "user_app_id" field.</summary>
    public const int UserAppIdFieldNumber = 1;
    private global::Clarifai.Api.UserAppIDSet userAppId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.UserAppIDSet UserAppId {
      get { return userAppId_; }
      set {
        userAppId_ = value;
      }
    }

    /// <summary>Field number for the "key_id" field.</summary>
    public const int KeyIdFieldNumber = 2;
    private string keyId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string KeyId {
      get { return keyId_; }
      set {
        keyId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetKeyRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetKeyRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserAppId, other.UserAppId)) return false;
      if (KeyId != other.KeyId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (userAppId_ != null) hash ^= UserAppId.GetHashCode();
      if (KeyId.Length != 0) hash ^= KeyId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (userAppId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserAppId);
      }
      if (KeyId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(KeyId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (userAppId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserAppId);
      }
      if (KeyId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(KeyId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetKeyRequest other) {
      if (other == null) {
        return;
      }
      if (other.userAppId_ != null) {
        if (userAppId_ == null) {
          UserAppId = new global::Clarifai.Api.UserAppIDSet();
        }
        UserAppId.MergeFrom(other.UserAppId);
      }
      if (other.KeyId.Length != 0) {
        KeyId = other.KeyId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (userAppId_ == null) {
              UserAppId = new global::Clarifai.Api.UserAppIDSet();
            }
            input.ReadMessage(UserAppId);
            break;
          }
          case 18: {
            KeyId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ListKeysRequest : pb::IMessage<ListKeysRequest> {
    private static readonly pb::MessageParser<ListKeysRequest> _parser = new pb::MessageParser<ListKeysRequest>(() => new ListKeysRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListKeysRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[70]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListKeysRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListKeysRequest(ListKeysRequest other) : this() {
      userAppId_ = other.userAppId_ != null ? other.userAppId_.Clone() : null;
      page_ = other.page_;
      perPage_ = other.perPage_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListKeysRequest Clone() {
      return new ListKeysRequest(this);
    }

    /// <summary>Field number for the "user_app_id" field.</summary>
    public const int UserAppIdFieldNumber = 1;
    private global::Clarifai.Api.UserAppIDSet userAppId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.UserAppIDSet UserAppId {
      get { return userAppId_; }
      set {
        userAppId_ = value;
      }
    }

    /// <summary>Field number for the "page" field.</summary>
    public const int PageFieldNumber = 2;
    private uint page_;
    /// <summary>
    /// (optional URL parameter) The page number. Pagination is used to split the results into chunks.
    /// Defaults to 1.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Page {
      get { return page_; }
      set {
        page_ = value;
      }
    }

    /// <summary>Field number for the "per_page" field.</summary>
    public const int PerPageFieldNumber = 3;
    private uint perPage_;
    /// <summary>
    /// (optional URL parameter) The number of results that will be contained in each page. Defaults
    /// to 128.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint PerPage {
      get { return perPage_; }
      set {
        perPage_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListKeysRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListKeysRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserAppId, other.UserAppId)) return false;
      if (Page != other.Page) return false;
      if (PerPage != other.PerPage) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (userAppId_ != null) hash ^= UserAppId.GetHashCode();
      if (Page != 0) hash ^= Page.GetHashCode();
      if (PerPage != 0) hash ^= PerPage.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (userAppId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserAppId);
      }
      if (Page != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Page);
      }
      if (PerPage != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(PerPage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (userAppId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserAppId);
      }
      if (Page != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Page);
      }
      if (PerPage != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PerPage);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListKeysRequest other) {
      if (other == null) {
        return;
      }
      if (other.userAppId_ != null) {
        if (userAppId_ == null) {
          UserAppId = new global::Clarifai.Api.UserAppIDSet();
        }
        UserAppId.MergeFrom(other.UserAppId);
      }
      if (other.Page != 0) {
        Page = other.Page;
      }
      if (other.PerPage != 0) {
        PerPage = other.PerPage;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (userAppId_ == null) {
              UserAppId = new global::Clarifai.Api.UserAppIDSet();
            }
            input.ReadMessage(UserAppId);
            break;
          }
          case 16: {
            Page = input.ReadUInt32();
            break;
          }
          case 24: {
            PerPage = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ListAppKeysRequest : pb::IMessage<ListAppKeysRequest> {
    private static readonly pb::MessageParser<ListAppKeysRequest> _parser = new pb::MessageParser<ListAppKeysRequest>(() => new ListAppKeysRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListAppKeysRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[71]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListAppKeysRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListAppKeysRequest(ListAppKeysRequest other) : this() {
      userAppId_ = other.userAppId_ != null ? other.userAppId_.Clone() : null;
      page_ = other.page_;
      perPage_ = other.perPage_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListAppKeysRequest Clone() {
      return new ListAppKeysRequest(this);
    }

    /// <summary>Field number for the "user_app_id" field.</summary>
    public const int UserAppIdFieldNumber = 1;
    private global::Clarifai.Api.UserAppIDSet userAppId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.UserAppIDSet UserAppId {
      get { return userAppId_; }
      set {
        userAppId_ = value;
      }
    }

    /// <summary>Field number for the "page" field.</summary>
    public const int PageFieldNumber = 2;
    private uint page_;
    /// <summary>
    /// (optional URL parameter) The page number. Pagination is used to split the results into chunks.
    /// Defaults to 1.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Page {
      get { return page_; }
      set {
        page_ = value;
      }
    }

    /// <summary>Field number for the "per_page" field.</summary>
    public const int PerPageFieldNumber = 3;
    private uint perPage_;
    /// <summary>
    /// (optional URL parameter) The number of results that will be contained in each page. Defaults
    /// to 128.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint PerPage {
      get { return perPage_; }
      set {
        perPage_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListAppKeysRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListAppKeysRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserAppId, other.UserAppId)) return false;
      if (Page != other.Page) return false;
      if (PerPage != other.PerPage) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (userAppId_ != null) hash ^= UserAppId.GetHashCode();
      if (Page != 0) hash ^= Page.GetHashCode();
      if (PerPage != 0) hash ^= PerPage.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (userAppId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserAppId);
      }
      if (Page != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Page);
      }
      if (PerPage != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(PerPage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (userAppId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserAppId);
      }
      if (Page != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Page);
      }
      if (PerPage != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PerPage);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListAppKeysRequest other) {
      if (other == null) {
        return;
      }
      if (other.userAppId_ != null) {
        if (userAppId_ == null) {
          UserAppId = new global::Clarifai.Api.UserAppIDSet();
        }
        UserAppId.MergeFrom(other.UserAppId);
      }
      if (other.Page != 0) {
        Page = other.Page;
      }
      if (other.PerPage != 0) {
        PerPage = other.PerPage;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (userAppId_ == null) {
              UserAppId = new global::Clarifai.Api.UserAppIDSet();
            }
            input.ReadMessage(UserAppId);
            break;
          }
          case 16: {
            Page = input.ReadUInt32();
            break;
          }
          case 24: {
            PerPage = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PostKeysRequest : pb::IMessage<PostKeysRequest> {
    private static readonly pb::MessageParser<PostKeysRequest> _parser = new pb::MessageParser<PostKeysRequest>(() => new PostKeysRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PostKeysRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[72]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostKeysRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostKeysRequest(PostKeysRequest other) : this() {
      userAppId_ = other.userAppId_ != null ? other.userAppId_.Clone() : null;
      keys_ = other.keys_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostKeysRequest Clone() {
      return new PostKeysRequest(this);
    }

    /// <summary>Field number for the "user_app_id" field.</summary>
    public const int UserAppIdFieldNumber = 1;
    private global::Clarifai.Api.UserAppIDSet userAppId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.UserAppIDSet UserAppId {
      get { return userAppId_; }
      set {
        userAppId_ = value;
      }
    }

    /// <summary>Field number for the "keys" field.</summary>
    public const int KeysFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Clarifai.Api.Key> _repeated_keys_codec
        = pb::FieldCodec.ForMessage(18, global::Clarifai.Api.Key.Parser);
    private readonly pbc::RepeatedField<global::Clarifai.Api.Key> keys_ = new pbc::RepeatedField<global::Clarifai.Api.Key>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Clarifai.Api.Key> Keys {
      get { return keys_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PostKeysRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PostKeysRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserAppId, other.UserAppId)) return false;
      if(!keys_.Equals(other.keys_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (userAppId_ != null) hash ^= UserAppId.GetHashCode();
      hash ^= keys_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (userAppId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserAppId);
      }
      keys_.WriteTo(output, _repeated_keys_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (userAppId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserAppId);
      }
      size += keys_.CalculateSize(_repeated_keys_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PostKeysRequest other) {
      if (other == null) {
        return;
      }
      if (other.userAppId_ != null) {
        if (userAppId_ == null) {
          UserAppId = new global::Clarifai.Api.UserAppIDSet();
        }
        UserAppId.MergeFrom(other.UserAppId);
      }
      keys_.Add(other.keys_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (userAppId_ == null) {
              UserAppId = new global::Clarifai.Api.UserAppIDSet();
            }
            input.ReadMessage(UserAppId);
            break;
          }
          case 18: {
            keys_.AddEntriesFrom(input, _repeated_keys_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class DeleteKeyRequest : pb::IMessage<DeleteKeyRequest> {
    private static readonly pb::MessageParser<DeleteKeyRequest> _parser = new pb::MessageParser<DeleteKeyRequest>(() => new DeleteKeyRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteKeyRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[73]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteKeyRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteKeyRequest(DeleteKeyRequest other) : this() {
      userAppId_ = other.userAppId_ != null ? other.userAppId_.Clone() : null;
      keyId_ = other.keyId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteKeyRequest Clone() {
      return new DeleteKeyRequest(this);
    }

    /// <summary>Field number for the "user_app_id" field.</summary>
    public const int UserAppIdFieldNumber = 1;
    private global::Clarifai.Api.UserAppIDSet userAppId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.UserAppIDSet UserAppId {
      get { return userAppId_; }
      set {
        userAppId_ = value;
      }
    }

    /// <summary>Field number for the "key_id" field.</summary>
    public const int KeyIdFieldNumber = 2;
    private string keyId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string KeyId {
      get { return keyId_; }
      set {
        keyId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteKeyRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteKeyRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserAppId, other.UserAppId)) return false;
      if (KeyId != other.KeyId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (userAppId_ != null) hash ^= UserAppId.GetHashCode();
      if (KeyId.Length != 0) hash ^= KeyId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (userAppId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserAppId);
      }
      if (KeyId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(KeyId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (userAppId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserAppId);
      }
      if (KeyId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(KeyId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteKeyRequest other) {
      if (other == null) {
        return;
      }
      if (other.userAppId_ != null) {
        if (userAppId_ == null) {
          UserAppId = new global::Clarifai.Api.UserAppIDSet();
        }
        UserAppId.MergeFrom(other.UserAppId);
      }
      if (other.KeyId.Length != 0) {
        KeyId = other.KeyId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (userAppId_ == null) {
              UserAppId = new global::Clarifai.Api.UserAppIDSet();
            }
            input.ReadMessage(UserAppId);
            break;
          }
          case 18: {
            KeyId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PatchKeysRequest : pb::IMessage<PatchKeysRequest> {
    private static readonly pb::MessageParser<PatchKeysRequest> _parser = new pb::MessageParser<PatchKeysRequest>(() => new PatchKeysRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PatchKeysRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[74]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PatchKeysRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PatchKeysRequest(PatchKeysRequest other) : this() {
      userAppId_ = other.userAppId_ != null ? other.userAppId_.Clone() : null;
      keys_ = other.keys_.Clone();
      action_ = other.action_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PatchKeysRequest Clone() {
      return new PatchKeysRequest(this);
    }

    /// <summary>Field number for the "user_app_id" field.</summary>
    public const int UserAppIdFieldNumber = 1;
    private global::Clarifai.Api.UserAppIDSet userAppId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.UserAppIDSet UserAppId {
      get { return userAppId_; }
      set {
        userAppId_ = value;
      }
    }

    /// <summary>Field number for the "keys" field.</summary>
    public const int KeysFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Clarifai.Api.Key> _repeated_keys_codec
        = pb::FieldCodec.ForMessage(18, global::Clarifai.Api.Key.Parser);
    private readonly pbc::RepeatedField<global::Clarifai.Api.Key> keys_ = new pbc::RepeatedField<global::Clarifai.Api.Key>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Clarifai.Api.Key> Keys {
      get { return keys_; }
    }

    /// <summary>Field number for the "action" field.</summary>
    public const int ActionFieldNumber = 3;
    private string action_ = "";
    /// <summary>
    /// The action to perform on the patched objects
    /// For now only action 'overwrite' is supported
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Action {
      get { return action_; }
      set {
        action_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PatchKeysRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PatchKeysRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserAppId, other.UserAppId)) return false;
      if(!keys_.Equals(other.keys_)) return false;
      if (Action != other.Action) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (userAppId_ != null) hash ^= UserAppId.GetHashCode();
      hash ^= keys_.GetHashCode();
      if (Action.Length != 0) hash ^= Action.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (userAppId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserAppId);
      }
      keys_.WriteTo(output, _repeated_keys_codec);
      if (Action.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Action);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (userAppId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserAppId);
      }
      size += keys_.CalculateSize(_repeated_keys_codec);
      if (Action.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Action);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PatchKeysRequest other) {
      if (other == null) {
        return;
      }
      if (other.userAppId_ != null) {
        if (userAppId_ == null) {
          UserAppId = new global::Clarifai.Api.UserAppIDSet();
        }
        UserAppId.MergeFrom(other.UserAppId);
      }
      keys_.Add(other.keys_);
      if (other.Action.Length != 0) {
        Action = other.Action;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (userAppId_ == null) {
              UserAppId = new global::Clarifai.Api.UserAppIDSet();
            }
            input.ReadMessage(UserAppId);
            break;
          }
          case 18: {
            keys_.AddEntriesFrom(input, _repeated_keys_codec);
            break;
          }
          case 26: {
            Action = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SingleKeyResponse : pb::IMessage<SingleKeyResponse> {
    private static readonly pb::MessageParser<SingleKeyResponse> _parser = new pb::MessageParser<SingleKeyResponse>(() => new SingleKeyResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SingleKeyResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[75]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SingleKeyResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SingleKeyResponse(SingleKeyResponse other) : this() {
      status_ = other.status_ != null ? other.status_.Clone() : null;
      key_ = other.key_ != null ? other.key_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SingleKeyResponse Clone() {
      return new SingleKeyResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::Clarifai.Api.Status.Status status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.Status.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "key" field.</summary>
    public const int KeyFieldNumber = 2;
    private global::Clarifai.Api.Key key_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.Key Key {
      get { return key_; }
      set {
        key_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SingleKeyResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SingleKeyResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Status, other.Status)) return false;
      if (!object.Equals(Key, other.Key)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (status_ != null) hash ^= Status.GetHashCode();
      if (key_ != null) hash ^= Key.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (status_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Status);
      }
      if (key_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Key);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      if (key_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Key);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SingleKeyResponse other) {
      if (other == null) {
        return;
      }
      if (other.status_ != null) {
        if (status_ == null) {
          Status = new global::Clarifai.Api.Status.Status();
        }
        Status.MergeFrom(other.Status);
      }
      if (other.key_ != null) {
        if (key_ == null) {
          Key = new global::Clarifai.Api.Key();
        }
        Key.MergeFrom(other.Key);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (status_ == null) {
              Status = new global::Clarifai.Api.Status.Status();
            }
            input.ReadMessage(Status);
            break;
          }
          case 18: {
            if (key_ == null) {
              Key = new global::Clarifai.Api.Key();
            }
            input.ReadMessage(Key);
            break;
          }
        }
      }
    }

  }

  public sealed partial class MultiKeyResponse : pb::IMessage<MultiKeyResponse> {
    private static readonly pb::MessageParser<MultiKeyResponse> _parser = new pb::MessageParser<MultiKeyResponse>(() => new MultiKeyResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MultiKeyResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[76]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiKeyResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiKeyResponse(MultiKeyResponse other) : this() {
      status_ = other.status_ != null ? other.status_.Clone() : null;
      keys_ = other.keys_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiKeyResponse Clone() {
      return new MultiKeyResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::Clarifai.Api.Status.Status status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.Status.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "keys" field.</summary>
    public const int KeysFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Clarifai.Api.Key> _repeated_keys_codec
        = pb::FieldCodec.ForMessage(18, global::Clarifai.Api.Key.Parser);
    private readonly pbc::RepeatedField<global::Clarifai.Api.Key> keys_ = new pbc::RepeatedField<global::Clarifai.Api.Key>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Clarifai.Api.Key> Keys {
      get { return keys_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MultiKeyResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MultiKeyResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Status, other.Status)) return false;
      if(!keys_.Equals(other.keys_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (status_ != null) hash ^= Status.GetHashCode();
      hash ^= keys_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (status_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Status);
      }
      keys_.WriteTo(output, _repeated_keys_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      size += keys_.CalculateSize(_repeated_keys_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MultiKeyResponse other) {
      if (other == null) {
        return;
      }
      if (other.status_ != null) {
        if (status_ == null) {
          Status = new global::Clarifai.Api.Status.Status();
        }
        Status.MergeFrom(other.Status);
      }
      keys_.Add(other.keys_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (status_ == null) {
              Status = new global::Clarifai.Api.Status.Status();
            }
            input.ReadMessage(Status);
            break;
          }
          case 18: {
            keys_.AddEntriesFrom(input, _repeated_keys_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /////////////////////////////////////////////////////////////////////////////////
  /// Requests / Responses from /proto/clarifai/api/model.proto
  /////////////////////////////////////////////////////////////////////////////////
  /// </summary>
  public sealed partial class GetModelRequest : pb::IMessage<GetModelRequest> {
    private static readonly pb::MessageParser<GetModelRequest> _parser = new pb::MessageParser<GetModelRequest>(() => new GetModelRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetModelRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[77]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetModelRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetModelRequest(GetModelRequest other) : this() {
      userAppId_ = other.userAppId_ != null ? other.userAppId_.Clone() : null;
      modelId_ = other.modelId_;
      versionId_ = other.versionId_;
      language_ = other.language_;
      trainedBefore_ = other.trainedBefore_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetModelRequest Clone() {
      return new GetModelRequest(this);
    }

    /// <summary>Field number for the "user_app_id" field.</summary>
    public const int UserAppIdFieldNumber = 1;
    private global::Clarifai.Api.UserAppIDSet userAppId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.UserAppIDSet UserAppId {
      get { return userAppId_; }
      set {
        userAppId_ = value;
      }
    }

    /// <summary>Field number for the "model_id" field.</summary>
    public const int ModelIdFieldNumber = 2;
    private string modelId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModelId {
      get { return modelId_; }
      set {
        modelId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "version_id" field.</summary>
    public const int VersionIdFieldNumber = 3;
    private string versionId_ = "";
    /// <summary>
    /// This is included so that we can re-use this request for multiple
    /// rpcs with and without the version_id.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string VersionId {
      get { return versionId_; }
      set {
        versionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "language" field.</summary>
    public const int LanguageFieldNumber = 4;
    private string language_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Language {
      get { return language_; }
      set {
        language_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "trained_before" field.</summary>
    public const int TrainedBeforeFieldNumber = 5;
    private bool trainedBefore_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool TrainedBefore {
      get { return trainedBefore_; }
      set {
        trainedBefore_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetModelRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetModelRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserAppId, other.UserAppId)) return false;
      if (ModelId != other.ModelId) return false;
      if (VersionId != other.VersionId) return false;
      if (Language != other.Language) return false;
      if (TrainedBefore != other.TrainedBefore) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (userAppId_ != null) hash ^= UserAppId.GetHashCode();
      if (ModelId.Length != 0) hash ^= ModelId.GetHashCode();
      if (VersionId.Length != 0) hash ^= VersionId.GetHashCode();
      if (Language.Length != 0) hash ^= Language.GetHashCode();
      if (TrainedBefore != false) hash ^= TrainedBefore.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (userAppId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserAppId);
      }
      if (ModelId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ModelId);
      }
      if (VersionId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(VersionId);
      }
      if (Language.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Language);
      }
      if (TrainedBefore != false) {
        output.WriteRawTag(40);
        output.WriteBool(TrainedBefore);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (userAppId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserAppId);
      }
      if (ModelId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModelId);
      }
      if (VersionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(VersionId);
      }
      if (Language.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Language);
      }
      if (TrainedBefore != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetModelRequest other) {
      if (other == null) {
        return;
      }
      if (other.userAppId_ != null) {
        if (userAppId_ == null) {
          UserAppId = new global::Clarifai.Api.UserAppIDSet();
        }
        UserAppId.MergeFrom(other.UserAppId);
      }
      if (other.ModelId.Length != 0) {
        ModelId = other.ModelId;
      }
      if (other.VersionId.Length != 0) {
        VersionId = other.VersionId;
      }
      if (other.Language.Length != 0) {
        Language = other.Language;
      }
      if (other.TrainedBefore != false) {
        TrainedBefore = other.TrainedBefore;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (userAppId_ == null) {
              UserAppId = new global::Clarifai.Api.UserAppIDSet();
            }
            input.ReadMessage(UserAppId);
            break;
          }
          case 18: {
            ModelId = input.ReadString();
            break;
          }
          case 26: {
            VersionId = input.ReadString();
            break;
          }
          case 34: {
            Language = input.ReadString();
            break;
          }
          case 40: {
            TrainedBefore = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ListModelsRequest : pb::IMessage<ListModelsRequest> {
    private static readonly pb::MessageParser<ListModelsRequest> _parser = new pb::MessageParser<ListModelsRequest>(() => new ListModelsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListModelsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[78]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListModelsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListModelsRequest(ListModelsRequest other) : this() {
      userAppId_ = other.userAppId_ != null ? other.userAppId_.Clone() : null;
      page_ = other.page_;
      perPage_ = other.perPage_;
      sortAscending_ = other.sortAscending_;
      query_ = other.query_;
      name_ = other.name_;
      modelTypeId_ = other.modelTypeId_;
      trainedOnly_ = other.trainedOnly_;
      inputFields_ = other.inputFields_.Clone();
      outputFields_ = other.outputFields_.Clone();
      license_ = other.license_;
      switch (other.SortByCase) {
        case SortByOneofCase.SortByName:
          SortByName = other.SortByName;
          break;
        case SortByOneofCase.SortByNumInputs:
          SortByNumInputs = other.SortByNumInputs;
          break;
        case SortByOneofCase.SortByModifiedAt:
          SortByModifiedAt = other.SortByModifiedAt;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListModelsRequest Clone() {
      return new ListModelsRequest(this);
    }

    /// <summary>Field number for the "user_app_id" field.</summary>
    public const int UserAppIdFieldNumber = 1;
    private global::Clarifai.Api.UserAppIDSet userAppId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.UserAppIDSet UserAppId {
      get { return userAppId_; }
      set {
        userAppId_ = value;
      }
    }

    /// <summary>Field number for the "page" field.</summary>
    public const int PageFieldNumber = 2;
    private uint page_;
    /// <summary>
    /// (optional URL parameter) The page number. Pagination is used to split the results into chunks.
    /// Defaults to 1.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Page {
      get { return page_; }
      set {
        page_ = value;
      }
    }

    /// <summary>Field number for the "per_page" field.</summary>
    public const int PerPageFieldNumber = 3;
    private uint perPage_;
    /// <summary>
    /// (optional URL parameter) The number of results that will be contained in each page. Defaults
    /// to 128.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint PerPage {
      get { return perPage_; }
      set {
        perPage_ = value;
      }
    }

    /// <summary>Field number for the "sort_ascending" field.</summary>
    public const int SortAscendingFieldNumber = 10;
    private bool sortAscending_;
    /// <summary>
    /// Sorting options:
    /// Whether to sort in ascending order. If false, will order in descending order. 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool SortAscending {
      get { return sortAscending_; }
      set {
        sortAscending_ = value;
      }
    }

    /// <summary>Field number for the "sort_by_name" field.</summary>
    public const int SortByNameFieldNumber = 11;
    /// <summary>
    /// Whether to order by the name
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool SortByName {
      get { return sortByCase_ == SortByOneofCase.SortByName ? (bool) sortBy_ : false; }
      set {
        sortBy_ = value;
        sortByCase_ = SortByOneofCase.SortByName;
      }
    }

    /// <summary>Field number for the "sort_by_num_inputs" field.</summary>
    public const int SortByNumInputsFieldNumber = 12;
    /// <summary>
    /// Whether to order by the number of training inputs
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool SortByNumInputs {
      get { return sortByCase_ == SortByOneofCase.SortByNumInputs ? (bool) sortBy_ : false; }
      set {
        sortBy_ = value;
        sortByCase_ = SortByOneofCase.SortByNumInputs;
      }
    }

    /// <summary>Field number for the "sort_by_modified_at" field.</summary>
    public const int SortByModifiedAtFieldNumber = 13;
    /// <summary>
    /// Whether to order by the modified_at time of the latest model version.
    /// If neither sort option is set to true, will sort by modified_at.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool SortByModifiedAt {
      get { return sortByCase_ == SortByOneofCase.SortByModifiedAt ? (bool) sortBy_ : false; }
      set {
        sortBy_ = value;
        sortByCase_ = SortByOneofCase.SortByModifiedAt;
      }
    }

    /// <summary>Field number for the "query" field.</summary>
    public const int QueryFieldNumber = 14;
    private string query_ = "";
    /// <summary>
    /// Filtering options:
    /// // Query various text fields that can contain the words in the query string
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Query {
      get { return query_; }
      set {
        query_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 5;
    private string name_ = "";
    /// <summary>
    /// Filter by the name of the model. This supports wilcard queries like "gen*" to match "general" as an example.
    /// Deprecated in favor of query
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "model_type_id" field.</summary>
    public const int ModelTypeIdFieldNumber = 6;
    private string modelTypeId_ = "";
    /// <summary>
    /// Filter models by the specific model_type_id. See ListModelTypes for the list of ModelType.Id's
    /// supported.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModelTypeId {
      get { return modelTypeId_; }
      set {
        modelTypeId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "trained_only" field.</summary>
    public const int TrainedOnlyFieldNumber = 7;
    private bool trainedOnly_;
    /// <summary>
    /// If true, we only return models that have the status MODEL_TRAINED, which includes non-trainable model types.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool TrainedOnly {
      get { return trainedOnly_; }
      set {
        trainedOnly_ = value;
      }
    }

    /// <summary>Field number for the "input_fields" field.</summary>
    public const int InputFieldsFieldNumber = 8;
    private static readonly pb::FieldCodec<string> _repeated_inputFields_codec
        = pb::FieldCodec.ForString(66);
    private readonly pbc::RepeatedField<string> inputFields_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// The list of input fields to the model.
    /// For example, you can specify 'image', which will return models that make inferences on images like visual-classifier models.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> InputFields {
      get { return inputFields_; }
    }

    /// <summary>Field number for the "output_fields" field.</summary>
    public const int OutputFieldsFieldNumber = 9;
    private static readonly pb::FieldCodec<string> _repeated_outputFields_codec
        = pb::FieldCodec.ForString(74);
    private readonly pbc::RepeatedField<string> outputFields_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// The list of output fields to the model.
    /// For example, you can specify 'regions[...].data.concepts', which will return visual-detector models.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> OutputFields {
      get { return outputFields_; }
    }

    /// <summary>Field number for the "license" field.</summary>
    public const int LicenseFieldNumber = 15;
    private string license_ = "";
    /// <summary>
    /// Filter by the license of the model version
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string License {
      get { return license_; }
      set {
        license_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    private object sortBy_;
    /// <summary>Enum of possible cases for the "sort_by" oneof.</summary>
    public enum SortByOneofCase {
      None = 0,
      SortByName = 11,
      SortByNumInputs = 12,
      SortByModifiedAt = 13,
    }
    private SortByOneofCase sortByCase_ = SortByOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SortByOneofCase SortByCase {
      get { return sortByCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSortBy() {
      sortByCase_ = SortByOneofCase.None;
      sortBy_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListModelsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListModelsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserAppId, other.UserAppId)) return false;
      if (Page != other.Page) return false;
      if (PerPage != other.PerPage) return false;
      if (SortAscending != other.SortAscending) return false;
      if (SortByName != other.SortByName) return false;
      if (SortByNumInputs != other.SortByNumInputs) return false;
      if (SortByModifiedAt != other.SortByModifiedAt) return false;
      if (Query != other.Query) return false;
      if (Name != other.Name) return false;
      if (ModelTypeId != other.ModelTypeId) return false;
      if (TrainedOnly != other.TrainedOnly) return false;
      if(!inputFields_.Equals(other.inputFields_)) return false;
      if(!outputFields_.Equals(other.outputFields_)) return false;
      if (License != other.License) return false;
      if (SortByCase != other.SortByCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (userAppId_ != null) hash ^= UserAppId.GetHashCode();
      if (Page != 0) hash ^= Page.GetHashCode();
      if (PerPage != 0) hash ^= PerPage.GetHashCode();
      if (SortAscending != false) hash ^= SortAscending.GetHashCode();
      if (sortByCase_ == SortByOneofCase.SortByName) hash ^= SortByName.GetHashCode();
      if (sortByCase_ == SortByOneofCase.SortByNumInputs) hash ^= SortByNumInputs.GetHashCode();
      if (sortByCase_ == SortByOneofCase.SortByModifiedAt) hash ^= SortByModifiedAt.GetHashCode();
      if (Query.Length != 0) hash ^= Query.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (ModelTypeId.Length != 0) hash ^= ModelTypeId.GetHashCode();
      if (TrainedOnly != false) hash ^= TrainedOnly.GetHashCode();
      hash ^= inputFields_.GetHashCode();
      hash ^= outputFields_.GetHashCode();
      if (License.Length != 0) hash ^= License.GetHashCode();
      hash ^= (int) sortByCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (userAppId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserAppId);
      }
      if (Page != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Page);
      }
      if (PerPage != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(PerPage);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Name);
      }
      if (ModelTypeId.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(ModelTypeId);
      }
      if (TrainedOnly != false) {
        output.WriteRawTag(56);
        output.WriteBool(TrainedOnly);
      }
      inputFields_.WriteTo(output, _repeated_inputFields_codec);
      outputFields_.WriteTo(output, _repeated_outputFields_codec);
      if (SortAscending != false) {
        output.WriteRawTag(80);
        output.WriteBool(SortAscending);
      }
      if (sortByCase_ == SortByOneofCase.SortByName) {
        output.WriteRawTag(88);
        output.WriteBool(SortByName);
      }
      if (sortByCase_ == SortByOneofCase.SortByNumInputs) {
        output.WriteRawTag(96);
        output.WriteBool(SortByNumInputs);
      }
      if (sortByCase_ == SortByOneofCase.SortByModifiedAt) {
        output.WriteRawTag(104);
        output.WriteBool(SortByModifiedAt);
      }
      if (Query.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(Query);
      }
      if (License.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(License);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (userAppId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserAppId);
      }
      if (Page != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Page);
      }
      if (PerPage != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PerPage);
      }
      if (SortAscending != false) {
        size += 1 + 1;
      }
      if (sortByCase_ == SortByOneofCase.SortByName) {
        size += 1 + 1;
      }
      if (sortByCase_ == SortByOneofCase.SortByNumInputs) {
        size += 1 + 1;
      }
      if (sortByCase_ == SortByOneofCase.SortByModifiedAt) {
        size += 1 + 1;
      }
      if (Query.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Query);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (ModelTypeId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModelTypeId);
      }
      if (TrainedOnly != false) {
        size += 1 + 1;
      }
      size += inputFields_.CalculateSize(_repeated_inputFields_codec);
      size += outputFields_.CalculateSize(_repeated_outputFields_codec);
      if (License.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(License);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListModelsRequest other) {
      if (other == null) {
        return;
      }
      if (other.userAppId_ != null) {
        if (userAppId_ == null) {
          UserAppId = new global::Clarifai.Api.UserAppIDSet();
        }
        UserAppId.MergeFrom(other.UserAppId);
      }
      if (other.Page != 0) {
        Page = other.Page;
      }
      if (other.PerPage != 0) {
        PerPage = other.PerPage;
      }
      if (other.SortAscending != false) {
        SortAscending = other.SortAscending;
      }
      if (other.Query.Length != 0) {
        Query = other.Query;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.ModelTypeId.Length != 0) {
        ModelTypeId = other.ModelTypeId;
      }
      if (other.TrainedOnly != false) {
        TrainedOnly = other.TrainedOnly;
      }
      inputFields_.Add(other.inputFields_);
      outputFields_.Add(other.outputFields_);
      if (other.License.Length != 0) {
        License = other.License;
      }
      switch (other.SortByCase) {
        case SortByOneofCase.SortByName:
          SortByName = other.SortByName;
          break;
        case SortByOneofCase.SortByNumInputs:
          SortByNumInputs = other.SortByNumInputs;
          break;
        case SortByOneofCase.SortByModifiedAt:
          SortByModifiedAt = other.SortByModifiedAt;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (userAppId_ == null) {
              UserAppId = new global::Clarifai.Api.UserAppIDSet();
            }
            input.ReadMessage(UserAppId);
            break;
          }
          case 16: {
            Page = input.ReadUInt32();
            break;
          }
          case 24: {
            PerPage = input.ReadUInt32();
            break;
          }
          case 42: {
            Name = input.ReadString();
            break;
          }
          case 50: {
            ModelTypeId = input.ReadString();
            break;
          }
          case 56: {
            TrainedOnly = input.ReadBool();
            break;
          }
          case 66: {
            inputFields_.AddEntriesFrom(input, _repeated_inputFields_codec);
            break;
          }
          case 74: {
            outputFields_.AddEntriesFrom(input, _repeated_outputFields_codec);
            break;
          }
          case 80: {
            SortAscending = input.ReadBool();
            break;
          }
          case 88: {
            SortByName = input.ReadBool();
            break;
          }
          case 96: {
            SortByNumInputs = input.ReadBool();
            break;
          }
          case 104: {
            SortByModifiedAt = input.ReadBool();
            break;
          }
          case 114: {
            Query = input.ReadString();
            break;
          }
          case 122: {
            License = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PostModelsRequest : pb::IMessage<PostModelsRequest> {
    private static readonly pb::MessageParser<PostModelsRequest> _parser = new pb::MessageParser<PostModelsRequest>(() => new PostModelsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PostModelsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[79]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostModelsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostModelsRequest(PostModelsRequest other) : this() {
      userAppId_ = other.userAppId_ != null ? other.userAppId_.Clone() : null;
      model_ = other.model_ != null ? other.model_.Clone() : null;
      models_ = other.models_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostModelsRequest Clone() {
      return new PostModelsRequest(this);
    }

    /// <summary>Field number for the "user_app_id" field.</summary>
    public const int UserAppIdFieldNumber = 1;
    private global::Clarifai.Api.UserAppIDSet userAppId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.UserAppIDSet UserAppId {
      get { return userAppId_; }
      set {
        userAppId_ = value;
      }
    }

    /// <summary>Field number for the "model" field.</summary>
    public const int ModelFieldNumber = 2;
    private global::Clarifai.Api.Model model_;
    /// <summary>
    /// NOTE: inconsistent since "model" is not plural, please use "models" below.
    /// Previously you could only create one model at a time.
    /// We still support this but you should pass it as models=[model] so
    /// that this endpoint is consistent with the rest of our API.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.Model Model {
      get { return model_; }
      set {
        model_ = value;
      }
    }

    /// <summary>Field number for the "models" field.</summary>
    public const int ModelsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Clarifai.Api.Model> _repeated_models_codec
        = pb::FieldCodec.ForMessage(26, global::Clarifai.Api.Model.Parser);
    private readonly pbc::RepeatedField<global::Clarifai.Api.Model> models_ = new pbc::RepeatedField<global::Clarifai.Api.Model>();
    /// <summary>
    /// This allows you to create one or more model by posting it to the API.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Clarifai.Api.Model> Models {
      get { return models_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PostModelsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PostModelsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserAppId, other.UserAppId)) return false;
      if (!object.Equals(Model, other.Model)) return false;
      if(!models_.Equals(other.models_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (userAppId_ != null) hash ^= UserAppId.GetHashCode();
      if (model_ != null) hash ^= Model.GetHashCode();
      hash ^= models_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (userAppId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserAppId);
      }
      if (model_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Model);
      }
      models_.WriteTo(output, _repeated_models_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (userAppId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserAppId);
      }
      if (model_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Model);
      }
      size += models_.CalculateSize(_repeated_models_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PostModelsRequest other) {
      if (other == null) {
        return;
      }
      if (other.userAppId_ != null) {
        if (userAppId_ == null) {
          UserAppId = new global::Clarifai.Api.UserAppIDSet();
        }
        UserAppId.MergeFrom(other.UserAppId);
      }
      if (other.model_ != null) {
        if (model_ == null) {
          Model = new global::Clarifai.Api.Model();
        }
        Model.MergeFrom(other.Model);
      }
      models_.Add(other.models_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (userAppId_ == null) {
              UserAppId = new global::Clarifai.Api.UserAppIDSet();
            }
            input.ReadMessage(UserAppId);
            break;
          }
          case 18: {
            if (model_ == null) {
              Model = new global::Clarifai.Api.Model();
            }
            input.ReadMessage(Model);
            break;
          }
          case 26: {
            models_.AddEntriesFrom(input, _repeated_models_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PatchModelsRequest : pb::IMessage<PatchModelsRequest> {
    private static readonly pb::MessageParser<PatchModelsRequest> _parser = new pb::MessageParser<PatchModelsRequest>(() => new PatchModelsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PatchModelsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[80]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PatchModelsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PatchModelsRequest(PatchModelsRequest other) : this() {
      userAppId_ = other.userAppId_ != null ? other.userAppId_.Clone() : null;
      models_ = other.models_.Clone();
      action_ = other.action_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PatchModelsRequest Clone() {
      return new PatchModelsRequest(this);
    }

    /// <summary>Field number for the "user_app_id" field.</summary>
    public const int UserAppIdFieldNumber = 1;
    private global::Clarifai.Api.UserAppIDSet userAppId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.UserAppIDSet UserAppId {
      get { return userAppId_; }
      set {
        userAppId_ = value;
      }
    }

    /// <summary>Field number for the "models" field.</summary>
    public const int ModelsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Clarifai.Api.Model> _repeated_models_codec
        = pb::FieldCodec.ForMessage(18, global::Clarifai.Api.Model.Parser);
    private readonly pbc::RepeatedField<global::Clarifai.Api.Model> models_ = new pbc::RepeatedField<global::Clarifai.Api.Model>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Clarifai.Api.Model> Models {
      get { return models_; }
    }

    /// <summary>Field number for the "action" field.</summary>
    public const int ActionFieldNumber = 3;
    private string action_ = "";
    /// <summary>
    /// The action to perform on the patched objects
    /// For now actions 'merge', 'overwrite', and 'remove' are supported
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Action {
      get { return action_; }
      set {
        action_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PatchModelsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PatchModelsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserAppId, other.UserAppId)) return false;
      if(!models_.Equals(other.models_)) return false;
      if (Action != other.Action) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (userAppId_ != null) hash ^= UserAppId.GetHashCode();
      hash ^= models_.GetHashCode();
      if (Action.Length != 0) hash ^= Action.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (userAppId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserAppId);
      }
      models_.WriteTo(output, _repeated_models_codec);
      if (Action.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Action);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (userAppId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserAppId);
      }
      size += models_.CalculateSize(_repeated_models_codec);
      if (Action.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Action);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PatchModelsRequest other) {
      if (other == null) {
        return;
      }
      if (other.userAppId_ != null) {
        if (userAppId_ == null) {
          UserAppId = new global::Clarifai.Api.UserAppIDSet();
        }
        UserAppId.MergeFrom(other.UserAppId);
      }
      models_.Add(other.models_);
      if (other.Action.Length != 0) {
        Action = other.Action;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (userAppId_ == null) {
              UserAppId = new global::Clarifai.Api.UserAppIDSet();
            }
            input.ReadMessage(UserAppId);
            break;
          }
          case 18: {
            models_.AddEntriesFrom(input, _repeated_models_codec);
            break;
          }
          case 26: {
            Action = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DeleteModelRequest : pb::IMessage<DeleteModelRequest> {
    private static readonly pb::MessageParser<DeleteModelRequest> _parser = new pb::MessageParser<DeleteModelRequest>(() => new DeleteModelRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteModelRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[81]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteModelRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteModelRequest(DeleteModelRequest other) : this() {
      userAppId_ = other.userAppId_ != null ? other.userAppId_.Clone() : null;
      modelId_ = other.modelId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteModelRequest Clone() {
      return new DeleteModelRequest(this);
    }

    /// <summary>Field number for the "user_app_id" field.</summary>
    public const int UserAppIdFieldNumber = 1;
    private global::Clarifai.Api.UserAppIDSet userAppId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.UserAppIDSet UserAppId {
      get { return userAppId_; }
      set {
        userAppId_ = value;
      }
    }

    /// <summary>Field number for the "model_id" field.</summary>
    public const int ModelIdFieldNumber = 2;
    private string modelId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModelId {
      get { return modelId_; }
      set {
        modelId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteModelRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteModelRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserAppId, other.UserAppId)) return false;
      if (ModelId != other.ModelId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (userAppId_ != null) hash ^= UserAppId.GetHashCode();
      if (ModelId.Length != 0) hash ^= ModelId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (userAppId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserAppId);
      }
      if (ModelId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ModelId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (userAppId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserAppId);
      }
      if (ModelId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModelId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteModelRequest other) {
      if (other == null) {
        return;
      }
      if (other.userAppId_ != null) {
        if (userAppId_ == null) {
          UserAppId = new global::Clarifai.Api.UserAppIDSet();
        }
        UserAppId.MergeFrom(other.UserAppId);
      }
      if (other.ModelId.Length != 0) {
        ModelId = other.ModelId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (userAppId_ == null) {
              UserAppId = new global::Clarifai.Api.UserAppIDSet();
            }
            input.ReadMessage(UserAppId);
            break;
          }
          case 18: {
            ModelId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Request to delete several things by the list of ids.
  /// </summary>
  public sealed partial class DeleteModelsRequest : pb::IMessage<DeleteModelsRequest> {
    private static readonly pb::MessageParser<DeleteModelsRequest> _parser = new pb::MessageParser<DeleteModelsRequest>(() => new DeleteModelsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteModelsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[82]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteModelsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteModelsRequest(DeleteModelsRequest other) : this() {
      userAppId_ = other.userAppId_ != null ? other.userAppId_.Clone() : null;
      ids_ = other.ids_.Clone();
      deleteAll_ = other.deleteAll_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteModelsRequest Clone() {
      return new DeleteModelsRequest(this);
    }

    /// <summary>Field number for the "user_app_id" field.</summary>
    public const int UserAppIdFieldNumber = 1;
    private global::Clarifai.Api.UserAppIDSet userAppId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.UserAppIDSet UserAppId {
      get { return userAppId_; }
      set {
        userAppId_ = value;
      }
    }

    /// <summary>Field number for the "ids" field.</summary>
    public const int IdsFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_ids_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> ids_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Ids {
      get { return ids_; }
    }

    /// <summary>Field number for the "delete_all" field.</summary>
    public const int DeleteAllFieldNumber = 3;
    private bool deleteAll_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool DeleteAll {
      get { return deleteAll_; }
      set {
        deleteAll_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteModelsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteModelsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserAppId, other.UserAppId)) return false;
      if(!ids_.Equals(other.ids_)) return false;
      if (DeleteAll != other.DeleteAll) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (userAppId_ != null) hash ^= UserAppId.GetHashCode();
      hash ^= ids_.GetHashCode();
      if (DeleteAll != false) hash ^= DeleteAll.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (userAppId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserAppId);
      }
      ids_.WriteTo(output, _repeated_ids_codec);
      if (DeleteAll != false) {
        output.WriteRawTag(24);
        output.WriteBool(DeleteAll);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (userAppId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserAppId);
      }
      size += ids_.CalculateSize(_repeated_ids_codec);
      if (DeleteAll != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteModelsRequest other) {
      if (other == null) {
        return;
      }
      if (other.userAppId_ != null) {
        if (userAppId_ == null) {
          UserAppId = new global::Clarifai.Api.UserAppIDSet();
        }
        UserAppId.MergeFrom(other.UserAppId);
      }
      ids_.Add(other.ids_);
      if (other.DeleteAll != false) {
        DeleteAll = other.DeleteAll;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (userAppId_ == null) {
              UserAppId = new global::Clarifai.Api.UserAppIDSet();
            }
            input.ReadMessage(UserAppId);
            break;
          }
          case 18: {
            ids_.AddEntriesFrom(input, _repeated_ids_codec);
            break;
          }
          case 24: {
            DeleteAll = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Search over the available models.
  /// </summary>
  public sealed partial class PostModelsSearchesRequest : pb::IMessage<PostModelsSearchesRequest> {
    private static readonly pb::MessageParser<PostModelsSearchesRequest> _parser = new pb::MessageParser<PostModelsSearchesRequest>(() => new PostModelsSearchesRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PostModelsSearchesRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[83]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostModelsSearchesRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostModelsSearchesRequest(PostModelsSearchesRequest other) : this() {
      userAppId_ = other.userAppId_ != null ? other.userAppId_.Clone() : null;
      modelQuery_ = other.modelQuery_ != null ? other.modelQuery_.Clone() : null;
      pagination_ = other.pagination_ != null ? other.pagination_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostModelsSearchesRequest Clone() {
      return new PostModelsSearchesRequest(this);
    }

    /// <summary>Field number for the "user_app_id" field.</summary>
    public const int UserAppIdFieldNumber = 1;
    private global::Clarifai.Api.UserAppIDSet userAppId_;
    /// <summary>
    /// Ids present in the url of the request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.UserAppIDSet UserAppId {
      get { return userAppId_; }
      set {
        userAppId_ = value;
      }
    }

    /// <summary>Field number for the "model_query" field.</summary>
    public const int ModelQueryFieldNumber = 2;
    private global::Clarifai.Api.ModelQuery modelQuery_;
    /// <summary>
    /// The body of the request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.ModelQuery ModelQuery {
      get { return modelQuery_; }
      set {
        modelQuery_ = value;
      }
    }

    /// <summary>Field number for the "pagination" field.</summary>
    public const int PaginationFieldNumber = 3;
    private global::Clarifai.Api.Pagination pagination_;
    /// <summary>
    /// Pagination parameters here since there are no url args in this
    /// POST request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.Pagination Pagination {
      get { return pagination_; }
      set {
        pagination_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PostModelsSearchesRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PostModelsSearchesRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserAppId, other.UserAppId)) return false;
      if (!object.Equals(ModelQuery, other.ModelQuery)) return false;
      if (!object.Equals(Pagination, other.Pagination)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (userAppId_ != null) hash ^= UserAppId.GetHashCode();
      if (modelQuery_ != null) hash ^= ModelQuery.GetHashCode();
      if (pagination_ != null) hash ^= Pagination.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (userAppId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserAppId);
      }
      if (modelQuery_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ModelQuery);
      }
      if (pagination_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Pagination);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (userAppId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserAppId);
      }
      if (modelQuery_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ModelQuery);
      }
      if (pagination_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pagination);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PostModelsSearchesRequest other) {
      if (other == null) {
        return;
      }
      if (other.userAppId_ != null) {
        if (userAppId_ == null) {
          UserAppId = new global::Clarifai.Api.UserAppIDSet();
        }
        UserAppId.MergeFrom(other.UserAppId);
      }
      if (other.modelQuery_ != null) {
        if (modelQuery_ == null) {
          ModelQuery = new global::Clarifai.Api.ModelQuery();
        }
        ModelQuery.MergeFrom(other.ModelQuery);
      }
      if (other.pagination_ != null) {
        if (pagination_ == null) {
          Pagination = new global::Clarifai.Api.Pagination();
        }
        Pagination.MergeFrom(other.Pagination);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (userAppId_ == null) {
              UserAppId = new global::Clarifai.Api.UserAppIDSet();
            }
            input.ReadMessage(UserAppId);
            break;
          }
          case 18: {
            if (modelQuery_ == null) {
              ModelQuery = new global::Clarifai.Api.ModelQuery();
            }
            input.ReadMessage(ModelQuery);
            break;
          }
          case 26: {
            if (pagination_ == null) {
              Pagination = new global::Clarifai.Api.Pagination();
            }
            input.ReadMessage(Pagination);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SingleModelResponse : pb::IMessage<SingleModelResponse> {
    private static readonly pb::MessageParser<SingleModelResponse> _parser = new pb::MessageParser<SingleModelResponse>(() => new SingleModelResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SingleModelResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[84]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SingleModelResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SingleModelResponse(SingleModelResponse other) : this() {
      status_ = other.status_ != null ? other.status_.Clone() : null;
      model_ = other.model_ != null ? other.model_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SingleModelResponse Clone() {
      return new SingleModelResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::Clarifai.Api.Status.Status status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.Status.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "model" field.</summary>
    public const int ModelFieldNumber = 2;
    private global::Clarifai.Api.Model model_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.Model Model {
      get { return model_; }
      set {
        model_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SingleModelResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SingleModelResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Status, other.Status)) return false;
      if (!object.Equals(Model, other.Model)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (status_ != null) hash ^= Status.GetHashCode();
      if (model_ != null) hash ^= Model.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (status_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Status);
      }
      if (model_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Model);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      if (model_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Model);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SingleModelResponse other) {
      if (other == null) {
        return;
      }
      if (other.status_ != null) {
        if (status_ == null) {
          Status = new global::Clarifai.Api.Status.Status();
        }
        Status.MergeFrom(other.Status);
      }
      if (other.model_ != null) {
        if (model_ == null) {
          Model = new global::Clarifai.Api.Model();
        }
        Model.MergeFrom(other.Model);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (status_ == null) {
              Status = new global::Clarifai.Api.Status.Status();
            }
            input.ReadMessage(Status);
            break;
          }
          case 18: {
            if (model_ == null) {
              Model = new global::Clarifai.Api.Model();
            }
            input.ReadMessage(Model);
            break;
          }
        }
      }
    }

  }

  public sealed partial class MultiModelResponse : pb::IMessage<MultiModelResponse> {
    private static readonly pb::MessageParser<MultiModelResponse> _parser = new pb::MessageParser<MultiModelResponse>(() => new MultiModelResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MultiModelResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[85]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiModelResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiModelResponse(MultiModelResponse other) : this() {
      status_ = other.status_ != null ? other.status_.Clone() : null;
      models_ = other.models_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiModelResponse Clone() {
      return new MultiModelResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::Clarifai.Api.Status.Status status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.Status.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "models" field.</summary>
    public const int ModelsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Clarifai.Api.Model> _repeated_models_codec
        = pb::FieldCodec.ForMessage(18, global::Clarifai.Api.Model.Parser);
    private readonly pbc::RepeatedField<global::Clarifai.Api.Model> models_ = new pbc::RepeatedField<global::Clarifai.Api.Model>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Clarifai.Api.Model> Models {
      get { return models_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MultiModelResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MultiModelResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Status, other.Status)) return false;
      if(!models_.Equals(other.models_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (status_ != null) hash ^= Status.GetHashCode();
      hash ^= models_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (status_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Status);
      }
      models_.WriteTo(output, _repeated_models_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      size += models_.CalculateSize(_repeated_models_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MultiModelResponse other) {
      if (other == null) {
        return;
      }
      if (other.status_ != null) {
        if (status_ == null) {
          Status = new global::Clarifai.Api.Status.Status();
        }
        Status.MergeFrom(other.Status);
      }
      models_.Add(other.models_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (status_ == null) {
              Status = new global::Clarifai.Api.Status.Status();
            }
            input.ReadMessage(Status);
            break;
          }
          case 18: {
            models_.AddEntriesFrom(input, _repeated_models_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /////////////////////////////////////////////////////////////////////////////////
  /// Requests / Responses from /proto/clarifai/api/model_version.proto
  /////////////////////////////////////////////////////////////////////////////////
  /// </summary>
  public sealed partial class PatchModelVersionsRequest : pb::IMessage<PatchModelVersionsRequest> {
    private static readonly pb::MessageParser<PatchModelVersionsRequest> _parser = new pb::MessageParser<PatchModelVersionsRequest>(() => new PatchModelVersionsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PatchModelVersionsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[86]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PatchModelVersionsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PatchModelVersionsRequest(PatchModelVersionsRequest other) : this() {
      userAppId_ = other.userAppId_ != null ? other.userAppId_.Clone() : null;
      modelId_ = other.modelId_;
      modelVersions_ = other.modelVersions_.Clone();
      action_ = other.action_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PatchModelVersionsRequest Clone() {
      return new PatchModelVersionsRequest(this);
    }

    /// <summary>Field number for the "user_app_id" field.</summary>
    public const int UserAppIdFieldNumber = 1;
    private global::Clarifai.Api.UserAppIDSet userAppId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.UserAppIDSet UserAppId {
      get { return userAppId_; }
      set {
        userAppId_ = value;
      }
    }

    /// <summary>Field number for the "model_id" field.</summary>
    public const int ModelIdFieldNumber = 2;
    private string modelId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModelId {
      get { return modelId_; }
      set {
        modelId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "model_versions" field.</summary>
    public const int ModelVersionsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Clarifai.Api.ModelVersion> _repeated_modelVersions_codec
        = pb::FieldCodec.ForMessage(26, global::Clarifai.Api.ModelVersion.Parser);
    private readonly pbc::RepeatedField<global::Clarifai.Api.ModelVersion> modelVersions_ = new pbc::RepeatedField<global::Clarifai.Api.ModelVersion>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Clarifai.Api.ModelVersion> ModelVersions {
      get { return modelVersions_; }
    }

    /// <summary>Field number for the "action" field.</summary>
    public const int ActionFieldNumber = 4;
    private string action_ = "";
    /// <summary>
    /// The action to perform on the patched objects
    /// For now actions 'merge', 'overwrite', and 'remove' are supported
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Action {
      get { return action_; }
      set {
        action_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PatchModelVersionsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PatchModelVersionsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserAppId, other.UserAppId)) return false;
      if (ModelId != other.ModelId) return false;
      if(!modelVersions_.Equals(other.modelVersions_)) return false;
      if (Action != other.Action) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (userAppId_ != null) hash ^= UserAppId.GetHashCode();
      if (ModelId.Length != 0) hash ^= ModelId.GetHashCode();
      hash ^= modelVersions_.GetHashCode();
      if (Action.Length != 0) hash ^= Action.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (userAppId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserAppId);
      }
      if (ModelId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ModelId);
      }
      modelVersions_.WriteTo(output, _repeated_modelVersions_codec);
      if (Action.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Action);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (userAppId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserAppId);
      }
      if (ModelId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModelId);
      }
      size += modelVersions_.CalculateSize(_repeated_modelVersions_codec);
      if (Action.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Action);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PatchModelVersionsRequest other) {
      if (other == null) {
        return;
      }
      if (other.userAppId_ != null) {
        if (userAppId_ == null) {
          UserAppId = new global::Clarifai.Api.UserAppIDSet();
        }
        UserAppId.MergeFrom(other.UserAppId);
      }
      if (other.ModelId.Length != 0) {
        ModelId = other.ModelId;
      }
      modelVersions_.Add(other.modelVersions_);
      if (other.Action.Length != 0) {
        Action = other.Action;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (userAppId_ == null) {
              UserAppId = new global::Clarifai.Api.UserAppIDSet();
            }
            input.ReadMessage(UserAppId);
            break;
          }
          case 18: {
            ModelId = input.ReadString();
            break;
          }
          case 26: {
            modelVersions_.AddEntriesFrom(input, _repeated_modelVersions_codec);
            break;
          }
          case 34: {
            Action = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// NOTE: this is same as GetModelRequest but backend doesn't support sharing same
  /// request for different endpoints currently.
  /// </summary>
  public sealed partial class GetModelVersionRequest : pb::IMessage<GetModelVersionRequest> {
    private static readonly pb::MessageParser<GetModelVersionRequest> _parser = new pb::MessageParser<GetModelVersionRequest>(() => new GetModelVersionRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetModelVersionRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[87]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetModelVersionRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetModelVersionRequest(GetModelVersionRequest other) : this() {
      userAppId_ = other.userAppId_ != null ? other.userAppId_.Clone() : null;
      modelId_ = other.modelId_;
      versionId_ = other.versionId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetModelVersionRequest Clone() {
      return new GetModelVersionRequest(this);
    }

    /// <summary>Field number for the "user_app_id" field.</summary>
    public const int UserAppIdFieldNumber = 1;
    private global::Clarifai.Api.UserAppIDSet userAppId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.UserAppIDSet UserAppId {
      get { return userAppId_; }
      set {
        userAppId_ = value;
      }
    }

    /// <summary>Field number for the "model_id" field.</summary>
    public const int ModelIdFieldNumber = 2;
    private string modelId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModelId {
      get { return modelId_; }
      set {
        modelId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "version_id" field.</summary>
    public const int VersionIdFieldNumber = 3;
    private string versionId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string VersionId {
      get { return versionId_; }
      set {
        versionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetModelVersionRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetModelVersionRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserAppId, other.UserAppId)) return false;
      if (ModelId != other.ModelId) return false;
      if (VersionId != other.VersionId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (userAppId_ != null) hash ^= UserAppId.GetHashCode();
      if (ModelId.Length != 0) hash ^= ModelId.GetHashCode();
      if (VersionId.Length != 0) hash ^= VersionId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (userAppId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserAppId);
      }
      if (ModelId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ModelId);
      }
      if (VersionId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(VersionId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (userAppId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserAppId);
      }
      if (ModelId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModelId);
      }
      if (VersionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(VersionId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetModelVersionRequest other) {
      if (other == null) {
        return;
      }
      if (other.userAppId_ != null) {
        if (userAppId_ == null) {
          UserAppId = new global::Clarifai.Api.UserAppIDSet();
        }
        UserAppId.MergeFrom(other.UserAppId);
      }
      if (other.ModelId.Length != 0) {
        ModelId = other.ModelId;
      }
      if (other.VersionId.Length != 0) {
        VersionId = other.VersionId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (userAppId_ == null) {
              UserAppId = new global::Clarifai.Api.UserAppIDSet();
            }
            input.ReadMessage(UserAppId);
            break;
          }
          case 18: {
            ModelId = input.ReadString();
            break;
          }
          case 26: {
            VersionId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ListModelVersionsRequest : pb::IMessage<ListModelVersionsRequest> {
    private static readonly pb::MessageParser<ListModelVersionsRequest> _parser = new pb::MessageParser<ListModelVersionsRequest>(() => new ListModelVersionsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListModelVersionsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[88]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListModelVersionsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListModelVersionsRequest(ListModelVersionsRequest other) : this() {
      userAppId_ = other.userAppId_ != null ? other.userAppId_.Clone() : null;
      modelId_ = other.modelId_;
      page_ = other.page_;
      perPage_ = other.perPage_;
      conceptIds_ = other.conceptIds_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListModelVersionsRequest Clone() {
      return new ListModelVersionsRequest(this);
    }

    /// <summary>Field number for the "user_app_id" field.</summary>
    public const int UserAppIdFieldNumber = 1;
    private global::Clarifai.Api.UserAppIDSet userAppId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.UserAppIDSet UserAppId {
      get { return userAppId_; }
      set {
        userAppId_ = value;
      }
    }

    /// <summary>Field number for the "model_id" field.</summary>
    public const int ModelIdFieldNumber = 2;
    private string modelId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModelId {
      get { return modelId_; }
      set {
        modelId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "page" field.</summary>
    public const int PageFieldNumber = 3;
    private uint page_;
    /// <summary>
    /// (optional URL parameter) The page number. Pagination is used to split the results into chunks.
    /// Defaults to 1.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Page {
      get { return page_; }
      set {
        page_ = value;
      }
    }

    /// <summary>Field number for the "per_page" field.</summary>
    public const int PerPageFieldNumber = 4;
    private uint perPage_;
    /// <summary>
    /// (optional URL parameter) The number of results that will be contained in each page. Defaults
    /// to 128.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint PerPage {
      get { return perPage_; }
      set {
        perPage_ = value;
      }
    }

    /// <summary>Field number for the "concept_ids" field.</summary>
    public const int ConceptIdsFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _repeated_conceptIds_codec
        = pb::FieldCodec.ForString(42);
    private readonly pbc::RepeatedField<string> conceptIds_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// To list only the model versions that have these concept ids present in them.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> ConceptIds {
      get { return conceptIds_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListModelVersionsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListModelVersionsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserAppId, other.UserAppId)) return false;
      if (ModelId != other.ModelId) return false;
      if (Page != other.Page) return false;
      if (PerPage != other.PerPage) return false;
      if(!conceptIds_.Equals(other.conceptIds_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (userAppId_ != null) hash ^= UserAppId.GetHashCode();
      if (ModelId.Length != 0) hash ^= ModelId.GetHashCode();
      if (Page != 0) hash ^= Page.GetHashCode();
      if (PerPage != 0) hash ^= PerPage.GetHashCode();
      hash ^= conceptIds_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (userAppId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserAppId);
      }
      if (ModelId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ModelId);
      }
      if (Page != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Page);
      }
      if (PerPage != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(PerPage);
      }
      conceptIds_.WriteTo(output, _repeated_conceptIds_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (userAppId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserAppId);
      }
      if (ModelId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModelId);
      }
      if (Page != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Page);
      }
      if (PerPage != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PerPage);
      }
      size += conceptIds_.CalculateSize(_repeated_conceptIds_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListModelVersionsRequest other) {
      if (other == null) {
        return;
      }
      if (other.userAppId_ != null) {
        if (userAppId_ == null) {
          UserAppId = new global::Clarifai.Api.UserAppIDSet();
        }
        UserAppId.MergeFrom(other.UserAppId);
      }
      if (other.ModelId.Length != 0) {
        ModelId = other.ModelId;
      }
      if (other.Page != 0) {
        Page = other.Page;
      }
      if (other.PerPage != 0) {
        PerPage = other.PerPage;
      }
      conceptIds_.Add(other.conceptIds_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (userAppId_ == null) {
              UserAppId = new global::Clarifai.Api.UserAppIDSet();
            }
            input.ReadMessage(UserAppId);
            break;
          }
          case 18: {
            ModelId = input.ReadString();
            break;
          }
          case 24: {
            Page = input.ReadUInt32();
            break;
          }
          case 32: {
            PerPage = input.ReadUInt32();
            break;
          }
          case 42: {
            conceptIds_.AddEntriesFrom(input, _repeated_conceptIds_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class DeleteModelVersionRequest : pb::IMessage<DeleteModelVersionRequest> {
    private static readonly pb::MessageParser<DeleteModelVersionRequest> _parser = new pb::MessageParser<DeleteModelVersionRequest>(() => new DeleteModelVersionRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteModelVersionRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[89]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteModelVersionRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteModelVersionRequest(DeleteModelVersionRequest other) : this() {
      userAppId_ = other.userAppId_ != null ? other.userAppId_.Clone() : null;
      modelId_ = other.modelId_;
      versionId_ = other.versionId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteModelVersionRequest Clone() {
      return new DeleteModelVersionRequest(this);
    }

    /// <summary>Field number for the "user_app_id" field.</summary>
    public const int UserAppIdFieldNumber = 1;
    private global::Clarifai.Api.UserAppIDSet userAppId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.UserAppIDSet UserAppId {
      get { return userAppId_; }
      set {
        userAppId_ = value;
      }
    }

    /// <summary>Field number for the "model_id" field.</summary>
    public const int ModelIdFieldNumber = 3;
    private string modelId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModelId {
      get { return modelId_; }
      set {
        modelId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "version_id" field.</summary>
    public const int VersionIdFieldNumber = 4;
    private string versionId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string VersionId {
      get { return versionId_; }
      set {
        versionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteModelVersionRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteModelVersionRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserAppId, other.UserAppId)) return false;
      if (ModelId != other.ModelId) return false;
      if (VersionId != other.VersionId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (userAppId_ != null) hash ^= UserAppId.GetHashCode();
      if (ModelId.Length != 0) hash ^= ModelId.GetHashCode();
      if (VersionId.Length != 0) hash ^= VersionId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (userAppId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserAppId);
      }
      if (ModelId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ModelId);
      }
      if (VersionId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(VersionId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (userAppId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserAppId);
      }
      if (ModelId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModelId);
      }
      if (VersionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(VersionId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteModelVersionRequest other) {
      if (other == null) {
        return;
      }
      if (other.userAppId_ != null) {
        if (userAppId_ == null) {
          UserAppId = new global::Clarifai.Api.UserAppIDSet();
        }
        UserAppId.MergeFrom(other.UserAppId);
      }
      if (other.ModelId.Length != 0) {
        ModelId = other.ModelId;
      }
      if (other.VersionId.Length != 0) {
        VersionId = other.VersionId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (userAppId_ == null) {
              UserAppId = new global::Clarifai.Api.UserAppIDSet();
            }
            input.ReadMessage(UserAppId);
            break;
          }
          case 26: {
            ModelId = input.ReadString();
            break;
          }
          case 34: {
            VersionId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SingleModelVersionResponse : pb::IMessage<SingleModelVersionResponse> {
    private static readonly pb::MessageParser<SingleModelVersionResponse> _parser = new pb::MessageParser<SingleModelVersionResponse>(() => new SingleModelVersionResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SingleModelVersionResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[90]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SingleModelVersionResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SingleModelVersionResponse(SingleModelVersionResponse other) : this() {
      status_ = other.status_ != null ? other.status_.Clone() : null;
      modelVersion_ = other.modelVersion_ != null ? other.modelVersion_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SingleModelVersionResponse Clone() {
      return new SingleModelVersionResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::Clarifai.Api.Status.Status status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.Status.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "model_version" field.</summary>
    public const int ModelVersionFieldNumber = 2;
    private global::Clarifai.Api.ModelVersion modelVersion_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.ModelVersion ModelVersion {
      get { return modelVersion_; }
      set {
        modelVersion_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SingleModelVersionResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SingleModelVersionResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Status, other.Status)) return false;
      if (!object.Equals(ModelVersion, other.ModelVersion)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (status_ != null) hash ^= Status.GetHashCode();
      if (modelVersion_ != null) hash ^= ModelVersion.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (status_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Status);
      }
      if (modelVersion_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ModelVersion);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      if (modelVersion_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ModelVersion);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SingleModelVersionResponse other) {
      if (other == null) {
        return;
      }
      if (other.status_ != null) {
        if (status_ == null) {
          Status = new global::Clarifai.Api.Status.Status();
        }
        Status.MergeFrom(other.Status);
      }
      if (other.modelVersion_ != null) {
        if (modelVersion_ == null) {
          ModelVersion = new global::Clarifai.Api.ModelVersion();
        }
        ModelVersion.MergeFrom(other.ModelVersion);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (status_ == null) {
              Status = new global::Clarifai.Api.Status.Status();
            }
            input.ReadMessage(Status);
            break;
          }
          case 18: {
            if (modelVersion_ == null) {
              ModelVersion = new global::Clarifai.Api.ModelVersion();
            }
            input.ReadMessage(ModelVersion);
            break;
          }
        }
      }
    }

  }

  public sealed partial class MultiModelVersionResponse : pb::IMessage<MultiModelVersionResponse> {
    private static readonly pb::MessageParser<MultiModelVersionResponse> _parser = new pb::MessageParser<MultiModelVersionResponse>(() => new MultiModelVersionResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MultiModelVersionResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[91]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiModelVersionResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiModelVersionResponse(MultiModelVersionResponse other) : this() {
      status_ = other.status_ != null ? other.status_.Clone() : null;
      modelVersions_ = other.modelVersions_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiModelVersionResponse Clone() {
      return new MultiModelVersionResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::Clarifai.Api.Status.Status status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.Status.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "model_versions" field.</summary>
    public const int ModelVersionsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Clarifai.Api.ModelVersion> _repeated_modelVersions_codec
        = pb::FieldCodec.ForMessage(18, global::Clarifai.Api.ModelVersion.Parser);
    private readonly pbc::RepeatedField<global::Clarifai.Api.ModelVersion> modelVersions_ = new pbc::RepeatedField<global::Clarifai.Api.ModelVersion>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Clarifai.Api.ModelVersion> ModelVersions {
      get { return modelVersions_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MultiModelVersionResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MultiModelVersionResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Status, other.Status)) return false;
      if(!modelVersions_.Equals(other.modelVersions_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (status_ != null) hash ^= Status.GetHashCode();
      hash ^= modelVersions_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (status_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Status);
      }
      modelVersions_.WriteTo(output, _repeated_modelVersions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      size += modelVersions_.CalculateSize(_repeated_modelVersions_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MultiModelVersionResponse other) {
      if (other == null) {
        return;
      }
      if (other.status_ != null) {
        if (status_ == null) {
          Status = new global::Clarifai.Api.Status.Status();
        }
        Status.MergeFrom(other.Status);
      }
      modelVersions_.Add(other.modelVersions_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (status_ == null) {
              Status = new global::Clarifai.Api.Status.Status();
            }
            input.ReadMessage(Status);
            break;
          }
          case 18: {
            modelVersions_.AddEntriesFrom(input, _repeated_modelVersions_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Create (train) a new model version.
  /// </summary>
  public sealed partial class PostModelVersionsRequest : pb::IMessage<PostModelVersionsRequest> {
    private static readonly pb::MessageParser<PostModelVersionsRequest> _parser = new pb::MessageParser<PostModelVersionsRequest>(() => new PostModelVersionsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PostModelVersionsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[92]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostModelVersionsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostModelVersionsRequest(PostModelVersionsRequest other) : this() {
      userAppId_ = other.userAppId_ != null ? other.userAppId_.Clone() : null;
      modelId_ = other.modelId_;
      modelVersions_ = other.modelVersions_.Clone();
      search_ = other.search_ != null ? other.search_.Clone() : null;
      trainSearch_ = other.trainSearch_ != null ? other.trainSearch_.Clone() : null;
      testSearch_ = other.testSearch_ != null ? other.testSearch_.Clone() : null;
      evaluateAfterTraining_ = other.evaluateAfterTraining_;
      description_ = other.description_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostModelVersionsRequest Clone() {
      return new PostModelVersionsRequest(this);
    }

    /// <summary>Field number for the "user_app_id" field.</summary>
    public const int UserAppIdFieldNumber = 1;
    private global::Clarifai.Api.UserAppIDSet userAppId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.UserAppIDSet UserAppId {
      get { return userAppId_; }
      set {
        userAppId_ = value;
      }
    }

    /// <summary>Field number for the "model_id" field.</summary>
    public const int ModelIdFieldNumber = 2;
    private string modelId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModelId {
      get { return modelId_; }
      set {
        modelId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "model_versions" field.</summary>
    public const int ModelVersionsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Clarifai.Api.ModelVersion> _repeated_modelVersions_codec
        = pb::FieldCodec.ForMessage(26, global::Clarifai.Api.ModelVersion.Parser);
    private readonly pbc::RepeatedField<global::Clarifai.Api.ModelVersion> modelVersions_ = new pbc::RepeatedField<global::Clarifai.Api.ModelVersion>();
    /// <summary>
    /// This lets you post an existing model version rather than training a new one.
    /// For internal Clarifai use only to start.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Clarifai.Api.ModelVersion> ModelVersions {
      get { return modelVersions_; }
    }

    /// <summary>Field number for the "search" field.</summary>
    public const int SearchFieldNumber = 4;
    private global::Clarifai.Api.Search search_;
    /// <summary>
    /// Use this to filter inputs that are used in training
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.Search Search {
      get { return search_; }
      set {
        search_ = value;
      }
    }

    /// <summary>Field number for the "train_search" field.</summary>
    public const int TrainSearchFieldNumber = 5;
    private global::Clarifai.Api.Search trainSearch_;
    /// <summary>
    ///train_search is used to specify what data to train on.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.Search TrainSearch {
      get { return trainSearch_; }
      set {
        trainSearch_ = value;
      }
    }

    /// <summary>Field number for the "test_search" field.</summary>
    public const int TestSearchFieldNumber = 6;
    private global::Clarifai.Api.Search testSearch_;
    /// <summary>
    ///test_search is used to specify what data to test on.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.Search TestSearch {
      get { return testSearch_; }
      set {
        testSearch_ = value;
      }
    }

    /// <summary>Field number for the "evaluate_after_training" field.</summary>
    public const int EvaluateAfterTrainingFieldNumber = 7;
    private bool evaluateAfterTraining_;
    /// <summary>
    /// whether to evaluate the transfer trained model after training
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool EvaluateAfterTraining {
      get { return evaluateAfterTraining_; }
      set {
        evaluateAfterTraining_ = value;
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 8;
    private string description_ = "";
    /// <summary>
    /// Description about this training run
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PostModelVersionsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PostModelVersionsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserAppId, other.UserAppId)) return false;
      if (ModelId != other.ModelId) return false;
      if(!modelVersions_.Equals(other.modelVersions_)) return false;
      if (!object.Equals(Search, other.Search)) return false;
      if (!object.Equals(TrainSearch, other.TrainSearch)) return false;
      if (!object.Equals(TestSearch, other.TestSearch)) return false;
      if (EvaluateAfterTraining != other.EvaluateAfterTraining) return false;
      if (Description != other.Description) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (userAppId_ != null) hash ^= UserAppId.GetHashCode();
      if (ModelId.Length != 0) hash ^= ModelId.GetHashCode();
      hash ^= modelVersions_.GetHashCode();
      if (search_ != null) hash ^= Search.GetHashCode();
      if (trainSearch_ != null) hash ^= TrainSearch.GetHashCode();
      if (testSearch_ != null) hash ^= TestSearch.GetHashCode();
      if (EvaluateAfterTraining != false) hash ^= EvaluateAfterTraining.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (userAppId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserAppId);
      }
      if (ModelId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ModelId);
      }
      modelVersions_.WriteTo(output, _repeated_modelVersions_codec);
      if (search_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Search);
      }
      if (trainSearch_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(TrainSearch);
      }
      if (testSearch_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(TestSearch);
      }
      if (EvaluateAfterTraining != false) {
        output.WriteRawTag(56);
        output.WriteBool(EvaluateAfterTraining);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Description);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (userAppId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserAppId);
      }
      if (ModelId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModelId);
      }
      size += modelVersions_.CalculateSize(_repeated_modelVersions_codec);
      if (search_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Search);
      }
      if (trainSearch_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TrainSearch);
      }
      if (testSearch_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TestSearch);
      }
      if (EvaluateAfterTraining != false) {
        size += 1 + 1;
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PostModelVersionsRequest other) {
      if (other == null) {
        return;
      }
      if (other.userAppId_ != null) {
        if (userAppId_ == null) {
          UserAppId = new global::Clarifai.Api.UserAppIDSet();
        }
        UserAppId.MergeFrom(other.UserAppId);
      }
      if (other.ModelId.Length != 0) {
        ModelId = other.ModelId;
      }
      modelVersions_.Add(other.modelVersions_);
      if (other.search_ != null) {
        if (search_ == null) {
          Search = new global::Clarifai.Api.Search();
        }
        Search.MergeFrom(other.Search);
      }
      if (other.trainSearch_ != null) {
        if (trainSearch_ == null) {
          TrainSearch = new global::Clarifai.Api.Search();
        }
        TrainSearch.MergeFrom(other.TrainSearch);
      }
      if (other.testSearch_ != null) {
        if (testSearch_ == null) {
          TestSearch = new global::Clarifai.Api.Search();
        }
        TestSearch.MergeFrom(other.TestSearch);
      }
      if (other.EvaluateAfterTraining != false) {
        EvaluateAfterTraining = other.EvaluateAfterTraining;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (userAppId_ == null) {
              UserAppId = new global::Clarifai.Api.UserAppIDSet();
            }
            input.ReadMessage(UserAppId);
            break;
          }
          case 18: {
            ModelId = input.ReadString();
            break;
          }
          case 26: {
            modelVersions_.AddEntriesFrom(input, _repeated_modelVersions_codec);
            break;
          }
          case 34: {
            if (search_ == null) {
              Search = new global::Clarifai.Api.Search();
            }
            input.ReadMessage(Search);
            break;
          }
          case 42: {
            if (trainSearch_ == null) {
              TrainSearch = new global::Clarifai.Api.Search();
            }
            input.ReadMessage(TrainSearch);
            break;
          }
          case 50: {
            if (testSearch_ == null) {
              TestSearch = new global::Clarifai.Api.Search();
            }
            input.ReadMessage(TestSearch);
            break;
          }
          case 56: {
            EvaluateAfterTraining = input.ReadBool();
            break;
          }
          case 66: {
            Description = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Evaluate this model version.
  /// </summary>
  public sealed partial class PostModelVersionMetricsRequest : pb::IMessage<PostModelVersionMetricsRequest> {
    private static readonly pb::MessageParser<PostModelVersionMetricsRequest> _parser = new pb::MessageParser<PostModelVersionMetricsRequest>(() => new PostModelVersionMetricsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PostModelVersionMetricsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[93]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostModelVersionMetricsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostModelVersionMetricsRequest(PostModelVersionMetricsRequest other) : this() {
      userAppId_ = other.userAppId_ != null ? other.userAppId_.Clone() : null;
      modelId_ = other.modelId_;
      versionId_ = other.versionId_;
      maxExamples_ = other.maxExamples_;
      testSearch_ = other.testSearch_ != null ? other.testSearch_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostModelVersionMetricsRequest Clone() {
      return new PostModelVersionMetricsRequest(this);
    }

    /// <summary>Field number for the "user_app_id" field.</summary>
    public const int UserAppIdFieldNumber = 1;
    private global::Clarifai.Api.UserAppIDSet userAppId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.UserAppIDSet UserAppId {
      get { return userAppId_; }
      set {
        userAppId_ = value;
      }
    }

    /// <summary>Field number for the "model_id" field.</summary>
    public const int ModelIdFieldNumber = 2;
    private string modelId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModelId {
      get { return modelId_; }
      set {
        modelId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "version_id" field.</summary>
    public const int VersionIdFieldNumber = 3;
    private string versionId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string VersionId {
      get { return versionId_; }
      set {
        versionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "max_examples" field.</summary>
    public const int MaxExamplesFieldNumber = 4;
    private uint maxExamples_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint MaxExamples {
      get { return maxExamples_; }
      set {
        maxExamples_ = value;
      }
    }

    /// <summary>Field number for the "test_search" field.</summary>
    public const int TestSearchFieldNumber = 5;
    private global::Clarifai.Api.Search testSearch_;
    /// <summary>
    /// Use this to filter inputs that are used in evaluation
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.Search TestSearch {
      get { return testSearch_; }
      set {
        testSearch_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PostModelVersionMetricsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PostModelVersionMetricsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserAppId, other.UserAppId)) return false;
      if (ModelId != other.ModelId) return false;
      if (VersionId != other.VersionId) return false;
      if (MaxExamples != other.MaxExamples) return false;
      if (!object.Equals(TestSearch, other.TestSearch)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (userAppId_ != null) hash ^= UserAppId.GetHashCode();
      if (ModelId.Length != 0) hash ^= ModelId.GetHashCode();
      if (VersionId.Length != 0) hash ^= VersionId.GetHashCode();
      if (MaxExamples != 0) hash ^= MaxExamples.GetHashCode();
      if (testSearch_ != null) hash ^= TestSearch.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (userAppId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserAppId);
      }
      if (ModelId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ModelId);
      }
      if (VersionId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(VersionId);
      }
      if (MaxExamples != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(MaxExamples);
      }
      if (testSearch_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(TestSearch);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (userAppId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserAppId);
      }
      if (ModelId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModelId);
      }
      if (VersionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(VersionId);
      }
      if (MaxExamples != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MaxExamples);
      }
      if (testSearch_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TestSearch);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PostModelVersionMetricsRequest other) {
      if (other == null) {
        return;
      }
      if (other.userAppId_ != null) {
        if (userAppId_ == null) {
          UserAppId = new global::Clarifai.Api.UserAppIDSet();
        }
        UserAppId.MergeFrom(other.UserAppId);
      }
      if (other.ModelId.Length != 0) {
        ModelId = other.ModelId;
      }
      if (other.VersionId.Length != 0) {
        VersionId = other.VersionId;
      }
      if (other.MaxExamples != 0) {
        MaxExamples = other.MaxExamples;
      }
      if (other.testSearch_ != null) {
        if (testSearch_ == null) {
          TestSearch = new global::Clarifai.Api.Search();
        }
        TestSearch.MergeFrom(other.TestSearch);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (userAppId_ == null) {
              UserAppId = new global::Clarifai.Api.UserAppIDSet();
            }
            input.ReadMessage(UserAppId);
            break;
          }
          case 18: {
            ModelId = input.ReadString();
            break;
          }
          case 26: {
            VersionId = input.ReadString();
            break;
          }
          case 32: {
            MaxExamples = input.ReadUInt32();
            break;
          }
          case 42: {
            if (testSearch_ == null) {
              TestSearch = new global::Clarifai.Api.Search();
            }
            input.ReadMessage(TestSearch);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Get the already computed evaluation metrics for this model
  /// version.
  /// </summary>
  public sealed partial class GetModelVersionMetricsRequest : pb::IMessage<GetModelVersionMetricsRequest> {
    private static readonly pb::MessageParser<GetModelVersionMetricsRequest> _parser = new pb::MessageParser<GetModelVersionMetricsRequest>(() => new GetModelVersionMetricsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetModelVersionMetricsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[94]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetModelVersionMetricsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetModelVersionMetricsRequest(GetModelVersionMetricsRequest other) : this() {
      userAppId_ = other.userAppId_ != null ? other.userAppId_.Clone() : null;
      modelId_ = other.modelId_;
      versionId_ = other.versionId_;
      fields_ = other.fields_ != null ? other.fields_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetModelVersionMetricsRequest Clone() {
      return new GetModelVersionMetricsRequest(this);
    }

    /// <summary>Field number for the "user_app_id" field.</summary>
    public const int UserAppIdFieldNumber = 1;
    private global::Clarifai.Api.UserAppIDSet userAppId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.UserAppIDSet UserAppId {
      get { return userAppId_; }
      set {
        userAppId_ = value;
      }
    }

    /// <summary>Field number for the "model_id" field.</summary>
    public const int ModelIdFieldNumber = 2;
    private string modelId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModelId {
      get { return modelId_; }
      set {
        modelId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "version_id" field.</summary>
    public const int VersionIdFieldNumber = 3;
    private string versionId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string VersionId {
      get { return versionId_; }
      set {
        versionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "fields" field.</summary>
    public const int FieldsFieldNumber = 4;
    private global::Clarifai.Api.FieldsValue fields_;
    /// <summary>
    /// Any of the fields you wish to return from multiclass_metrics
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.FieldsValue Fields {
      get { return fields_; }
      set {
        fields_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetModelVersionMetricsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetModelVersionMetricsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserAppId, other.UserAppId)) return false;
      if (ModelId != other.ModelId) return false;
      if (VersionId != other.VersionId) return false;
      if (!object.Equals(Fields, other.Fields)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (userAppId_ != null) hash ^= UserAppId.GetHashCode();
      if (ModelId.Length != 0) hash ^= ModelId.GetHashCode();
      if (VersionId.Length != 0) hash ^= VersionId.GetHashCode();
      if (fields_ != null) hash ^= Fields.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (userAppId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserAppId);
      }
      if (ModelId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ModelId);
      }
      if (VersionId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(VersionId);
      }
      if (fields_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Fields);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (userAppId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserAppId);
      }
      if (ModelId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModelId);
      }
      if (VersionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(VersionId);
      }
      if (fields_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Fields);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetModelVersionMetricsRequest other) {
      if (other == null) {
        return;
      }
      if (other.userAppId_ != null) {
        if (userAppId_ == null) {
          UserAppId = new global::Clarifai.Api.UserAppIDSet();
        }
        UserAppId.MergeFrom(other.UserAppId);
      }
      if (other.ModelId.Length != 0) {
        ModelId = other.ModelId;
      }
      if (other.VersionId.Length != 0) {
        VersionId = other.VersionId;
      }
      if (other.fields_ != null) {
        if (fields_ == null) {
          Fields = new global::Clarifai.Api.FieldsValue();
        }
        Fields.MergeFrom(other.Fields);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (userAppId_ == null) {
              UserAppId = new global::Clarifai.Api.UserAppIDSet();
            }
            input.ReadMessage(UserAppId);
            break;
          }
          case 18: {
            ModelId = input.ReadString();
            break;
          }
          case 26: {
            VersionId = input.ReadString();
            break;
          }
          case 34: {
            if (fields_ == null) {
              Fields = new global::Clarifai.Api.FieldsValue();
            }
            input.ReadMessage(Fields);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetModelTypeRequest : pb::IMessage<GetModelTypeRequest> {
    private static readonly pb::MessageParser<GetModelTypeRequest> _parser = new pb::MessageParser<GetModelTypeRequest>(() => new GetModelTypeRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetModelTypeRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[95]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetModelTypeRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetModelTypeRequest(GetModelTypeRequest other) : this() {
      userAppId_ = other.userAppId_ != null ? other.userAppId_.Clone() : null;
      modelTypeId_ = other.modelTypeId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetModelTypeRequest Clone() {
      return new GetModelTypeRequest(this);
    }

    /// <summary>Field number for the "user_app_id" field.</summary>
    public const int UserAppIdFieldNumber = 1;
    private global::Clarifai.Api.UserAppIDSet userAppId_;
    /// <summary>
    /// use and app combo. Not really used for this endpoint at this time so may go away in future.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.UserAppIDSet UserAppId {
      get { return userAppId_; }
      set {
        userAppId_ = value;
      }
    }

    /// <summary>Field number for the "model_type_id" field.</summary>
    public const int ModelTypeIdFieldNumber = 2;
    private string modelTypeId_ = "";
    /// <summary>
    /// The specific ModelType.Id you want to retrieve.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModelTypeId {
      get { return modelTypeId_; }
      set {
        modelTypeId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetModelTypeRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetModelTypeRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserAppId, other.UserAppId)) return false;
      if (ModelTypeId != other.ModelTypeId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (userAppId_ != null) hash ^= UserAppId.GetHashCode();
      if (ModelTypeId.Length != 0) hash ^= ModelTypeId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (userAppId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserAppId);
      }
      if (ModelTypeId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ModelTypeId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (userAppId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserAppId);
      }
      if (ModelTypeId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModelTypeId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetModelTypeRequest other) {
      if (other == null) {
        return;
      }
      if (other.userAppId_ != null) {
        if (userAppId_ == null) {
          UserAppId = new global::Clarifai.Api.UserAppIDSet();
        }
        UserAppId.MergeFrom(other.UserAppId);
      }
      if (other.ModelTypeId.Length != 0) {
        ModelTypeId = other.ModelTypeId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (userAppId_ == null) {
              UserAppId = new global::Clarifai.Api.UserAppIDSet();
            }
            input.ReadMessage(UserAppId);
            break;
          }
          case 18: {
            ModelTypeId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ListModelTypesRequest : pb::IMessage<ListModelTypesRequest> {
    private static readonly pb::MessageParser<ListModelTypesRequest> _parser = new pb::MessageParser<ListModelTypesRequest>(() => new ListModelTypesRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListModelTypesRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[96]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListModelTypesRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListModelTypesRequest(ListModelTypesRequest other) : this() {
      userAppId_ = other.userAppId_ != null ? other.userAppId_.Clone() : null;
      page_ = other.page_;
      perPage_ = other.perPage_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListModelTypesRequest Clone() {
      return new ListModelTypesRequest(this);
    }

    /// <summary>Field number for the "user_app_id" field.</summary>
    public const int UserAppIdFieldNumber = 1;
    private global::Clarifai.Api.UserAppIDSet userAppId_;
    /// <summary>
    /// use and app combo. Not really used for this endpoint at this time so may go away in future.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.UserAppIDSet UserAppId {
      get { return userAppId_; }
      set {
        userAppId_ = value;
      }
    }

    /// <summary>Field number for the "page" field.</summary>
    public const int PageFieldNumber = 2;
    private uint page_;
    /// <summary>
    /// (optional URL parameter) The page number. Pagination is used to split the results into chunks.
    /// Defaults to 1.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Page {
      get { return page_; }
      set {
        page_ = value;
      }
    }

    /// <summary>Field number for the "per_page" field.</summary>
    public const int PerPageFieldNumber = 3;
    private uint perPage_;
    /// <summary>
    /// (optional URL parameter) The number of results that will be contained in each page. Defaults
    /// to 128.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint PerPage {
      get { return perPage_; }
      set {
        perPage_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListModelTypesRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListModelTypesRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserAppId, other.UserAppId)) return false;
      if (Page != other.Page) return false;
      if (PerPage != other.PerPage) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (userAppId_ != null) hash ^= UserAppId.GetHashCode();
      if (Page != 0) hash ^= Page.GetHashCode();
      if (PerPage != 0) hash ^= PerPage.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (userAppId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserAppId);
      }
      if (Page != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Page);
      }
      if (PerPage != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(PerPage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (userAppId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserAppId);
      }
      if (Page != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Page);
      }
      if (PerPage != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PerPage);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListModelTypesRequest other) {
      if (other == null) {
        return;
      }
      if (other.userAppId_ != null) {
        if (userAppId_ == null) {
          UserAppId = new global::Clarifai.Api.UserAppIDSet();
        }
        UserAppId.MergeFrom(other.UserAppId);
      }
      if (other.Page != 0) {
        Page = other.Page;
      }
      if (other.PerPage != 0) {
        PerPage = other.PerPage;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (userAppId_ == null) {
              UserAppId = new global::Clarifai.Api.UserAppIDSet();
            }
            input.ReadMessage(UserAppId);
            break;
          }
          case 16: {
            Page = input.ReadUInt32();
            break;
          }
          case 24: {
            PerPage = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ListOpenSourceLicensesRequest : pb::IMessage<ListOpenSourceLicensesRequest> {
    private static readonly pb::MessageParser<ListOpenSourceLicensesRequest> _parser = new pb::MessageParser<ListOpenSourceLicensesRequest>(() => new ListOpenSourceLicensesRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListOpenSourceLicensesRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[97]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListOpenSourceLicensesRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListOpenSourceLicensesRequest(ListOpenSourceLicensesRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListOpenSourceLicensesRequest Clone() {
      return new ListOpenSourceLicensesRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListOpenSourceLicensesRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListOpenSourceLicensesRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListOpenSourceLicensesRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class ListOpenSourceLicensesResponse : pb::IMessage<ListOpenSourceLicensesResponse> {
    private static readonly pb::MessageParser<ListOpenSourceLicensesResponse> _parser = new pb::MessageParser<ListOpenSourceLicensesResponse>(() => new ListOpenSourceLicensesResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListOpenSourceLicensesResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[98]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListOpenSourceLicensesResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListOpenSourceLicensesResponse(ListOpenSourceLicensesResponse other) : this() {
      status_ = other.status_ != null ? other.status_.Clone() : null;
      licenses_ = other.licenses_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListOpenSourceLicensesResponse Clone() {
      return new ListOpenSourceLicensesResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::Clarifai.Api.Status.Status status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.Status.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "licenses" field.</summary>
    public const int LicensesFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_licenses_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> licenses_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Licenses {
      get { return licenses_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListOpenSourceLicensesResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListOpenSourceLicensesResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Status, other.Status)) return false;
      if(!licenses_.Equals(other.licenses_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (status_ != null) hash ^= Status.GetHashCode();
      hash ^= licenses_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (status_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Status);
      }
      licenses_.WriteTo(output, _repeated_licenses_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      size += licenses_.CalculateSize(_repeated_licenses_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListOpenSourceLicensesResponse other) {
      if (other == null) {
        return;
      }
      if (other.status_ != null) {
        if (status_ == null) {
          Status = new global::Clarifai.Api.Status.Status();
        }
        Status.MergeFrom(other.Status);
      }
      licenses_.Add(other.licenses_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (status_ == null) {
              Status = new global::Clarifai.Api.Status.Status();
            }
            input.ReadMessage(Status);
            break;
          }
          case 18: {
            licenses_.AddEntriesFrom(input, _repeated_licenses_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SingleModelTypeResponse : pb::IMessage<SingleModelTypeResponse> {
    private static readonly pb::MessageParser<SingleModelTypeResponse> _parser = new pb::MessageParser<SingleModelTypeResponse>(() => new SingleModelTypeResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SingleModelTypeResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[99]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SingleModelTypeResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SingleModelTypeResponse(SingleModelTypeResponse other) : this() {
      status_ = other.status_ != null ? other.status_.Clone() : null;
      modelType_ = other.modelType_ != null ? other.modelType_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SingleModelTypeResponse Clone() {
      return new SingleModelTypeResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::Clarifai.Api.Status.Status status_;
    /// <summary>
    /// Status of the response.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.Status.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "model_type" field.</summary>
    public const int ModelTypeFieldNumber = 2;
    private global::Clarifai.Api.ModelType modelType_;
    /// <summary>
    /// The retrieved ModelType object. .
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.ModelType ModelType {
      get { return modelType_; }
      set {
        modelType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SingleModelTypeResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SingleModelTypeResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Status, other.Status)) return false;
      if (!object.Equals(ModelType, other.ModelType)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (status_ != null) hash ^= Status.GetHashCode();
      if (modelType_ != null) hash ^= ModelType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (status_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Status);
      }
      if (modelType_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ModelType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      if (modelType_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ModelType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SingleModelTypeResponse other) {
      if (other == null) {
        return;
      }
      if (other.status_ != null) {
        if (status_ == null) {
          Status = new global::Clarifai.Api.Status.Status();
        }
        Status.MergeFrom(other.Status);
      }
      if (other.modelType_ != null) {
        if (modelType_ == null) {
          ModelType = new global::Clarifai.Api.ModelType();
        }
        ModelType.MergeFrom(other.ModelType);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (status_ == null) {
              Status = new global::Clarifai.Api.Status.Status();
            }
            input.ReadMessage(Status);
            break;
          }
          case 18: {
            if (modelType_ == null) {
              ModelType = new global::Clarifai.Api.ModelType();
            }
            input.ReadMessage(ModelType);
            break;
          }
        }
      }
    }

  }

  public sealed partial class MultiModelTypeResponse : pb::IMessage<MultiModelTypeResponse> {
    private static readonly pb::MessageParser<MultiModelTypeResponse> _parser = new pb::MessageParser<MultiModelTypeResponse>(() => new MultiModelTypeResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MultiModelTypeResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[100]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiModelTypeResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiModelTypeResponse(MultiModelTypeResponse other) : this() {
      status_ = other.status_ != null ? other.status_.Clone() : null;
      modelTypes_ = other.modelTypes_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiModelTypeResponse Clone() {
      return new MultiModelTypeResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::Clarifai.Api.Status.Status status_;
    /// <summary>
    /// Status of the response.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.Status.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "model_types" field.</summary>
    public const int ModelTypesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Clarifai.Api.ModelType> _repeated_modelTypes_codec
        = pb::FieldCodec.ForMessage(18, global::Clarifai.Api.ModelType.Parser);
    private readonly pbc::RepeatedField<global::Clarifai.Api.ModelType> modelTypes_ = new pbc::RepeatedField<global::Clarifai.Api.ModelType>();
    /// <summary>
    /// List of ModelType objects.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Clarifai.Api.ModelType> ModelTypes {
      get { return modelTypes_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MultiModelTypeResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MultiModelTypeResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Status, other.Status)) return false;
      if(!modelTypes_.Equals(other.modelTypes_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (status_ != null) hash ^= Status.GetHashCode();
      hash ^= modelTypes_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (status_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Status);
      }
      modelTypes_.WriteTo(output, _repeated_modelTypes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      size += modelTypes_.CalculateSize(_repeated_modelTypes_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MultiModelTypeResponse other) {
      if (other == null) {
        return;
      }
      if (other.status_ != null) {
        if (status_ == null) {
          Status = new global::Clarifai.Api.Status.Status();
        }
        Status.MergeFrom(other.Status);
      }
      modelTypes_.Add(other.modelTypes_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (status_ == null) {
              Status = new global::Clarifai.Api.Status.Status();
            }
            input.ReadMessage(Status);
            break;
          }
          case 18: {
            modelTypes_.AddEntriesFrom(input, _repeated_modelTypes_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /////////////////////////////////////////////////////////////////////////////////
  /// Requests / Responses for Model Version Input Examples
  /////////////////////////////////////////////////////////////////////////////////
  /// </summary>
  public sealed partial class GetModelVersionInputExampleRequest : pb::IMessage<GetModelVersionInputExampleRequest> {
    private static readonly pb::MessageParser<GetModelVersionInputExampleRequest> _parser = new pb::MessageParser<GetModelVersionInputExampleRequest>(() => new GetModelVersionInputExampleRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetModelVersionInputExampleRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[101]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetModelVersionInputExampleRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetModelVersionInputExampleRequest(GetModelVersionInputExampleRequest other) : this() {
      userAppId_ = other.userAppId_ != null ? other.userAppId_.Clone() : null;
      modelId_ = other.modelId_;
      modelVersionId_ = other.modelVersionId_;
      exampleId_ = other.exampleId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetModelVersionInputExampleRequest Clone() {
      return new GetModelVersionInputExampleRequest(this);
    }

    /// <summary>Field number for the "user_app_id" field.</summary>
    public const int UserAppIdFieldNumber = 1;
    private global::Clarifai.Api.UserAppIDSet userAppId_;
    /// <summary>
    /// authorization field  (contains app/user id info)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.UserAppIDSet UserAppId {
      get { return userAppId_; }
      set {
        userAppId_ = value;
      }
    }

    /// <summary>Field number for the "model_id" field.</summary>
    public const int ModelIdFieldNumber = 2;
    private string modelId_ = "";
    /// <summary>
    /// id of model the example belongs to
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModelId {
      get { return modelId_; }
      set {
        modelId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "model_version_id" field.</summary>
    public const int ModelVersionIdFieldNumber = 3;
    private string modelVersionId_ = "";
    /// <summary>
    /// specific version the example belongs to
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModelVersionId {
      get { return modelVersionId_; }
      set {
        modelVersionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "example_id" field.</summary>
    public const int ExampleIdFieldNumber = 4;
    private string exampleId_ = "";
    /// <summary>
    /// Id of example to fetch
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ExampleId {
      get { return exampleId_; }
      set {
        exampleId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetModelVersionInputExampleRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetModelVersionInputExampleRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserAppId, other.UserAppId)) return false;
      if (ModelId != other.ModelId) return false;
      if (ModelVersionId != other.ModelVersionId) return false;
      if (ExampleId != other.ExampleId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (userAppId_ != null) hash ^= UserAppId.GetHashCode();
      if (ModelId.Length != 0) hash ^= ModelId.GetHashCode();
      if (ModelVersionId.Length != 0) hash ^= ModelVersionId.GetHashCode();
      if (ExampleId.Length != 0) hash ^= ExampleId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (userAppId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserAppId);
      }
      if (ModelId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ModelId);
      }
      if (ModelVersionId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ModelVersionId);
      }
      if (ExampleId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ExampleId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (userAppId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserAppId);
      }
      if (ModelId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModelId);
      }
      if (ModelVersionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModelVersionId);
      }
      if (ExampleId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ExampleId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetModelVersionInputExampleRequest other) {
      if (other == null) {
        return;
      }
      if (other.userAppId_ != null) {
        if (userAppId_ == null) {
          UserAppId = new global::Clarifai.Api.UserAppIDSet();
        }
        UserAppId.MergeFrom(other.UserAppId);
      }
      if (other.ModelId.Length != 0) {
        ModelId = other.ModelId;
      }
      if (other.ModelVersionId.Length != 0) {
        ModelVersionId = other.ModelVersionId;
      }
      if (other.ExampleId.Length != 0) {
        ExampleId = other.ExampleId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (userAppId_ == null) {
              UserAppId = new global::Clarifai.Api.UserAppIDSet();
            }
            input.ReadMessage(UserAppId);
            break;
          }
          case 18: {
            ModelId = input.ReadString();
            break;
          }
          case 26: {
            ModelVersionId = input.ReadString();
            break;
          }
          case 34: {
            ExampleId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ListModelVersionInputExamplesRequest : pb::IMessage<ListModelVersionInputExamplesRequest> {
    private static readonly pb::MessageParser<ListModelVersionInputExamplesRequest> _parser = new pb::MessageParser<ListModelVersionInputExamplesRequest>(() => new ListModelVersionInputExamplesRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListModelVersionInputExamplesRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[102]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListModelVersionInputExamplesRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListModelVersionInputExamplesRequest(ListModelVersionInputExamplesRequest other) : this() {
      userAppId_ = other.userAppId_ != null ? other.userAppId_.Clone() : null;
      modelId_ = other.modelId_;
      modelVersionId_ = other.modelVersionId_;
      page_ = other.page_;
      perPage_ = other.perPage_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListModelVersionInputExamplesRequest Clone() {
      return new ListModelVersionInputExamplesRequest(this);
    }

    /// <summary>Field number for the "user_app_id" field.</summary>
    public const int UserAppIdFieldNumber = 1;
    private global::Clarifai.Api.UserAppIDSet userAppId_;
    /// <summary>
    /// authorization field  (contains app/user id info)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.UserAppIDSet UserAppId {
      get { return userAppId_; }
      set {
        userAppId_ = value;
      }
    }

    /// <summary>Field number for the "model_id" field.</summary>
    public const int ModelIdFieldNumber = 2;
    private string modelId_ = "";
    /// <summary>
    /// id of model the example belongs to
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModelId {
      get { return modelId_; }
      set {
        modelId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "model_version_id" field.</summary>
    public const int ModelVersionIdFieldNumber = 3;
    private string modelVersionId_ = "";
    /// <summary>
    /// specific version the example belongs to
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModelVersionId {
      get { return modelVersionId_; }
      set {
        modelVersionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "page" field.</summary>
    public const int PageFieldNumber = 4;
    private uint page_;
    /// <summary>
    /// Optional, defaults to 1.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Page {
      get { return page_; }
      set {
        page_ = value;
      }
    }

    /// <summary>Field number for the "per_page" field.</summary>
    public const int PerPageFieldNumber = 5;
    private uint perPage_;
    /// <summary>
    /// Optional, defaults to 128 references per page.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint PerPage {
      get { return perPage_; }
      set {
        perPage_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListModelVersionInputExamplesRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListModelVersionInputExamplesRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserAppId, other.UserAppId)) return false;
      if (ModelId != other.ModelId) return false;
      if (ModelVersionId != other.ModelVersionId) return false;
      if (Page != other.Page) return false;
      if (PerPage != other.PerPage) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (userAppId_ != null) hash ^= UserAppId.GetHashCode();
      if (ModelId.Length != 0) hash ^= ModelId.GetHashCode();
      if (ModelVersionId.Length != 0) hash ^= ModelVersionId.GetHashCode();
      if (Page != 0) hash ^= Page.GetHashCode();
      if (PerPage != 0) hash ^= PerPage.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (userAppId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserAppId);
      }
      if (ModelId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ModelId);
      }
      if (ModelVersionId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ModelVersionId);
      }
      if (Page != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(Page);
      }
      if (PerPage != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(PerPage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (userAppId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserAppId);
      }
      if (ModelId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModelId);
      }
      if (ModelVersionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModelVersionId);
      }
      if (Page != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Page);
      }
      if (PerPage != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PerPage);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListModelVersionInputExamplesRequest other) {
      if (other == null) {
        return;
      }
      if (other.userAppId_ != null) {
        if (userAppId_ == null) {
          UserAppId = new global::Clarifai.Api.UserAppIDSet();
        }
        UserAppId.MergeFrom(other.UserAppId);
      }
      if (other.ModelId.Length != 0) {
        ModelId = other.ModelId;
      }
      if (other.ModelVersionId.Length != 0) {
        ModelVersionId = other.ModelVersionId;
      }
      if (other.Page != 0) {
        Page = other.Page;
      }
      if (other.PerPage != 0) {
        PerPage = other.PerPage;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (userAppId_ == null) {
              UserAppId = new global::Clarifai.Api.UserAppIDSet();
            }
            input.ReadMessage(UserAppId);
            break;
          }
          case 18: {
            ModelId = input.ReadString();
            break;
          }
          case 26: {
            ModelVersionId = input.ReadString();
            break;
          }
          case 32: {
            Page = input.ReadUInt32();
            break;
          }
          case 40: {
            PerPage = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SingleModelVersionInputExampleResponse : pb::IMessage<SingleModelVersionInputExampleResponse> {
    private static readonly pb::MessageParser<SingleModelVersionInputExampleResponse> _parser = new pb::MessageParser<SingleModelVersionInputExampleResponse>(() => new SingleModelVersionInputExampleResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SingleModelVersionInputExampleResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[103]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SingleModelVersionInputExampleResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SingleModelVersionInputExampleResponse(SingleModelVersionInputExampleResponse other) : this() {
      status_ = other.status_ != null ? other.status_.Clone() : null;
      modelVersionInputExample_ = other.modelVersionInputExample_ != null ? other.modelVersionInputExample_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SingleModelVersionInputExampleResponse Clone() {
      return new SingleModelVersionInputExampleResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::Clarifai.Api.Status.Status status_;
    /// <summary>
    /// status of response
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.Status.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "model_version_input_example" field.</summary>
    public const int ModelVersionInputExampleFieldNumber = 2;
    private global::Clarifai.Api.ModelVersionInputExample modelVersionInputExample_;
    /// <summary>
    /// model input example message
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.ModelVersionInputExample ModelVersionInputExample {
      get { return modelVersionInputExample_; }
      set {
        modelVersionInputExample_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SingleModelVersionInputExampleResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SingleModelVersionInputExampleResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Status, other.Status)) return false;
      if (!object.Equals(ModelVersionInputExample, other.ModelVersionInputExample)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (status_ != null) hash ^= Status.GetHashCode();
      if (modelVersionInputExample_ != null) hash ^= ModelVersionInputExample.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (status_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Status);
      }
      if (modelVersionInputExample_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ModelVersionInputExample);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      if (modelVersionInputExample_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ModelVersionInputExample);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SingleModelVersionInputExampleResponse other) {
      if (other == null) {
        return;
      }
      if (other.status_ != null) {
        if (status_ == null) {
          Status = new global::Clarifai.Api.Status.Status();
        }
        Status.MergeFrom(other.Status);
      }
      if (other.modelVersionInputExample_ != null) {
        if (modelVersionInputExample_ == null) {
          ModelVersionInputExample = new global::Clarifai.Api.ModelVersionInputExample();
        }
        ModelVersionInputExample.MergeFrom(other.ModelVersionInputExample);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (status_ == null) {
              Status = new global::Clarifai.Api.Status.Status();
            }
            input.ReadMessage(Status);
            break;
          }
          case 18: {
            if (modelVersionInputExample_ == null) {
              ModelVersionInputExample = new global::Clarifai.Api.ModelVersionInputExample();
            }
            input.ReadMessage(ModelVersionInputExample);
            break;
          }
        }
      }
    }

  }

  public sealed partial class MultiModelVersionInputExampleResponse : pb::IMessage<MultiModelVersionInputExampleResponse> {
    private static readonly pb::MessageParser<MultiModelVersionInputExampleResponse> _parser = new pb::MessageParser<MultiModelVersionInputExampleResponse>(() => new MultiModelVersionInputExampleResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MultiModelVersionInputExampleResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[104]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiModelVersionInputExampleResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiModelVersionInputExampleResponse(MultiModelVersionInputExampleResponse other) : this() {
      status_ = other.status_ != null ? other.status_.Clone() : null;
      modelVersionInputExamples_ = other.modelVersionInputExamples_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiModelVersionInputExampleResponse Clone() {
      return new MultiModelVersionInputExampleResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::Clarifai.Api.Status.Status status_;
    /// <summary>
    /// status of response
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.Status.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "model_version_input_examples" field.</summary>
    public const int ModelVersionInputExamplesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Clarifai.Api.ModelVersionInputExample> _repeated_modelVersionInputExamples_codec
        = pb::FieldCodec.ForMessage(18, global::Clarifai.Api.ModelVersionInputExample.Parser);
    private readonly pbc::RepeatedField<global::Clarifai.Api.ModelVersionInputExample> modelVersionInputExamples_ = new pbc::RepeatedField<global::Clarifai.Api.ModelVersionInputExample>();
    /// <summary>
    /// model input example messages
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Clarifai.Api.ModelVersionInputExample> ModelVersionInputExamples {
      get { return modelVersionInputExamples_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MultiModelVersionInputExampleResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MultiModelVersionInputExampleResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Status, other.Status)) return false;
      if(!modelVersionInputExamples_.Equals(other.modelVersionInputExamples_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (status_ != null) hash ^= Status.GetHashCode();
      hash ^= modelVersionInputExamples_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (status_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Status);
      }
      modelVersionInputExamples_.WriteTo(output, _repeated_modelVersionInputExamples_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      size += modelVersionInputExamples_.CalculateSize(_repeated_modelVersionInputExamples_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MultiModelVersionInputExampleResponse other) {
      if (other == null) {
        return;
      }
      if (other.status_ != null) {
        if (status_ == null) {
          Status = new global::Clarifai.Api.Status.Status();
        }
        Status.MergeFrom(other.Status);
      }
      modelVersionInputExamples_.Add(other.modelVersionInputExamples_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (status_ == null) {
              Status = new global::Clarifai.Api.Status.Status();
            }
            input.ReadMessage(Status);
            break;
          }
          case 18: {
            modelVersionInputExamples_.AddEntriesFrom(input, _repeated_modelVersionInputExamples_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ListModelReferencesRequest : pb::IMessage<ListModelReferencesRequest> {
    private static readonly pb::MessageParser<ListModelReferencesRequest> _parser = new pb::MessageParser<ListModelReferencesRequest>(() => new ListModelReferencesRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListModelReferencesRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[105]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListModelReferencesRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListModelReferencesRequest(ListModelReferencesRequest other) : this() {
      userAppId_ = other.userAppId_ != null ? other.userAppId_.Clone() : null;
      modelId_ = other.modelId_;
      page_ = other.page_;
      perPage_ = other.perPage_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListModelReferencesRequest Clone() {
      return new ListModelReferencesRequest(this);
    }

    /// <summary>Field number for the "user_app_id" field.</summary>
    public const int UserAppIdFieldNumber = 1;
    private global::Clarifai.Api.UserAppIDSet userAppId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.UserAppIDSet UserAppId {
      get { return userAppId_; }
      set {
        userAppId_ = value;
      }
    }

    /// <summary>Field number for the "model_id" field.</summary>
    public const int ModelIdFieldNumber = 2;
    private string modelId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModelId {
      get { return modelId_; }
      set {
        modelId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "page" field.</summary>
    public const int PageFieldNumber = 3;
    private uint page_;
    /// <summary>
    /// Optional, defaults to 1.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Page {
      get { return page_; }
      set {
        page_ = value;
      }
    }

    /// <summary>Field number for the "per_page" field.</summary>
    public const int PerPageFieldNumber = 4;
    private uint perPage_;
    /// <summary>
    /// Optional, defaults to 128 references per page.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint PerPage {
      get { return perPage_; }
      set {
        perPage_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListModelReferencesRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListModelReferencesRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserAppId, other.UserAppId)) return false;
      if (ModelId != other.ModelId) return false;
      if (Page != other.Page) return false;
      if (PerPage != other.PerPage) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (userAppId_ != null) hash ^= UserAppId.GetHashCode();
      if (ModelId.Length != 0) hash ^= ModelId.GetHashCode();
      if (Page != 0) hash ^= Page.GetHashCode();
      if (PerPage != 0) hash ^= PerPage.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (userAppId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserAppId);
      }
      if (ModelId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ModelId);
      }
      if (Page != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Page);
      }
      if (PerPage != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(PerPage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (userAppId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserAppId);
      }
      if (ModelId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModelId);
      }
      if (Page != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Page);
      }
      if (PerPage != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PerPage);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListModelReferencesRequest other) {
      if (other == null) {
        return;
      }
      if (other.userAppId_ != null) {
        if (userAppId_ == null) {
          UserAppId = new global::Clarifai.Api.UserAppIDSet();
        }
        UserAppId.MergeFrom(other.UserAppId);
      }
      if (other.ModelId.Length != 0) {
        ModelId = other.ModelId;
      }
      if (other.Page != 0) {
        Page = other.Page;
      }
      if (other.PerPage != 0) {
        PerPage = other.PerPage;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (userAppId_ == null) {
              UserAppId = new global::Clarifai.Api.UserAppIDSet();
            }
            input.ReadMessage(UserAppId);
            break;
          }
          case 18: {
            ModelId = input.ReadString();
            break;
          }
          case 24: {
            Page = input.ReadUInt32();
            break;
          }
          case 32: {
            PerPage = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class MultiModelReferenceResponse : pb::IMessage<MultiModelReferenceResponse> {
    private static readonly pb::MessageParser<MultiModelReferenceResponse> _parser = new pb::MessageParser<MultiModelReferenceResponse>(() => new MultiModelReferenceResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MultiModelReferenceResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[106]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiModelReferenceResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiModelReferenceResponse(MultiModelReferenceResponse other) : this() {
      status_ = other.status_ != null ? other.status_.Clone() : null;
      modelReferences_ = other.modelReferences_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiModelReferenceResponse Clone() {
      return new MultiModelReferenceResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::Clarifai.Api.Status.Status status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.Status.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "model_references" field.</summary>
    public const int ModelReferencesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Clarifai.Api.ModelReference> _repeated_modelReferences_codec
        = pb::FieldCodec.ForMessage(18, global::Clarifai.Api.ModelReference.Parser);
    private readonly pbc::RepeatedField<global::Clarifai.Api.ModelReference> modelReferences_ = new pbc::RepeatedField<global::Clarifai.Api.ModelReference>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Clarifai.Api.ModelReference> ModelReferences {
      get { return modelReferences_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MultiModelReferenceResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MultiModelReferenceResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Status, other.Status)) return false;
      if(!modelReferences_.Equals(other.modelReferences_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (status_ != null) hash ^= Status.GetHashCode();
      hash ^= modelReferences_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (status_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Status);
      }
      modelReferences_.WriteTo(output, _repeated_modelReferences_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      size += modelReferences_.CalculateSize(_repeated_modelReferences_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MultiModelReferenceResponse other) {
      if (other == null) {
        return;
      }
      if (other.status_ != null) {
        if (status_ == null) {
          Status = new global::Clarifai.Api.Status.Status();
        }
        Status.MergeFrom(other.Status);
      }
      modelReferences_.Add(other.modelReferences_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (status_ == null) {
              Status = new global::Clarifai.Api.Status.Status();
            }
            input.ReadMessage(Status);
            break;
          }
          case 18: {
            modelReferences_.AddEntriesFrom(input, _repeated_modelReferences_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /////////////////////////////////////////////////////////////////////////////////
  /// Requests / Responses from /proto/clarifai/api/output.proto
  /////////////////////////////////////////////////////////////////////////////////
  /////////////////////////////////////////////////////
  /// Outputs related requests
  /////////////////////////////////////////////////////
  /// </summary>
  public sealed partial class MultiOutputResponse : pb::IMessage<MultiOutputResponse> {
    private static readonly pb::MessageParser<MultiOutputResponse> _parser = new pb::MessageParser<MultiOutputResponse>(() => new MultiOutputResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MultiOutputResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[107]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiOutputResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiOutputResponse(MultiOutputResponse other) : this() {
      status_ = other.status_ != null ? other.status_.Clone() : null;
      outputs_ = other.outputs_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiOutputResponse Clone() {
      return new MultiOutputResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::Clarifai.Api.Status.Status status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.Status.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "outputs" field.</summary>
    public const int OutputsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Clarifai.Api.Output> _repeated_outputs_codec
        = pb::FieldCodec.ForMessage(18, global::Clarifai.Api.Output.Parser);
    private readonly pbc::RepeatedField<global::Clarifai.Api.Output> outputs_ = new pbc::RepeatedField<global::Clarifai.Api.Output>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Clarifai.Api.Output> Outputs {
      get { return outputs_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MultiOutputResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MultiOutputResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Status, other.Status)) return false;
      if(!outputs_.Equals(other.outputs_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (status_ != null) hash ^= Status.GetHashCode();
      hash ^= outputs_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (status_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Status);
      }
      outputs_.WriteTo(output, _repeated_outputs_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      size += outputs_.CalculateSize(_repeated_outputs_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MultiOutputResponse other) {
      if (other == null) {
        return;
      }
      if (other.status_ != null) {
        if (status_ == null) {
          Status = new global::Clarifai.Api.Status.Status();
        }
        Status.MergeFrom(other.Status);
      }
      outputs_.Add(other.outputs_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (status_ == null) {
              Status = new global::Clarifai.Api.Status.Status();
            }
            input.ReadMessage(Status);
            break;
          }
          case 18: {
            outputs_.AddEntriesFrom(input, _repeated_outputs_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /////////////////////////////////////////////////////////////////////////////////
  /// Requests / Responses from /proto/clarifai/api/scope.proto
  /////////////////////////////////////////////////////////////////////////////////
  /// </summary>
  public sealed partial class ListScopesRequest : pb::IMessage<ListScopesRequest> {
    private static readonly pb::MessageParser<ListScopesRequest> _parser = new pb::MessageParser<ListScopesRequest>(() => new ListScopesRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListScopesRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[108]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListScopesRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListScopesRequest(ListScopesRequest other) : this() {
      keyType_ = other.keyType_;
      userAppId_ = other.userAppId_ != null ? other.userAppId_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListScopesRequest Clone() {
      return new ListScopesRequest(this);
    }

    /// <summary>Field number for the "key_type" field.</summary>
    public const int KeyTypeFieldNumber = 1;
    private string keyType_ = "";
    /// <summary>
    /// If "personal_access_token" include scopes and endpoints available to personal access tokens.
    /// If "api_key" include scopes and endpoints available to app-specific keys. (default)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string KeyType {
      get { return keyType_; }
      set {
        keyType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "user_app_id" field.</summary>
    public const int UserAppIdFieldNumber = 2;
    private global::Clarifai.Api.UserAppIDSet userAppId_;
    /// <summary>
    /// For all user specific information we include user_app_id to get the user_id in a consistent way
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.UserAppIDSet UserAppId {
      get { return userAppId_; }
      set {
        userAppId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListScopesRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListScopesRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (KeyType != other.KeyType) return false;
      if (!object.Equals(UserAppId, other.UserAppId)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (KeyType.Length != 0) hash ^= KeyType.GetHashCode();
      if (userAppId_ != null) hash ^= UserAppId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (KeyType.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(KeyType);
      }
      if (userAppId_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(UserAppId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (KeyType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(KeyType);
      }
      if (userAppId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserAppId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListScopesRequest other) {
      if (other == null) {
        return;
      }
      if (other.KeyType.Length != 0) {
        KeyType = other.KeyType;
      }
      if (other.userAppId_ != null) {
        if (userAppId_ == null) {
          UserAppId = new global::Clarifai.Api.UserAppIDSet();
        }
        UserAppId.MergeFrom(other.UserAppId);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            KeyType = input.ReadString();
            break;
          }
          case 18: {
            if (userAppId_ == null) {
              UserAppId = new global::Clarifai.Api.UserAppIDSet();
            }
            input.ReadMessage(UserAppId);
            break;
          }
        }
      }
    }

  }

  public sealed partial class MyScopesRequest : pb::IMessage<MyScopesRequest> {
    private static readonly pb::MessageParser<MyScopesRequest> _parser = new pb::MessageParser<MyScopesRequest>(() => new MyScopesRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MyScopesRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[109]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MyScopesRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MyScopesRequest(MyScopesRequest other) : this() {
      userAppId_ = other.userAppId_ != null ? other.userAppId_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MyScopesRequest Clone() {
      return new MyScopesRequest(this);
    }

    /// <summary>Field number for the "user_app_id" field.</summary>
    public const int UserAppIdFieldNumber = 1;
    private global::Clarifai.Api.UserAppIDSet userAppId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.UserAppIDSet UserAppId {
      get { return userAppId_; }
      set {
        userAppId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MyScopesRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MyScopesRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserAppId, other.UserAppId)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (userAppId_ != null) hash ^= UserAppId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (userAppId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserAppId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (userAppId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserAppId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MyScopesRequest other) {
      if (other == null) {
        return;
      }
      if (other.userAppId_ != null) {
        if (userAppId_ == null) {
          UserAppId = new global::Clarifai.Api.UserAppIDSet();
        }
        UserAppId.MergeFrom(other.UserAppId);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (userAppId_ == null) {
              UserAppId = new global::Clarifai.Api.UserAppIDSet();
            }
            input.ReadMessage(UserAppId);
            break;
          }
        }
      }
    }

  }

  public sealed partial class MultiScopeDepsResponse : pb::IMessage<MultiScopeDepsResponse> {
    private static readonly pb::MessageParser<MultiScopeDepsResponse> _parser = new pb::MessageParser<MultiScopeDepsResponse>(() => new MultiScopeDepsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MultiScopeDepsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[110]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiScopeDepsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiScopeDepsResponse(MultiScopeDepsResponse other) : this() {
      status_ = other.status_ != null ? other.status_.Clone() : null;
      scopeDeps_ = other.scopeDeps_.Clone();
      endpointDeps_ = other.endpointDeps_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiScopeDepsResponse Clone() {
      return new MultiScopeDepsResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::Clarifai.Api.Status.Status status_;
    /// <summary>
    /// The status of the request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.Status.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "scope_deps" field.</summary>
    public const int ScopeDepsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Clarifai.Api.ScopeDeps> _repeated_scopeDeps_codec
        = pb::FieldCodec.ForMessage(18, global::Clarifai.Api.ScopeDeps.Parser);
    private readonly pbc::RepeatedField<global::Clarifai.Api.ScopeDeps> scopeDeps_ = new pbc::RepeatedField<global::Clarifai.Api.ScopeDeps>();
    /// <summary>
    /// scopes is a list of low-level scopes and their dependencies.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Clarifai.Api.ScopeDeps> ScopeDeps {
      get { return scopeDeps_; }
    }

    /// <summary>Field number for the "endpoint_deps" field.</summary>
    public const int EndpointDepsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Clarifai.Api.EndpointDeps> _repeated_endpointDeps_codec
        = pb::FieldCodec.ForMessage(26, global::Clarifai.Api.EndpointDeps.Parser);
    private readonly pbc::RepeatedField<global::Clarifai.Api.EndpointDeps> endpointDeps_ = new pbc::RepeatedField<global::Clarifai.Api.EndpointDeps>();
    /// <summary>
    /// endpoint_scopes is a listof all the publicly available endponts which can be
    /// used as scopes as well. A call to each of those endpoint depends on a subset
    /// of the above "scopes"
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Clarifai.Api.EndpointDeps> EndpointDeps {
      get { return endpointDeps_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MultiScopeDepsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MultiScopeDepsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Status, other.Status)) return false;
      if(!scopeDeps_.Equals(other.scopeDeps_)) return false;
      if(!endpointDeps_.Equals(other.endpointDeps_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (status_ != null) hash ^= Status.GetHashCode();
      hash ^= scopeDeps_.GetHashCode();
      hash ^= endpointDeps_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (status_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Status);
      }
      scopeDeps_.WriteTo(output, _repeated_scopeDeps_codec);
      endpointDeps_.WriteTo(output, _repeated_endpointDeps_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      size += scopeDeps_.CalculateSize(_repeated_scopeDeps_codec);
      size += endpointDeps_.CalculateSize(_repeated_endpointDeps_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MultiScopeDepsResponse other) {
      if (other == null) {
        return;
      }
      if (other.status_ != null) {
        if (status_ == null) {
          Status = new global::Clarifai.Api.Status.Status();
        }
        Status.MergeFrom(other.Status);
      }
      scopeDeps_.Add(other.scopeDeps_);
      endpointDeps_.Add(other.endpointDeps_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (status_ == null) {
              Status = new global::Clarifai.Api.Status.Status();
            }
            input.ReadMessage(Status);
            break;
          }
          case 18: {
            scopeDeps_.AddEntriesFrom(input, _repeated_scopeDeps_codec);
            break;
          }
          case 26: {
            endpointDeps_.AddEntriesFrom(input, _repeated_endpointDeps_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class MultiScopeResponse : pb::IMessage<MultiScopeResponse> {
    private static readonly pb::MessageParser<MultiScopeResponse> _parser = new pb::MessageParser<MultiScopeResponse>(() => new MultiScopeResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MultiScopeResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[111]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiScopeResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiScopeResponse(MultiScopeResponse other) : this() {
      status_ = other.status_ != null ? other.status_.Clone() : null;
      scopes_ = other.scopes_.Clone();
      app_ = other.app_ != null ? other.app_.Clone() : null;
      endpoints_ = other.endpoints_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiScopeResponse Clone() {
      return new MultiScopeResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::Clarifai.Api.Status.Status status_;
    /// <summary>
    /// The status of the request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.Status.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "scopes" field.</summary>
    public const int ScopesFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_scopes_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> scopes_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// This is a list of the scopes that your key has.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Scopes {
      get { return scopes_; }
    }

    /// <summary>Field number for the "app" field.</summary>
    public const int AppFieldNumber = 3;
    private global::Clarifai.Api.App app_;
    /// <summary>
    /// The app that the key has access to.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.App App {
      get { return app_; }
      set {
        app_ = value;
      }
    }

    /// <summary>Field number for the "endpoints" field.</summary>
    public const int EndpointsFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _repeated_endpoints_codec
        = pb::FieldCodec.ForString(34);
    private readonly pbc::RepeatedField<string> endpoints_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// This is a list of endpoint permissions that your key has.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Endpoints {
      get { return endpoints_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MultiScopeResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MultiScopeResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Status, other.Status)) return false;
      if(!scopes_.Equals(other.scopes_)) return false;
      if (!object.Equals(App, other.App)) return false;
      if(!endpoints_.Equals(other.endpoints_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (status_ != null) hash ^= Status.GetHashCode();
      hash ^= scopes_.GetHashCode();
      if (app_ != null) hash ^= App.GetHashCode();
      hash ^= endpoints_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (status_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Status);
      }
      scopes_.WriteTo(output, _repeated_scopes_codec);
      if (app_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(App);
      }
      endpoints_.WriteTo(output, _repeated_endpoints_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      size += scopes_.CalculateSize(_repeated_scopes_codec);
      if (app_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(App);
      }
      size += endpoints_.CalculateSize(_repeated_endpoints_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MultiScopeResponse other) {
      if (other == null) {
        return;
      }
      if (other.status_ != null) {
        if (status_ == null) {
          Status = new global::Clarifai.Api.Status.Status();
        }
        Status.MergeFrom(other.Status);
      }
      scopes_.Add(other.scopes_);
      if (other.app_ != null) {
        if (app_ == null) {
          App = new global::Clarifai.Api.App();
        }
        App.MergeFrom(other.App);
      }
      endpoints_.Add(other.endpoints_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (status_ == null) {
              Status = new global::Clarifai.Api.Status.Status();
            }
            input.ReadMessage(Status);
            break;
          }
          case 18: {
            scopes_.AddEntriesFrom(input, _repeated_scopes_codec);
            break;
          }
          case 26: {
            if (app_ == null) {
              App = new global::Clarifai.Api.App();
            }
            input.ReadMessage(App);
            break;
          }
          case 34: {
            endpoints_.AddEntriesFrom(input, _repeated_endpoints_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /////////////////////////////////////////////////////////////////////////////////
  /// Requests / Responses from /proto/clarifai/api/search.proto
  /////////////////////////////////////////////////////////////////////////////////
  /// </summary>
  public sealed partial class GetSearchRequest : pb::IMessage<GetSearchRequest> {
    private static readonly pb::MessageParser<GetSearchRequest> _parser = new pb::MessageParser<GetSearchRequest>(() => new GetSearchRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetSearchRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[112]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetSearchRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetSearchRequest(GetSearchRequest other) : this() {
      userAppId_ = other.userAppId_ != null ? other.userAppId_.Clone() : null;
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetSearchRequest Clone() {
      return new GetSearchRequest(this);
    }

    /// <summary>Field number for the "user_app_id" field.</summary>
    public const int UserAppIdFieldNumber = 1;
    private global::Clarifai.Api.UserAppIDSet userAppId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.UserAppIDSet UserAppId {
      get { return userAppId_; }
      set {
        userAppId_ = value;
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 2;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetSearchRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetSearchRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserAppId, other.UserAppId)) return false;
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (userAppId_ != null) hash ^= UserAppId.GetHashCode();
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (userAppId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserAppId);
      }
      if (Id.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (userAppId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserAppId);
      }
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetSearchRequest other) {
      if (other == null) {
        return;
      }
      if (other.userAppId_ != null) {
        if (userAppId_ == null) {
          UserAppId = new global::Clarifai.Api.UserAppIDSet();
        }
        UserAppId.MergeFrom(other.UserAppId);
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (userAppId_ == null) {
              UserAppId = new global::Clarifai.Api.UserAppIDSet();
            }
            input.ReadMessage(UserAppId);
            break;
          }
          case 18: {
            Id = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ListSearchesRequest : pb::IMessage<ListSearchesRequest> {
    private static readonly pb::MessageParser<ListSearchesRequest> _parser = new pb::MessageParser<ListSearchesRequest>(() => new ListSearchesRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListSearchesRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[113]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListSearchesRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListSearchesRequest(ListSearchesRequest other) : this() {
      userAppId_ = other.userAppId_ != null ? other.userAppId_.Clone() : null;
      page_ = other.page_;
      perPage_ = other.perPage_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListSearchesRequest Clone() {
      return new ListSearchesRequest(this);
    }

    /// <summary>Field number for the "user_app_id" field.</summary>
    public const int UserAppIdFieldNumber = 1;
    private global::Clarifai.Api.UserAppIDSet userAppId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.UserAppIDSet UserAppId {
      get { return userAppId_; }
      set {
        userAppId_ = value;
      }
    }

    /// <summary>Field number for the "page" field.</summary>
    public const int PageFieldNumber = 2;
    private uint page_;
    /// <summary>
    /// (optional URL parameter) The page number. Pagination is used to split the results into chunks.
    /// Defaults to 1.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Page {
      get { return page_; }
      set {
        page_ = value;
      }
    }

    /// <summary>Field number for the "per_page" field.</summary>
    public const int PerPageFieldNumber = 3;
    private uint perPage_;
    /// <summary>
    /// (optional URL parameter) The number of results that will be contained in each page. Defaults
    /// to 128.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint PerPage {
      get { return perPage_; }
      set {
        perPage_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListSearchesRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListSearchesRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserAppId, other.UserAppId)) return false;
      if (Page != other.Page) return false;
      if (PerPage != other.PerPage) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (userAppId_ != null) hash ^= UserAppId.GetHashCode();
      if (Page != 0) hash ^= Page.GetHashCode();
      if (PerPage != 0) hash ^= PerPage.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (userAppId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserAppId);
      }
      if (Page != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Page);
      }
      if (PerPage != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(PerPage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (userAppId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserAppId);
      }
      if (Page != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Page);
      }
      if (PerPage != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PerPage);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListSearchesRequest other) {
      if (other == null) {
        return;
      }
      if (other.userAppId_ != null) {
        if (userAppId_ == null) {
          UserAppId = new global::Clarifai.Api.UserAppIDSet();
        }
        UserAppId.MergeFrom(other.UserAppId);
      }
      if (other.Page != 0) {
        Page = other.Page;
      }
      if (other.PerPage != 0) {
        PerPage = other.PerPage;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (userAppId_ == null) {
              UserAppId = new global::Clarifai.Api.UserAppIDSet();
            }
            input.ReadMessage(UserAppId);
            break;
          }
          case 16: {
            Page = input.ReadUInt32();
            break;
          }
          case 24: {
            PerPage = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PostSearchesRequest : pb::IMessage<PostSearchesRequest> {
    private static readonly pb::MessageParser<PostSearchesRequest> _parser = new pb::MessageParser<PostSearchesRequest>(() => new PostSearchesRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PostSearchesRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[114]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostSearchesRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostSearchesRequest(PostSearchesRequest other) : this() {
      userAppId_ = other.userAppId_ != null ? other.userAppId_.Clone() : null;
      query_ = other.query_ != null ? other.query_.Clone() : null;
      searches_ = other.searches_.Clone();
      pagination_ = other.pagination_ != null ? other.pagination_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostSearchesRequest Clone() {
      return new PostSearchesRequest(this);
    }

    /// <summary>Field number for the "user_app_id" field.</summary>
    public const int UserAppIdFieldNumber = 1;
    private global::Clarifai.Api.UserAppIDSet userAppId_;
    /// <summary>
    /// The user_id and app_id to query from.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.UserAppIDSet UserAppId {
      get { return userAppId_; }
      set {
        userAppId_ = value;
      }
    }

    /// <summary>Field number for the "query" field.</summary>
    public const int QueryFieldNumber = 2;
    private global::Clarifai.Api.Query query_;
    /// <summary>
    /// The query; this specifies how the data to be searched
    /// this will be replaced by "Searches"
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.Query Query {
      get { return query_; }
      set {
        query_ = value;
      }
    }

    /// <summary>Field number for the "searches" field.</summary>
    public const int SearchesFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Clarifai.Api.Search> _repeated_searches_codec
        = pb::FieldCodec.ForMessage(26, global::Clarifai.Api.Search.Parser);
    private readonly pbc::RepeatedField<global::Clarifai.Api.Search> searches_ = new pbc::RepeatedField<global::Clarifai.Api.Search>();
    /// <summary>
    /// The searched to be executed or saved
    /// Eventually the request level fields will be deprecated in favor of this object
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Clarifai.Api.Search> Searches {
      get { return searches_; }
    }

    /// <summary>Field number for the "pagination" field.</summary>
    public const int PaginationFieldNumber = 4;
    private global::Clarifai.Api.Pagination pagination_;
    /// <summary>
    /// Pagination information to paginate through search result Hits.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.Pagination Pagination {
      get { return pagination_; }
      set {
        pagination_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PostSearchesRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PostSearchesRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserAppId, other.UserAppId)) return false;
      if (!object.Equals(Query, other.Query)) return false;
      if(!searches_.Equals(other.searches_)) return false;
      if (!object.Equals(Pagination, other.Pagination)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (userAppId_ != null) hash ^= UserAppId.GetHashCode();
      if (query_ != null) hash ^= Query.GetHashCode();
      hash ^= searches_.GetHashCode();
      if (pagination_ != null) hash ^= Pagination.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (userAppId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserAppId);
      }
      if (query_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Query);
      }
      searches_.WriteTo(output, _repeated_searches_codec);
      if (pagination_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Pagination);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (userAppId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserAppId);
      }
      if (query_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Query);
      }
      size += searches_.CalculateSize(_repeated_searches_codec);
      if (pagination_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pagination);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PostSearchesRequest other) {
      if (other == null) {
        return;
      }
      if (other.userAppId_ != null) {
        if (userAppId_ == null) {
          UserAppId = new global::Clarifai.Api.UserAppIDSet();
        }
        UserAppId.MergeFrom(other.UserAppId);
      }
      if (other.query_ != null) {
        if (query_ == null) {
          Query = new global::Clarifai.Api.Query();
        }
        Query.MergeFrom(other.Query);
      }
      searches_.Add(other.searches_);
      if (other.pagination_ != null) {
        if (pagination_ == null) {
          Pagination = new global::Clarifai.Api.Pagination();
        }
        Pagination.MergeFrom(other.Pagination);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (userAppId_ == null) {
              UserAppId = new global::Clarifai.Api.UserAppIDSet();
            }
            input.ReadMessage(UserAppId);
            break;
          }
          case 18: {
            if (query_ == null) {
              Query = new global::Clarifai.Api.Query();
            }
            input.ReadMessage(Query);
            break;
          }
          case 26: {
            searches_.AddEntriesFrom(input, _repeated_searches_codec);
            break;
          }
          case 34: {
            if (pagination_ == null) {
              Pagination = new global::Clarifai.Api.Pagination();
            }
            input.ReadMessage(Pagination);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// PostSearchesByIDRequest performs returns results of a saved search given its ID
  /// </summary>
  public sealed partial class PostSearchesByIDRequest : pb::IMessage<PostSearchesByIDRequest> {
    private static readonly pb::MessageParser<PostSearchesByIDRequest> _parser = new pb::MessageParser<PostSearchesByIDRequest>(() => new PostSearchesByIDRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PostSearchesByIDRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[115]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostSearchesByIDRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostSearchesByIDRequest(PostSearchesByIDRequest other) : this() {
      userAppId_ = other.userAppId_ != null ? other.userAppId_.Clone() : null;
      id_ = other.id_;
      pagination_ = other.pagination_ != null ? other.pagination_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostSearchesByIDRequest Clone() {
      return new PostSearchesByIDRequest(this);
    }

    /// <summary>Field number for the "user_app_id" field.</summary>
    public const int UserAppIdFieldNumber = 1;
    private global::Clarifai.Api.UserAppIDSet userAppId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.UserAppIDSet UserAppId {
      get { return userAppId_; }
      set {
        userAppId_ = value;
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 2;
    private string id_ = "";
    /// <summary>
    /// ID for saves search to be executed
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "pagination" field.</summary>
    public const int PaginationFieldNumber = 3;
    private global::Clarifai.Api.Pagination pagination_;
    /// <summary>
    /// Pagination information to paginate through search result Hits.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.Pagination Pagination {
      get { return pagination_; }
      set {
        pagination_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PostSearchesByIDRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PostSearchesByIDRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserAppId, other.UserAppId)) return false;
      if (Id != other.Id) return false;
      if (!object.Equals(Pagination, other.Pagination)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (userAppId_ != null) hash ^= UserAppId.GetHashCode();
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (pagination_ != null) hash ^= Pagination.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (userAppId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserAppId);
      }
      if (Id.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Id);
      }
      if (pagination_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Pagination);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (userAppId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserAppId);
      }
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (pagination_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pagination);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PostSearchesByIDRequest other) {
      if (other == null) {
        return;
      }
      if (other.userAppId_ != null) {
        if (userAppId_ == null) {
          UserAppId = new global::Clarifai.Api.UserAppIDSet();
        }
        UserAppId.MergeFrom(other.UserAppId);
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.pagination_ != null) {
        if (pagination_ == null) {
          Pagination = new global::Clarifai.Api.Pagination();
        }
        Pagination.MergeFrom(other.Pagination);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (userAppId_ == null) {
              UserAppId = new global::Clarifai.Api.UserAppIDSet();
            }
            input.ReadMessage(UserAppId);
            break;
          }
          case 18: {
            Id = input.ReadString();
            break;
          }
          case 26: {
            if (pagination_ == null) {
              Pagination = new global::Clarifai.Api.Pagination();
            }
            input.ReadMessage(Pagination);
            break;
          }
        }
      }
    }

  }

  public sealed partial class DeleteSearchRequest : pb::IMessage<DeleteSearchRequest> {
    private static readonly pb::MessageParser<DeleteSearchRequest> _parser = new pb::MessageParser<DeleteSearchRequest>(() => new DeleteSearchRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteSearchRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[116]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteSearchRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteSearchRequest(DeleteSearchRequest other) : this() {
      userAppId_ = other.userAppId_ != null ? other.userAppId_.Clone() : null;
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteSearchRequest Clone() {
      return new DeleteSearchRequest(this);
    }

    /// <summary>Field number for the "user_app_id" field.</summary>
    public const int UserAppIdFieldNumber = 1;
    private global::Clarifai.Api.UserAppIDSet userAppId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.UserAppIDSet UserAppId {
      get { return userAppId_; }
      set {
        userAppId_ = value;
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 2;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteSearchRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteSearchRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserAppId, other.UserAppId)) return false;
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (userAppId_ != null) hash ^= UserAppId.GetHashCode();
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (userAppId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserAppId);
      }
      if (Id.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (userAppId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserAppId);
      }
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteSearchRequest other) {
      if (other == null) {
        return;
      }
      if (other.userAppId_ != null) {
        if (userAppId_ == null) {
          UserAppId = new global::Clarifai.Api.UserAppIDSet();
        }
        UserAppId.MergeFrom(other.UserAppId);
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (userAppId_ == null) {
              UserAppId = new global::Clarifai.Api.UserAppIDSet();
            }
            input.ReadMessage(UserAppId);
            break;
          }
          case 18: {
            Id = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Execute a new annotation search and optionally save it
  /// annotation search over annotations using rank and filter proto
  /// </summary>
  public sealed partial class PostAnnotationsSearchesRequest : pb::IMessage<PostAnnotationsSearchesRequest> {
    private static readonly pb::MessageParser<PostAnnotationsSearchesRequest> _parser = new pb::MessageParser<PostAnnotationsSearchesRequest>(() => new PostAnnotationsSearchesRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PostAnnotationsSearchesRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[117]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostAnnotationsSearchesRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostAnnotationsSearchesRequest(PostAnnotationsSearchesRequest other) : this() {
      userAppId_ = other.userAppId_ != null ? other.userAppId_.Clone() : null;
      searches_ = other.searches_.Clone();
      pagination_ = other.pagination_ != null ? other.pagination_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostAnnotationsSearchesRequest Clone() {
      return new PostAnnotationsSearchesRequest(this);
    }

    /// <summary>Field number for the "user_app_id" field.</summary>
    public const int UserAppIdFieldNumber = 1;
    private global::Clarifai.Api.UserAppIDSet userAppId_;
    /// <summary>
    /// The user_id and app_id to query from.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.UserAppIDSet UserAppId {
      get { return userAppId_; }
      set {
        userAppId_ = value;
      }
    }

    /// <summary>Field number for the "searches" field.</summary>
    public const int SearchesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Clarifai.Api.Search> _repeated_searches_codec
        = pb::FieldCodec.ForMessage(18, global::Clarifai.Api.Search.Parser);
    private readonly pbc::RepeatedField<global::Clarifai.Api.Search> searches_ = new pbc::RepeatedField<global::Clarifai.Api.Search>();
    /// <summary>
    /// The searched to be executed or saved
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Clarifai.Api.Search> Searches {
      get { return searches_; }
    }

    /// <summary>Field number for the "pagination" field.</summary>
    public const int PaginationFieldNumber = 3;
    private global::Clarifai.Api.Pagination pagination_;
    /// <summary>
    /// Pagination information to paginate through search result Hits.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.Pagination Pagination {
      get { return pagination_; }
      set {
        pagination_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PostAnnotationsSearchesRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PostAnnotationsSearchesRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserAppId, other.UserAppId)) return false;
      if(!searches_.Equals(other.searches_)) return false;
      if (!object.Equals(Pagination, other.Pagination)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (userAppId_ != null) hash ^= UserAppId.GetHashCode();
      hash ^= searches_.GetHashCode();
      if (pagination_ != null) hash ^= Pagination.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (userAppId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserAppId);
      }
      searches_.WriteTo(output, _repeated_searches_codec);
      if (pagination_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Pagination);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (userAppId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserAppId);
      }
      size += searches_.CalculateSize(_repeated_searches_codec);
      if (pagination_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pagination);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PostAnnotationsSearchesRequest other) {
      if (other == null) {
        return;
      }
      if (other.userAppId_ != null) {
        if (userAppId_ == null) {
          UserAppId = new global::Clarifai.Api.UserAppIDSet();
        }
        UserAppId.MergeFrom(other.UserAppId);
      }
      searches_.Add(other.searches_);
      if (other.pagination_ != null) {
        if (pagination_ == null) {
          Pagination = new global::Clarifai.Api.Pagination();
        }
        Pagination.MergeFrom(other.Pagination);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (userAppId_ == null) {
              UserAppId = new global::Clarifai.Api.UserAppIDSet();
            }
            input.ReadMessage(UserAppId);
            break;
          }
          case 18: {
            searches_.AddEntriesFrom(input, _repeated_searches_codec);
            break;
          }
          case 26: {
            if (pagination_ == null) {
              Pagination = new global::Clarifai.Api.Pagination();
            }
            input.ReadMessage(Pagination);
            break;
          }
        }
      }
    }

  }

  public sealed partial class DeleteAnnotationSearchMetricsRequest : pb::IMessage<DeleteAnnotationSearchMetricsRequest> {
    private static readonly pb::MessageParser<DeleteAnnotationSearchMetricsRequest> _parser = new pb::MessageParser<DeleteAnnotationSearchMetricsRequest>(() => new DeleteAnnotationSearchMetricsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteAnnotationSearchMetricsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[118]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteAnnotationSearchMetricsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteAnnotationSearchMetricsRequest(DeleteAnnotationSearchMetricsRequest other) : this() {
      userAppId_ = other.userAppId_ != null ? other.userAppId_.Clone() : null;
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteAnnotationSearchMetricsRequest Clone() {
      return new DeleteAnnotationSearchMetricsRequest(this);
    }

    /// <summary>Field number for the "user_app_id" field.</summary>
    public const int UserAppIdFieldNumber = 1;
    private global::Clarifai.Api.UserAppIDSet userAppId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.UserAppIDSet UserAppId {
      get { return userAppId_; }
      set {
        userAppId_ = value;
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 2;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteAnnotationSearchMetricsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteAnnotationSearchMetricsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserAppId, other.UserAppId)) return false;
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (userAppId_ != null) hash ^= UserAppId.GetHashCode();
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (userAppId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserAppId);
      }
      if (Id.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (userAppId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserAppId);
      }
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteAnnotationSearchMetricsRequest other) {
      if (other == null) {
        return;
      }
      if (other.userAppId_ != null) {
        if (userAppId_ == null) {
          UserAppId = new global::Clarifai.Api.UserAppIDSet();
        }
        UserAppId.MergeFrom(other.UserAppId);
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (userAppId_ == null) {
              UserAppId = new global::Clarifai.Api.UserAppIDSet();
            }
            input.ReadMessage(UserAppId);
            break;
          }
          case 18: {
            Id = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Execute a new input search and optionally save it
  /// </summary>
  public sealed partial class PostInputsSearchesRequest : pb::IMessage<PostInputsSearchesRequest> {
    private static readonly pb::MessageParser<PostInputsSearchesRequest> _parser = new pb::MessageParser<PostInputsSearchesRequest>(() => new PostInputsSearchesRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PostInputsSearchesRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[119]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostInputsSearchesRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostInputsSearchesRequest(PostInputsSearchesRequest other) : this() {
      userAppId_ = other.userAppId_ != null ? other.userAppId_.Clone() : null;
      searches_ = other.searches_.Clone();
      pagination_ = other.pagination_ != null ? other.pagination_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostInputsSearchesRequest Clone() {
      return new PostInputsSearchesRequest(this);
    }

    /// <summary>Field number for the "user_app_id" field.</summary>
    public const int UserAppIdFieldNumber = 1;
    private global::Clarifai.Api.UserAppIDSet userAppId_;
    /// <summary>
    /// The user_id and app_id to query from.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.UserAppIDSet UserAppId {
      get { return userAppId_; }
      set {
        userAppId_ = value;
      }
    }

    /// <summary>Field number for the "searches" field.</summary>
    public const int SearchesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Clarifai.Api.Search> _repeated_searches_codec
        = pb::FieldCodec.ForMessage(18, global::Clarifai.Api.Search.Parser);
    private readonly pbc::RepeatedField<global::Clarifai.Api.Search> searches_ = new pbc::RepeatedField<global::Clarifai.Api.Search>();
    /// <summary>
    /// The searched to be executed or saved
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Clarifai.Api.Search> Searches {
      get { return searches_; }
    }

    /// <summary>Field number for the "pagination" field.</summary>
    public const int PaginationFieldNumber = 3;
    private global::Clarifai.Api.Pagination pagination_;
    /// <summary>
    /// Pagination information to paginate through search result Hits.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.Pagination Pagination {
      get { return pagination_; }
      set {
        pagination_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PostInputsSearchesRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PostInputsSearchesRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserAppId, other.UserAppId)) return false;
      if(!searches_.Equals(other.searches_)) return false;
      if (!object.Equals(Pagination, other.Pagination)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (userAppId_ != null) hash ^= UserAppId.GetHashCode();
      hash ^= searches_.GetHashCode();
      if (pagination_ != null) hash ^= Pagination.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (userAppId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserAppId);
      }
      searches_.WriteTo(output, _repeated_searches_codec);
      if (pagination_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Pagination);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (userAppId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserAppId);
      }
      size += searches_.CalculateSize(_repeated_searches_codec);
      if (pagination_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pagination);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PostInputsSearchesRequest other) {
      if (other == null) {
        return;
      }
      if (other.userAppId_ != null) {
        if (userAppId_ == null) {
          UserAppId = new global::Clarifai.Api.UserAppIDSet();
        }
        UserAppId.MergeFrom(other.UserAppId);
      }
      searches_.Add(other.searches_);
      if (other.pagination_ != null) {
        if (pagination_ == null) {
          Pagination = new global::Clarifai.Api.Pagination();
        }
        Pagination.MergeFrom(other.Pagination);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (userAppId_ == null) {
              UserAppId = new global::Clarifai.Api.UserAppIDSet();
            }
            input.ReadMessage(UserAppId);
            break;
          }
          case 18: {
            searches_.AddEntriesFrom(input, _repeated_searches_codec);
            break;
          }
          case 26: {
            if (pagination_ == null) {
              Pagination = new global::Clarifai.Api.Pagination();
            }
            input.ReadMessage(Pagination);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// SingleSearchResponse returns saved search in response to GetSearchRequest
  /// </summary>
  public sealed partial class SingleSearchResponse : pb::IMessage<SingleSearchResponse> {
    private static readonly pb::MessageParser<SingleSearchResponse> _parser = new pb::MessageParser<SingleSearchResponse>(() => new SingleSearchResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SingleSearchResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[120]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SingleSearchResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SingleSearchResponse(SingleSearchResponse other) : this() {
      status_ = other.status_ != null ? other.status_.Clone() : null;
      search_ = other.search_ != null ? other.search_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SingleSearchResponse Clone() {
      return new SingleSearchResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::Clarifai.Api.Status.Status status_;
    /// <summary>
    /// Status of whether the search was successful.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.Status.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "search" field.</summary>
    public const int SearchFieldNumber = 5;
    private global::Clarifai.Api.Search search_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.Search Search {
      get { return search_; }
      set {
        search_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SingleSearchResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SingleSearchResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Status, other.Status)) return false;
      if (!object.Equals(Search, other.Search)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (status_ != null) hash ^= Status.GetHashCode();
      if (search_ != null) hash ^= Search.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (status_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Status);
      }
      if (search_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Search);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      if (search_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Search);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SingleSearchResponse other) {
      if (other == null) {
        return;
      }
      if (other.status_ != null) {
        if (status_ == null) {
          Status = new global::Clarifai.Api.Status.Status();
        }
        Status.MergeFrom(other.Status);
      }
      if (other.search_ != null) {
        if (search_ == null) {
          Search = new global::Clarifai.Api.Search();
        }
        Search.MergeFrom(other.Search);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (status_ == null) {
              Status = new global::Clarifai.Api.Status.Status();
            }
            input.ReadMessage(Status);
            break;
          }
          case 42: {
            if (search_ == null) {
              Search = new global::Clarifai.Api.Search();
            }
            input.ReadMessage(Search);
            break;
          }
        }
      }
    }

  }

  public sealed partial class MultiSearchResponse : pb::IMessage<MultiSearchResponse> {
    private static readonly pb::MessageParser<MultiSearchResponse> _parser = new pb::MessageParser<MultiSearchResponse>(() => new MultiSearchResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MultiSearchResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[121]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiSearchResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiSearchResponse(MultiSearchResponse other) : this() {
      status_ = other.status_ != null ? other.status_.Clone() : null;
      id_ = other.id_;
      hits_ = other.hits_.Clone();
      query_ = other.query_ != null ? other.query_.Clone() : null;
      searches_ = other.searches_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiSearchResponse Clone() {
      return new MultiSearchResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::Clarifai.Api.Status.Status status_;
    /// <summary>
    /// Status of whether the search was successful.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.Status.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 2;
    private string id_ = "";
    /// <summary>
    /// A unique id which uniquely identifies a search
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "hits" field.</summary>
    public const int HitsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Clarifai.Api.Hit> _repeated_hits_codec
        = pb::FieldCodec.ForMessage(26, global::Clarifai.Api.Hit.Parser);
    private readonly pbc::RepeatedField<global::Clarifai.Api.Hit> hits_ = new pbc::RepeatedField<global::Clarifai.Api.Hit>();
    /// <summary>
    /// The list of search result Hits.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Clarifai.Api.Hit> Hits {
      get { return hits_; }
    }

    /// <summary>Field number for the "query" field.</summary>
    public const int QueryFieldNumber = 4;
    private global::Clarifai.Api.Query query_;
    /// <summary>
    /// The original query provided in the request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.Query Query {
      get { return query_; }
      set {
        query_ = value;
      }
    }

    /// <summary>Field number for the "searches" field.</summary>
    public const int SearchesFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Clarifai.Api.Search> _repeated_searches_codec
        = pb::FieldCodec.ForMessage(42, global::Clarifai.Api.Search.Parser);
    private readonly pbc::RepeatedField<global::Clarifai.Api.Search> searches_ = new pbc::RepeatedField<global::Clarifai.Api.Search>();
    /// <summary>
    /// The original Searches provided in the request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Clarifai.Api.Search> Searches {
      get { return searches_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MultiSearchResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MultiSearchResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Status, other.Status)) return false;
      if (Id != other.Id) return false;
      if(!hits_.Equals(other.hits_)) return false;
      if (!object.Equals(Query, other.Query)) return false;
      if(!searches_.Equals(other.searches_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (status_ != null) hash ^= Status.GetHashCode();
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      hash ^= hits_.GetHashCode();
      if (query_ != null) hash ^= Query.GetHashCode();
      hash ^= searches_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (status_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Status);
      }
      if (Id.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Id);
      }
      hits_.WriteTo(output, _repeated_hits_codec);
      if (query_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Query);
      }
      searches_.WriteTo(output, _repeated_searches_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      size += hits_.CalculateSize(_repeated_hits_codec);
      if (query_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Query);
      }
      size += searches_.CalculateSize(_repeated_searches_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MultiSearchResponse other) {
      if (other == null) {
        return;
      }
      if (other.status_ != null) {
        if (status_ == null) {
          Status = new global::Clarifai.Api.Status.Status();
        }
        Status.MergeFrom(other.Status);
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      hits_.Add(other.hits_);
      if (other.query_ != null) {
        if (query_ == null) {
          Query = new global::Clarifai.Api.Query();
        }
        Query.MergeFrom(other.Query);
      }
      searches_.Add(other.searches_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (status_ == null) {
              Status = new global::Clarifai.Api.Status.Status();
            }
            input.ReadMessage(Status);
            break;
          }
          case 18: {
            Id = input.ReadString();
            break;
          }
          case 26: {
            hits_.AddEntriesFrom(input, _repeated_hits_codec);
            break;
          }
          case 34: {
            if (query_ == null) {
              Query = new global::Clarifai.Api.Query();
            }
            input.ReadMessage(Query);
            break;
          }
          case 42: {
            searches_.AddEntriesFrom(input, _repeated_searches_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PostAnnotationSearchMetricsRequest : pb::IMessage<PostAnnotationSearchMetricsRequest> {
    private static readonly pb::MessageParser<PostAnnotationSearchMetricsRequest> _parser = new pb::MessageParser<PostAnnotationSearchMetricsRequest>(() => new PostAnnotationSearchMetricsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PostAnnotationSearchMetricsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[122]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostAnnotationSearchMetricsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostAnnotationSearchMetricsRequest(PostAnnotationSearchMetricsRequest other) : this() {
      userAppId_ = other.userAppId_ != null ? other.userAppId_.Clone() : null;
      id_ = other.id_;
      groundTruth_ = other.groundTruth_ != null ? other.groundTruth_.Clone() : null;
      searchToEval_ = other.searchToEval_ != null ? other.searchToEval_.Clone() : null;
      data_ = other.data_ != null ? other.data_.Clone() : null;
      evaluationType_ = other.evaluationType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostAnnotationSearchMetricsRequest Clone() {
      return new PostAnnotationSearchMetricsRequest(this);
    }

    /// <summary>Field number for the "user_app_id" field.</summary>
    public const int UserAppIdFieldNumber = 1;
    private global::Clarifai.Api.UserAppIDSet userAppId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.UserAppIDSet UserAppId {
      get { return userAppId_; }
      set {
        userAppId_ = value;
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 2;
    private string id_ = "";
    /// <summary>
    /// A unique customer facing id to identify this eval request
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ground_truth" field.</summary>
    public const int GroundTruthFieldNumber = 3;
    private global::Clarifai.Api.Search groundTruth_;
    /// <summary>
    /// The ground truth we are evaluating against
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.Search GroundTruth {
      get { return groundTruth_; }
      set {
        groundTruth_ = value;
      }
    }

    /// <summary>Field number for the "search_to_eval" field.</summary>
    public const int SearchToEvalFieldNumber = 4;
    private global::Clarifai.Api.Search searchToEval_;
    /// <summary>
    /// The set we are evaluating
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.Search SearchToEval {
      get { return searchToEval_; }
      set {
        searchToEval_ = value;
      }
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 5;
    private global::Clarifai.Api.Data data_;
    /// <summary>
    /// List of concepts to evaluate are expected to be in data.concepts
    /// If nil, then all app concepts are used
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.Data Data {
      get { return data_; }
      set {
        data_ = value;
      }
    }

    /// <summary>Field number for the "evaluation_type" field.</summary>
    public const int EvaluationTypeFieldNumber = 6;
    private global::Clarifai.Api.EvaluationType evaluationType_ = global::Clarifai.Api.EvaluationType.Classification;
    /// <summary>
    /// The type of evaluation to use
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.EvaluationType EvaluationType {
      get { return evaluationType_; }
      set {
        evaluationType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PostAnnotationSearchMetricsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PostAnnotationSearchMetricsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserAppId, other.UserAppId)) return false;
      if (Id != other.Id) return false;
      if (!object.Equals(GroundTruth, other.GroundTruth)) return false;
      if (!object.Equals(SearchToEval, other.SearchToEval)) return false;
      if (!object.Equals(Data, other.Data)) return false;
      if (EvaluationType != other.EvaluationType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (userAppId_ != null) hash ^= UserAppId.GetHashCode();
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (groundTruth_ != null) hash ^= GroundTruth.GetHashCode();
      if (searchToEval_ != null) hash ^= SearchToEval.GetHashCode();
      if (data_ != null) hash ^= Data.GetHashCode();
      if (EvaluationType != global::Clarifai.Api.EvaluationType.Classification) hash ^= EvaluationType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (userAppId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserAppId);
      }
      if (Id.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Id);
      }
      if (groundTruth_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(GroundTruth);
      }
      if (searchToEval_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(SearchToEval);
      }
      if (data_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Data);
      }
      if (EvaluationType != global::Clarifai.Api.EvaluationType.Classification) {
        output.WriteRawTag(48);
        output.WriteEnum((int) EvaluationType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (userAppId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserAppId);
      }
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (groundTruth_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GroundTruth);
      }
      if (searchToEval_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SearchToEval);
      }
      if (data_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Data);
      }
      if (EvaluationType != global::Clarifai.Api.EvaluationType.Classification) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) EvaluationType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PostAnnotationSearchMetricsRequest other) {
      if (other == null) {
        return;
      }
      if (other.userAppId_ != null) {
        if (userAppId_ == null) {
          UserAppId = new global::Clarifai.Api.UserAppIDSet();
        }
        UserAppId.MergeFrom(other.UserAppId);
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.groundTruth_ != null) {
        if (groundTruth_ == null) {
          GroundTruth = new global::Clarifai.Api.Search();
        }
        GroundTruth.MergeFrom(other.GroundTruth);
      }
      if (other.searchToEval_ != null) {
        if (searchToEval_ == null) {
          SearchToEval = new global::Clarifai.Api.Search();
        }
        SearchToEval.MergeFrom(other.SearchToEval);
      }
      if (other.data_ != null) {
        if (data_ == null) {
          Data = new global::Clarifai.Api.Data();
        }
        Data.MergeFrom(other.Data);
      }
      if (other.EvaluationType != global::Clarifai.Api.EvaluationType.Classification) {
        EvaluationType = other.EvaluationType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (userAppId_ == null) {
              UserAppId = new global::Clarifai.Api.UserAppIDSet();
            }
            input.ReadMessage(UserAppId);
            break;
          }
          case 18: {
            Id = input.ReadString();
            break;
          }
          case 26: {
            if (groundTruth_ == null) {
              GroundTruth = new global::Clarifai.Api.Search();
            }
            input.ReadMessage(GroundTruth);
            break;
          }
          case 34: {
            if (searchToEval_ == null) {
              SearchToEval = new global::Clarifai.Api.Search();
            }
            input.ReadMessage(SearchToEval);
            break;
          }
          case 42: {
            if (data_ == null) {
              Data = new global::Clarifai.Api.Data();
            }
            input.ReadMessage(Data);
            break;
          }
          case 48: {
            EvaluationType = (global::Clarifai.Api.EvaluationType) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetAnnotationSearchMetricsRequest : pb::IMessage<GetAnnotationSearchMetricsRequest> {
    private static readonly pb::MessageParser<GetAnnotationSearchMetricsRequest> _parser = new pb::MessageParser<GetAnnotationSearchMetricsRequest>(() => new GetAnnotationSearchMetricsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetAnnotationSearchMetricsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[123]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAnnotationSearchMetricsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAnnotationSearchMetricsRequest(GetAnnotationSearchMetricsRequest other) : this() {
      userAppId_ = other.userAppId_ != null ? other.userAppId_.Clone() : null;
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAnnotationSearchMetricsRequest Clone() {
      return new GetAnnotationSearchMetricsRequest(this);
    }

    /// <summary>Field number for the "user_app_id" field.</summary>
    public const int UserAppIdFieldNumber = 1;
    private global::Clarifai.Api.UserAppIDSet userAppId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.UserAppIDSet UserAppId {
      get { return userAppId_; }
      set {
        userAppId_ = value;
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 2;
    private string id_ = "";
    /// <summary>
    /// Unique custom facing id that identifies the eval to get
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetAnnotationSearchMetricsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetAnnotationSearchMetricsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserAppId, other.UserAppId)) return false;
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (userAppId_ != null) hash ^= UserAppId.GetHashCode();
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (userAppId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserAppId);
      }
      if (Id.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (userAppId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserAppId);
      }
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetAnnotationSearchMetricsRequest other) {
      if (other == null) {
        return;
      }
      if (other.userAppId_ != null) {
        if (userAppId_ == null) {
          UserAppId = new global::Clarifai.Api.UserAppIDSet();
        }
        UserAppId.MergeFrom(other.UserAppId);
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (userAppId_ == null) {
              UserAppId = new global::Clarifai.Api.UserAppIDSet();
            }
            input.ReadMessage(UserAppId);
            break;
          }
          case 18: {
            Id = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ListAnnotationSearchMetricsRequest : pb::IMessage<ListAnnotationSearchMetricsRequest> {
    private static readonly pb::MessageParser<ListAnnotationSearchMetricsRequest> _parser = new pb::MessageParser<ListAnnotationSearchMetricsRequest>(() => new ListAnnotationSearchMetricsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListAnnotationSearchMetricsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[124]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListAnnotationSearchMetricsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListAnnotationSearchMetricsRequest(ListAnnotationSearchMetricsRequest other) : this() {
      userAppId_ = other.userAppId_ != null ? other.userAppId_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListAnnotationSearchMetricsRequest Clone() {
      return new ListAnnotationSearchMetricsRequest(this);
    }

    /// <summary>Field number for the "user_app_id" field.</summary>
    public const int UserAppIdFieldNumber = 1;
    private global::Clarifai.Api.UserAppIDSet userAppId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.UserAppIDSet UserAppId {
      get { return userAppId_; }
      set {
        userAppId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListAnnotationSearchMetricsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListAnnotationSearchMetricsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserAppId, other.UserAppId)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (userAppId_ != null) hash ^= UserAppId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (userAppId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserAppId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (userAppId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserAppId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListAnnotationSearchMetricsRequest other) {
      if (other == null) {
        return;
      }
      if (other.userAppId_ != null) {
        if (userAppId_ == null) {
          UserAppId = new global::Clarifai.Api.UserAppIDSet();
        }
        UserAppId.MergeFrom(other.UserAppId);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (userAppId_ == null) {
              UserAppId = new global::Clarifai.Api.UserAppIDSet();
            }
            input.ReadMessage(UserAppId);
            break;
          }
        }
      }
    }

  }

  public sealed partial class MultiAnnotationSearchMetricsResponse : pb::IMessage<MultiAnnotationSearchMetricsResponse> {
    private static readonly pb::MessageParser<MultiAnnotationSearchMetricsResponse> _parser = new pb::MessageParser<MultiAnnotationSearchMetricsResponse>(() => new MultiAnnotationSearchMetricsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MultiAnnotationSearchMetricsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[125]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiAnnotationSearchMetricsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiAnnotationSearchMetricsResponse(MultiAnnotationSearchMetricsResponse other) : this() {
      status_ = other.status_ != null ? other.status_.Clone() : null;
      annotationSearchMetrics_ = other.annotationSearchMetrics_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiAnnotationSearchMetricsResponse Clone() {
      return new MultiAnnotationSearchMetricsResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::Clarifai.Api.Status.Status status_;
    /// <summary>
    /// Status of the request
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.Status.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "annotation_search_metrics" field.</summary>
    public const int AnnotationSearchMetricsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Clarifai.Api.AnnotationSearchMetrics> _repeated_annotationSearchMetrics_codec
        = pb::FieldCodec.ForMessage(18, global::Clarifai.Api.AnnotationSearchMetrics.Parser);
    private readonly pbc::RepeatedField<global::Clarifai.Api.AnnotationSearchMetrics> annotationSearchMetrics_ = new pbc::RepeatedField<global::Clarifai.Api.AnnotationSearchMetrics>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Clarifai.Api.AnnotationSearchMetrics> AnnotationSearchMetrics {
      get { return annotationSearchMetrics_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MultiAnnotationSearchMetricsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MultiAnnotationSearchMetricsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Status, other.Status)) return false;
      if(!annotationSearchMetrics_.Equals(other.annotationSearchMetrics_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (status_ != null) hash ^= Status.GetHashCode();
      hash ^= annotationSearchMetrics_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (status_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Status);
      }
      annotationSearchMetrics_.WriteTo(output, _repeated_annotationSearchMetrics_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      size += annotationSearchMetrics_.CalculateSize(_repeated_annotationSearchMetrics_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MultiAnnotationSearchMetricsResponse other) {
      if (other == null) {
        return;
      }
      if (other.status_ != null) {
        if (status_ == null) {
          Status = new global::Clarifai.Api.Status.Status();
        }
        Status.MergeFrom(other.Status);
      }
      annotationSearchMetrics_.Add(other.annotationSearchMetrics_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (status_ == null) {
              Status = new global::Clarifai.Api.Status.Status();
            }
            input.ReadMessage(Status);
            break;
          }
          case 18: {
            annotationSearchMetrics_.AddEntriesFrom(input, _repeated_annotationSearchMetrics_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PostValidatePasswordRequest : pb::IMessage<PostValidatePasswordRequest> {
    private static readonly pb::MessageParser<PostValidatePasswordRequest> _parser = new pb::MessageParser<PostValidatePasswordRequest>(() => new PostValidatePasswordRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PostValidatePasswordRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[126]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostValidatePasswordRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostValidatePasswordRequest(PostValidatePasswordRequest other) : this() {
      userAppId_ = other.userAppId_ != null ? other.userAppId_.Clone() : null;
      password_ = other.password_ != null ? other.password_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostValidatePasswordRequest Clone() {
      return new PostValidatePasswordRequest(this);
    }

    /// <summary>Field number for the "user_app_id" field.</summary>
    public const int UserAppIdFieldNumber = 1;
    private global::Clarifai.Api.UserAppIDSet userAppId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.UserAppIDSet UserAppId {
      get { return userAppId_; }
      set {
        userAppId_ = value;
      }
    }

    /// <summary>Field number for the "password" field.</summary>
    public const int PasswordFieldNumber = 2;
    private global::Clarifai.Api.Password password_;
    /// <summary>
    /// password to be validated
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.Password Password {
      get { return password_; }
      set {
        password_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PostValidatePasswordRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PostValidatePasswordRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserAppId, other.UserAppId)) return false;
      if (!object.Equals(Password, other.Password)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (userAppId_ != null) hash ^= UserAppId.GetHashCode();
      if (password_ != null) hash ^= Password.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (userAppId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserAppId);
      }
      if (password_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Password);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (userAppId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserAppId);
      }
      if (password_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Password);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PostValidatePasswordRequest other) {
      if (other == null) {
        return;
      }
      if (other.userAppId_ != null) {
        if (userAppId_ == null) {
          UserAppId = new global::Clarifai.Api.UserAppIDSet();
        }
        UserAppId.MergeFrom(other.UserAppId);
      }
      if (other.password_ != null) {
        if (password_ == null) {
          Password = new global::Clarifai.Api.Password();
        }
        Password.MergeFrom(other.Password);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (userAppId_ == null) {
              UserAppId = new global::Clarifai.Api.UserAppIDSet();
            }
            input.ReadMessage(UserAppId);
            break;
          }
          case 18: {
            if (password_ == null) {
              Password = new global::Clarifai.Api.Password();
            }
            input.ReadMessage(Password);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SinglePasswordValidationResponse : pb::IMessage<SinglePasswordValidationResponse> {
    private static readonly pb::MessageParser<SinglePasswordValidationResponse> _parser = new pb::MessageParser<SinglePasswordValidationResponse>(() => new SinglePasswordValidationResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SinglePasswordValidationResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[127]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SinglePasswordValidationResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SinglePasswordValidationResponse(SinglePasswordValidationResponse other) : this() {
      status_ = other.status_ != null ? other.status_.Clone() : null;
      passwordViolations_ = other.passwordViolations_ != null ? other.passwordViolations_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SinglePasswordValidationResponse Clone() {
      return new SinglePasswordValidationResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::Clarifai.Api.Status.Status status_;
    /// <summary>
    /// Standard clarifai status code
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.Status.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "password_violations" field.</summary>
    public const int PasswordViolationsFieldNumber = 2;
    private global::Clarifai.Api.PasswordViolations passwordViolations_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.PasswordViolations PasswordViolations {
      get { return passwordViolations_; }
      set {
        passwordViolations_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SinglePasswordValidationResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SinglePasswordValidationResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Status, other.Status)) return false;
      if (!object.Equals(PasswordViolations, other.PasswordViolations)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (status_ != null) hash ^= Status.GetHashCode();
      if (passwordViolations_ != null) hash ^= PasswordViolations.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (status_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Status);
      }
      if (passwordViolations_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(PasswordViolations);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      if (passwordViolations_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PasswordViolations);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SinglePasswordValidationResponse other) {
      if (other == null) {
        return;
      }
      if (other.status_ != null) {
        if (status_ == null) {
          Status = new global::Clarifai.Api.Status.Status();
        }
        Status.MergeFrom(other.Status);
      }
      if (other.passwordViolations_ != null) {
        if (passwordViolations_ == null) {
          PasswordViolations = new global::Clarifai.Api.PasswordViolations();
        }
        PasswordViolations.MergeFrom(other.PasswordViolations);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (status_ == null) {
              Status = new global::Clarifai.Api.Status.Status();
            }
            input.ReadMessage(Status);
            break;
          }
          case 18: {
            if (passwordViolations_ == null) {
              PasswordViolations = new global::Clarifai.Api.PasswordViolations();
            }
            input.ReadMessage(PasswordViolations);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /////////////////////////////////////////////////////////////////////////////////
  /// Requests / Responses from /proto/clarifai/api/workflow.proto
  /////////////////////////////////////////////////////////////////////////////////
  /// </summary>
  public sealed partial class GetWorkflowRequest : pb::IMessage<GetWorkflowRequest> {
    private static readonly pb::MessageParser<GetWorkflowRequest> _parser = new pb::MessageParser<GetWorkflowRequest>(() => new GetWorkflowRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetWorkflowRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[128]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetWorkflowRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetWorkflowRequest(GetWorkflowRequest other) : this() {
      userAppId_ = other.userAppId_ != null ? other.userAppId_.Clone() : null;
      workflowId_ = other.workflowId_;
      favorClarifaiWorkflows_ = other.favorClarifaiWorkflows_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetWorkflowRequest Clone() {
      return new GetWorkflowRequest(this);
    }

    /// <summary>Field number for the "user_app_id" field.</summary>
    public const int UserAppIdFieldNumber = 1;
    private global::Clarifai.Api.UserAppIDSet userAppId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.UserAppIDSet UserAppId {
      get { return userAppId_; }
      set {
        userAppId_ = value;
      }
    }

    /// <summary>Field number for the "workflow_id" field.</summary>
    public const int WorkflowIdFieldNumber = 2;
    private string workflowId_ = "";
    /// <summary>
    /// Workflow ID to retrieve
    /// If no ID is specified we return default workflow of the application
    /// If an ID is specified by default we first looks into Clarifai workflows for a Workflow ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string WorkflowId {
      get { return workflowId_; }
      set {
        workflowId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "favor_clarifai_workflows" field.</summary>
    public const int FavorClarifaiWorkflowsFieldNumber = 3;
    private bool favorClarifaiWorkflows_;
    /// <summary>
    /// Use this flag to look into clarifai published workflows first for a Workflow ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool FavorClarifaiWorkflows {
      get { return favorClarifaiWorkflows_; }
      set {
        favorClarifaiWorkflows_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetWorkflowRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetWorkflowRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserAppId, other.UserAppId)) return false;
      if (WorkflowId != other.WorkflowId) return false;
      if (FavorClarifaiWorkflows != other.FavorClarifaiWorkflows) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (userAppId_ != null) hash ^= UserAppId.GetHashCode();
      if (WorkflowId.Length != 0) hash ^= WorkflowId.GetHashCode();
      if (FavorClarifaiWorkflows != false) hash ^= FavorClarifaiWorkflows.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (userAppId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserAppId);
      }
      if (WorkflowId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(WorkflowId);
      }
      if (FavorClarifaiWorkflows != false) {
        output.WriteRawTag(24);
        output.WriteBool(FavorClarifaiWorkflows);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (userAppId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserAppId);
      }
      if (WorkflowId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(WorkflowId);
      }
      if (FavorClarifaiWorkflows != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetWorkflowRequest other) {
      if (other == null) {
        return;
      }
      if (other.userAppId_ != null) {
        if (userAppId_ == null) {
          UserAppId = new global::Clarifai.Api.UserAppIDSet();
        }
        UserAppId.MergeFrom(other.UserAppId);
      }
      if (other.WorkflowId.Length != 0) {
        WorkflowId = other.WorkflowId;
      }
      if (other.FavorClarifaiWorkflows != false) {
        FavorClarifaiWorkflows = other.FavorClarifaiWorkflows;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (userAppId_ == null) {
              UserAppId = new global::Clarifai.Api.UserAppIDSet();
            }
            input.ReadMessage(UserAppId);
            break;
          }
          case 18: {
            WorkflowId = input.ReadString();
            break;
          }
          case 24: {
            FavorClarifaiWorkflows = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ListWorkflowsRequest : pb::IMessage<ListWorkflowsRequest> {
    private static readonly pb::MessageParser<ListWorkflowsRequest> _parser = new pb::MessageParser<ListWorkflowsRequest>(() => new ListWorkflowsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListWorkflowsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[129]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListWorkflowsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListWorkflowsRequest(ListWorkflowsRequest other) : this() {
      userAppId_ = other.userAppId_ != null ? other.userAppId_.Clone() : null;
      page_ = other.page_;
      perPage_ = other.perPage_;
      sortAscending_ = other.sortAscending_;
      query_ = other.query_;
      id_ = other.id_;
      switch (other.SortByCase) {
        case SortByOneofCase.SortById:
          SortById = other.SortById;
          break;
        case SortByOneofCase.SortByModifiedAt:
          SortByModifiedAt = other.SortByModifiedAt;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListWorkflowsRequest Clone() {
      return new ListWorkflowsRequest(this);
    }

    /// <summary>Field number for the "user_app_id" field.</summary>
    public const int UserAppIdFieldNumber = 1;
    private global::Clarifai.Api.UserAppIDSet userAppId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.UserAppIDSet UserAppId {
      get { return userAppId_; }
      set {
        userAppId_ = value;
      }
    }

    /// <summary>Field number for the "page" field.</summary>
    public const int PageFieldNumber = 2;
    private uint page_;
    /// <summary>
    /// (optional URL parameter) The page number. Pagination is used to split the results into chunks.
    /// Defaults to 1.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Page {
      get { return page_; }
      set {
        page_ = value;
      }
    }

    /// <summary>Field number for the "per_page" field.</summary>
    public const int PerPageFieldNumber = 3;
    private uint perPage_;
    /// <summary>
    /// (optional URL parameter) The number of results that will be contained in each page. Defaults
    /// to 128.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint PerPage {
      get { return perPage_; }
      set {
        perPage_ = value;
      }
    }

    /// <summary>Field number for the "sort_ascending" field.</summary>
    public const int SortAscendingFieldNumber = 5;
    private bool sortAscending_;
    /// <summary>
    /// Sorting options:
    /// Whether to sort in ascending order. If false, will order in descending order. 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool SortAscending {
      get { return sortAscending_; }
      set {
        sortAscending_ = value;
      }
    }

    /// <summary>Field number for the "sort_by_id" field.</summary>
    public const int SortByIdFieldNumber = 6;
    /// <summary>
    /// Whether to order by the name
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool SortById {
      get { return sortByCase_ == SortByOneofCase.SortById ? (bool) sortBy_ : false; }
      set {
        sortBy_ = value;
        sortByCase_ = SortByOneofCase.SortById;
      }
    }

    /// <summary>Field number for the "sort_by_modified_at" field.</summary>
    public const int SortByModifiedAtFieldNumber = 7;
    /// <summary>
    /// Whether to order by the modified_at time.
    /// If neither sort option is set to true, will sort by modified_at.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool SortByModifiedAt {
      get { return sortByCase_ == SortByOneofCase.SortByModifiedAt ? (bool) sortBy_ : false; }
      set {
        sortBy_ = value;
        sortByCase_ = SortByOneofCase.SortByModifiedAt;
      }
    }

    /// <summary>Field number for the "query" field.</summary>
    public const int QueryFieldNumber = 8;
    private string query_ = "";
    /// <summary>
    /// Query various text fields that can contain the words in the query string.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Query {
      get { return query_; }
      set {
        query_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 4;
    private string id_ = "";
    /// <summary>
    /// Filter by the id of the workflow. This supports wilcard queries like "gen*" to match "general" as an example.
    /// Deprecated in favor of query
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    private object sortBy_;
    /// <summary>Enum of possible cases for the "sort_by" oneof.</summary>
    public enum SortByOneofCase {
      None = 0,
      SortById = 6,
      SortByModifiedAt = 7,
    }
    private SortByOneofCase sortByCase_ = SortByOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SortByOneofCase SortByCase {
      get { return sortByCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSortBy() {
      sortByCase_ = SortByOneofCase.None;
      sortBy_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListWorkflowsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListWorkflowsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserAppId, other.UserAppId)) return false;
      if (Page != other.Page) return false;
      if (PerPage != other.PerPage) return false;
      if (SortAscending != other.SortAscending) return false;
      if (SortById != other.SortById) return false;
      if (SortByModifiedAt != other.SortByModifiedAt) return false;
      if (Query != other.Query) return false;
      if (Id != other.Id) return false;
      if (SortByCase != other.SortByCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (userAppId_ != null) hash ^= UserAppId.GetHashCode();
      if (Page != 0) hash ^= Page.GetHashCode();
      if (PerPage != 0) hash ^= PerPage.GetHashCode();
      if (SortAscending != false) hash ^= SortAscending.GetHashCode();
      if (sortByCase_ == SortByOneofCase.SortById) hash ^= SortById.GetHashCode();
      if (sortByCase_ == SortByOneofCase.SortByModifiedAt) hash ^= SortByModifiedAt.GetHashCode();
      if (Query.Length != 0) hash ^= Query.GetHashCode();
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      hash ^= (int) sortByCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (userAppId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserAppId);
      }
      if (Page != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Page);
      }
      if (PerPage != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(PerPage);
      }
      if (Id.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Id);
      }
      if (SortAscending != false) {
        output.WriteRawTag(40);
        output.WriteBool(SortAscending);
      }
      if (sortByCase_ == SortByOneofCase.SortById) {
        output.WriteRawTag(48);
        output.WriteBool(SortById);
      }
      if (sortByCase_ == SortByOneofCase.SortByModifiedAt) {
        output.WriteRawTag(56);
        output.WriteBool(SortByModifiedAt);
      }
      if (Query.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Query);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (userAppId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserAppId);
      }
      if (Page != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Page);
      }
      if (PerPage != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PerPage);
      }
      if (SortAscending != false) {
        size += 1 + 1;
      }
      if (sortByCase_ == SortByOneofCase.SortById) {
        size += 1 + 1;
      }
      if (sortByCase_ == SortByOneofCase.SortByModifiedAt) {
        size += 1 + 1;
      }
      if (Query.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Query);
      }
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListWorkflowsRequest other) {
      if (other == null) {
        return;
      }
      if (other.userAppId_ != null) {
        if (userAppId_ == null) {
          UserAppId = new global::Clarifai.Api.UserAppIDSet();
        }
        UserAppId.MergeFrom(other.UserAppId);
      }
      if (other.Page != 0) {
        Page = other.Page;
      }
      if (other.PerPage != 0) {
        PerPage = other.PerPage;
      }
      if (other.SortAscending != false) {
        SortAscending = other.SortAscending;
      }
      if (other.Query.Length != 0) {
        Query = other.Query;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      switch (other.SortByCase) {
        case SortByOneofCase.SortById:
          SortById = other.SortById;
          break;
        case SortByOneofCase.SortByModifiedAt:
          SortByModifiedAt = other.SortByModifiedAt;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (userAppId_ == null) {
              UserAppId = new global::Clarifai.Api.UserAppIDSet();
            }
            input.ReadMessage(UserAppId);
            break;
          }
          case 16: {
            Page = input.ReadUInt32();
            break;
          }
          case 24: {
            PerPage = input.ReadUInt32();
            break;
          }
          case 34: {
            Id = input.ReadString();
            break;
          }
          case 40: {
            SortAscending = input.ReadBool();
            break;
          }
          case 48: {
            SortById = input.ReadBool();
            break;
          }
          case 56: {
            SortByModifiedAt = input.ReadBool();
            break;
          }
          case 66: {
            Query = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PostWorkflowsRequest : pb::IMessage<PostWorkflowsRequest> {
    private static readonly pb::MessageParser<PostWorkflowsRequest> _parser = new pb::MessageParser<PostWorkflowsRequest>(() => new PostWorkflowsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PostWorkflowsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[130]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostWorkflowsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostWorkflowsRequest(PostWorkflowsRequest other) : this() {
      userAppId_ = other.userAppId_ != null ? other.userAppId_.Clone() : null;
      workflows_ = other.workflows_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostWorkflowsRequest Clone() {
      return new PostWorkflowsRequest(this);
    }

    /// <summary>Field number for the "user_app_id" field.</summary>
    public const int UserAppIdFieldNumber = 1;
    private global::Clarifai.Api.UserAppIDSet userAppId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.UserAppIDSet UserAppId {
      get { return userAppId_; }
      set {
        userAppId_ = value;
      }
    }

    /// <summary>Field number for the "workflows" field.</summary>
    public const int WorkflowsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Clarifai.Api.Workflow> _repeated_workflows_codec
        = pb::FieldCodec.ForMessage(18, global::Clarifai.Api.Workflow.Parser);
    private readonly pbc::RepeatedField<global::Clarifai.Api.Workflow> workflows_ = new pbc::RepeatedField<global::Clarifai.Api.Workflow>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Clarifai.Api.Workflow> Workflows {
      get { return workflows_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PostWorkflowsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PostWorkflowsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserAppId, other.UserAppId)) return false;
      if(!workflows_.Equals(other.workflows_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (userAppId_ != null) hash ^= UserAppId.GetHashCode();
      hash ^= workflows_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (userAppId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserAppId);
      }
      workflows_.WriteTo(output, _repeated_workflows_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (userAppId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserAppId);
      }
      size += workflows_.CalculateSize(_repeated_workflows_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PostWorkflowsRequest other) {
      if (other == null) {
        return;
      }
      if (other.userAppId_ != null) {
        if (userAppId_ == null) {
          UserAppId = new global::Clarifai.Api.UserAppIDSet();
        }
        UserAppId.MergeFrom(other.UserAppId);
      }
      workflows_.Add(other.workflows_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (userAppId_ == null) {
              UserAppId = new global::Clarifai.Api.UserAppIDSet();
            }
            input.ReadMessage(UserAppId);
            break;
          }
          case 18: {
            workflows_.AddEntriesFrom(input, _repeated_workflows_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PatchWorkflowsRequest : pb::IMessage<PatchWorkflowsRequest> {
    private static readonly pb::MessageParser<PatchWorkflowsRequest> _parser = new pb::MessageParser<PatchWorkflowsRequest>(() => new PatchWorkflowsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PatchWorkflowsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[131]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PatchWorkflowsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PatchWorkflowsRequest(PatchWorkflowsRequest other) : this() {
      userAppId_ = other.userAppId_ != null ? other.userAppId_.Clone() : null;
      workflows_ = other.workflows_.Clone();
      action_ = other.action_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PatchWorkflowsRequest Clone() {
      return new PatchWorkflowsRequest(this);
    }

    /// <summary>Field number for the "user_app_id" field.</summary>
    public const int UserAppIdFieldNumber = 1;
    private global::Clarifai.Api.UserAppIDSet userAppId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.UserAppIDSet UserAppId {
      get { return userAppId_; }
      set {
        userAppId_ = value;
      }
    }

    /// <summary>Field number for the "workflows" field.</summary>
    public const int WorkflowsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Clarifai.Api.Workflow> _repeated_workflows_codec
        = pb::FieldCodec.ForMessage(18, global::Clarifai.Api.Workflow.Parser);
    private readonly pbc::RepeatedField<global::Clarifai.Api.Workflow> workflows_ = new pbc::RepeatedField<global::Clarifai.Api.Workflow>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Clarifai.Api.Workflow> Workflows {
      get { return workflows_; }
    }

    /// <summary>Field number for the "action" field.</summary>
    public const int ActionFieldNumber = 3;
    private string action_ = "";
    /// <summary>
    /// The action to perform on the patched objects
    /// For now actions 'merge', 'overwrite', and 'remove' are supported
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Action {
      get { return action_; }
      set {
        action_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PatchWorkflowsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PatchWorkflowsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserAppId, other.UserAppId)) return false;
      if(!workflows_.Equals(other.workflows_)) return false;
      if (Action != other.Action) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (userAppId_ != null) hash ^= UserAppId.GetHashCode();
      hash ^= workflows_.GetHashCode();
      if (Action.Length != 0) hash ^= Action.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (userAppId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserAppId);
      }
      workflows_.WriteTo(output, _repeated_workflows_codec);
      if (Action.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Action);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (userAppId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserAppId);
      }
      size += workflows_.CalculateSize(_repeated_workflows_codec);
      if (Action.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Action);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PatchWorkflowsRequest other) {
      if (other == null) {
        return;
      }
      if (other.userAppId_ != null) {
        if (userAppId_ == null) {
          UserAppId = new global::Clarifai.Api.UserAppIDSet();
        }
        UserAppId.MergeFrom(other.UserAppId);
      }
      workflows_.Add(other.workflows_);
      if (other.Action.Length != 0) {
        Action = other.Action;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (userAppId_ == null) {
              UserAppId = new global::Clarifai.Api.UserAppIDSet();
            }
            input.ReadMessage(UserAppId);
            break;
          }
          case 18: {
            workflows_.AddEntriesFrom(input, _repeated_workflows_codec);
            break;
          }
          case 26: {
            Action = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DeleteWorkflowRequest : pb::IMessage<DeleteWorkflowRequest> {
    private static readonly pb::MessageParser<DeleteWorkflowRequest> _parser = new pb::MessageParser<DeleteWorkflowRequest>(() => new DeleteWorkflowRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteWorkflowRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[132]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteWorkflowRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteWorkflowRequest(DeleteWorkflowRequest other) : this() {
      userAppId_ = other.userAppId_ != null ? other.userAppId_.Clone() : null;
      workflowId_ = other.workflowId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteWorkflowRequest Clone() {
      return new DeleteWorkflowRequest(this);
    }

    /// <summary>Field number for the "user_app_id" field.</summary>
    public const int UserAppIdFieldNumber = 1;
    private global::Clarifai.Api.UserAppIDSet userAppId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.UserAppIDSet UserAppId {
      get { return userAppId_; }
      set {
        userAppId_ = value;
      }
    }

    /// <summary>Field number for the "workflow_id" field.</summary>
    public const int WorkflowIdFieldNumber = 2;
    private string workflowId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string WorkflowId {
      get { return workflowId_; }
      set {
        workflowId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteWorkflowRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteWorkflowRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserAppId, other.UserAppId)) return false;
      if (WorkflowId != other.WorkflowId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (userAppId_ != null) hash ^= UserAppId.GetHashCode();
      if (WorkflowId.Length != 0) hash ^= WorkflowId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (userAppId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserAppId);
      }
      if (WorkflowId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(WorkflowId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (userAppId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserAppId);
      }
      if (WorkflowId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(WorkflowId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteWorkflowRequest other) {
      if (other == null) {
        return;
      }
      if (other.userAppId_ != null) {
        if (userAppId_ == null) {
          UserAppId = new global::Clarifai.Api.UserAppIDSet();
        }
        UserAppId.MergeFrom(other.UserAppId);
      }
      if (other.WorkflowId.Length != 0) {
        WorkflowId = other.WorkflowId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (userAppId_ == null) {
              UserAppId = new global::Clarifai.Api.UserAppIDSet();
            }
            input.ReadMessage(UserAppId);
            break;
          }
          case 18: {
            WorkflowId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Request to delete several things by the list of ids.
  /// </summary>
  public sealed partial class DeleteWorkflowsRequest : pb::IMessage<DeleteWorkflowsRequest> {
    private static readonly pb::MessageParser<DeleteWorkflowsRequest> _parser = new pb::MessageParser<DeleteWorkflowsRequest>(() => new DeleteWorkflowsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteWorkflowsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[133]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteWorkflowsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteWorkflowsRequest(DeleteWorkflowsRequest other) : this() {
      userAppId_ = other.userAppId_ != null ? other.userAppId_.Clone() : null;
      ids_ = other.ids_.Clone();
      deleteAll_ = other.deleteAll_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteWorkflowsRequest Clone() {
      return new DeleteWorkflowsRequest(this);
    }

    /// <summary>Field number for the "user_app_id" field.</summary>
    public const int UserAppIdFieldNumber = 1;
    private global::Clarifai.Api.UserAppIDSet userAppId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.UserAppIDSet UserAppId {
      get { return userAppId_; }
      set {
        userAppId_ = value;
      }
    }

    /// <summary>Field number for the "ids" field.</summary>
    public const int IdsFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_ids_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> ids_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Ids {
      get { return ids_; }
    }

    /// <summary>Field number for the "delete_all" field.</summary>
    public const int DeleteAllFieldNumber = 3;
    private bool deleteAll_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool DeleteAll {
      get { return deleteAll_; }
      set {
        deleteAll_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteWorkflowsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteWorkflowsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserAppId, other.UserAppId)) return false;
      if(!ids_.Equals(other.ids_)) return false;
      if (DeleteAll != other.DeleteAll) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (userAppId_ != null) hash ^= UserAppId.GetHashCode();
      hash ^= ids_.GetHashCode();
      if (DeleteAll != false) hash ^= DeleteAll.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (userAppId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserAppId);
      }
      ids_.WriteTo(output, _repeated_ids_codec);
      if (DeleteAll != false) {
        output.WriteRawTag(24);
        output.WriteBool(DeleteAll);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (userAppId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserAppId);
      }
      size += ids_.CalculateSize(_repeated_ids_codec);
      if (DeleteAll != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteWorkflowsRequest other) {
      if (other == null) {
        return;
      }
      if (other.userAppId_ != null) {
        if (userAppId_ == null) {
          UserAppId = new global::Clarifai.Api.UserAppIDSet();
        }
        UserAppId.MergeFrom(other.UserAppId);
      }
      ids_.Add(other.ids_);
      if (other.DeleteAll != false) {
        DeleteAll = other.DeleteAll;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (userAppId_ == null) {
              UserAppId = new global::Clarifai.Api.UserAppIDSet();
            }
            input.ReadMessage(UserAppId);
            break;
          }
          case 18: {
            ids_.AddEntriesFrom(input, _repeated_ids_codec);
            break;
          }
          case 24: {
            DeleteAll = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SingleWorkflowResponse : pb::IMessage<SingleWorkflowResponse> {
    private static readonly pb::MessageParser<SingleWorkflowResponse> _parser = new pb::MessageParser<SingleWorkflowResponse>(() => new SingleWorkflowResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SingleWorkflowResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[134]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SingleWorkflowResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SingleWorkflowResponse(SingleWorkflowResponse other) : this() {
      status_ = other.status_ != null ? other.status_.Clone() : null;
      workflow_ = other.workflow_ != null ? other.workflow_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SingleWorkflowResponse Clone() {
      return new SingleWorkflowResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::Clarifai.Api.Status.Status status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.Status.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "workflow" field.</summary>
    public const int WorkflowFieldNumber = 2;
    private global::Clarifai.Api.Workflow workflow_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.Workflow Workflow {
      get { return workflow_; }
      set {
        workflow_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SingleWorkflowResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SingleWorkflowResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Status, other.Status)) return false;
      if (!object.Equals(Workflow, other.Workflow)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (status_ != null) hash ^= Status.GetHashCode();
      if (workflow_ != null) hash ^= Workflow.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (status_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Status);
      }
      if (workflow_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Workflow);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      if (workflow_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Workflow);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SingleWorkflowResponse other) {
      if (other == null) {
        return;
      }
      if (other.status_ != null) {
        if (status_ == null) {
          Status = new global::Clarifai.Api.Status.Status();
        }
        Status.MergeFrom(other.Status);
      }
      if (other.workflow_ != null) {
        if (workflow_ == null) {
          Workflow = new global::Clarifai.Api.Workflow();
        }
        Workflow.MergeFrom(other.Workflow);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (status_ == null) {
              Status = new global::Clarifai.Api.Status.Status();
            }
            input.ReadMessage(Status);
            break;
          }
          case 18: {
            if (workflow_ == null) {
              Workflow = new global::Clarifai.Api.Workflow();
            }
            input.ReadMessage(Workflow);
            break;
          }
        }
      }
    }

  }

  public sealed partial class MultiWorkflowResponse : pb::IMessage<MultiWorkflowResponse> {
    private static readonly pb::MessageParser<MultiWorkflowResponse> _parser = new pb::MessageParser<MultiWorkflowResponse>(() => new MultiWorkflowResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MultiWorkflowResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[135]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiWorkflowResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiWorkflowResponse(MultiWorkflowResponse other) : this() {
      status_ = other.status_ != null ? other.status_.Clone() : null;
      workflows_ = other.workflows_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiWorkflowResponse Clone() {
      return new MultiWorkflowResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::Clarifai.Api.Status.Status status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.Status.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "workflows" field.</summary>
    public const int WorkflowsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Clarifai.Api.Workflow> _repeated_workflows_codec
        = pb::FieldCodec.ForMessage(18, global::Clarifai.Api.Workflow.Parser);
    private readonly pbc::RepeatedField<global::Clarifai.Api.Workflow> workflows_ = new pbc::RepeatedField<global::Clarifai.Api.Workflow>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Clarifai.Api.Workflow> Workflows {
      get { return workflows_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MultiWorkflowResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MultiWorkflowResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Status, other.Status)) return false;
      if(!workflows_.Equals(other.workflows_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (status_ != null) hash ^= Status.GetHashCode();
      hash ^= workflows_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (status_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Status);
      }
      workflows_.WriteTo(output, _repeated_workflows_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      size += workflows_.CalculateSize(_repeated_workflows_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MultiWorkflowResponse other) {
      if (other == null) {
        return;
      }
      if (other.status_ != null) {
        if (status_ == null) {
          Status = new global::Clarifai.Api.Status.Status();
        }
        Status.MergeFrom(other.Status);
      }
      workflows_.Add(other.workflows_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (status_ == null) {
              Status = new global::Clarifai.Api.Status.Status();
            }
            input.ReadMessage(Status);
            break;
          }
          case 18: {
            workflows_.AddEntriesFrom(input, _repeated_workflows_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PostWorkflowResultsRequest : pb::IMessage<PostWorkflowResultsRequest> {
    private static readonly pb::MessageParser<PostWorkflowResultsRequest> _parser = new pb::MessageParser<PostWorkflowResultsRequest>(() => new PostWorkflowResultsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PostWorkflowResultsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[136]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostWorkflowResultsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostWorkflowResultsRequest(PostWorkflowResultsRequest other) : this() {
      userAppId_ = other.userAppId_ != null ? other.userAppId_.Clone() : null;
      workflowId_ = other.workflowId_;
      inputs_ = other.inputs_.Clone();
      outputConfig_ = other.outputConfig_ != null ? other.outputConfig_.Clone() : null;
      favorClarifaiWorkflows_ = other.favorClarifaiWorkflows_;
      workflowState_ = other.workflowState_ != null ? other.workflowState_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostWorkflowResultsRequest Clone() {
      return new PostWorkflowResultsRequest(this);
    }

    /// <summary>Field number for the "user_app_id" field.</summary>
    public const int UserAppIdFieldNumber = 1;
    private global::Clarifai.Api.UserAppIDSet userAppId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.UserAppIDSet UserAppId {
      get { return userAppId_; }
      set {
        userAppId_ = value;
      }
    }

    /// <summary>Field number for the "workflow_id" field.</summary>
    public const int WorkflowIdFieldNumber = 2;
    private string workflowId_ = "";
    /// <summary>
    /// Workflow ID to retrieve
    /// If no ID is specified we return default workflow of the application
    /// If an ID is specified by default we first looks into Clarifai workflows for a Workflow ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string WorkflowId {
      get { return workflowId_; }
      set {
        workflowId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "inputs" field.</summary>
    public const int InputsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Clarifai.Api.Input> _repeated_inputs_codec
        = pb::FieldCodec.ForMessage(26, global::Clarifai.Api.Input.Parser);
    private readonly pbc::RepeatedField<global::Clarifai.Api.Input> inputs_ = new pbc::RepeatedField<global::Clarifai.Api.Input>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Clarifai.Api.Input> Inputs {
      get { return inputs_; }
    }

    /// <summary>Field number for the "output_config" field.</summary>
    public const int OutputConfigFieldNumber = 4;
    private global::Clarifai.Api.OutputConfig outputConfig_;
    /// <summary>
    /// FIXME(zeiler): the request for post workflows is using an outputconfig object that is supposed
    /// to be within models. This is not consistent with setting this on the request for post model
    /// outputs where it is inside a model object. To make this consistent we would send in the
    /// workflow object so that each model can have it's own output config. If nobody is setting
    /// this OutputConfig it would probably be easier to just remove it for now to keep things simpler
    /// and then it's more consistent we just don't support the OutputConfig on workflows.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.OutputConfig OutputConfig {
      get { return outputConfig_; }
      set {
        outputConfig_ = value;
      }
    }

    /// <summary>Field number for the "favor_clarifai_workflows" field.</summary>
    public const int FavorClarifaiWorkflowsFieldNumber = 5;
    private bool favorClarifaiWorkflows_;
    /// <summary>
    /// Use this flag to look into clarifai published workflows first for a Workflow ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool FavorClarifaiWorkflows {
      get { return favorClarifaiWorkflows_; }
      set {
        favorClarifaiWorkflows_ = value;
      }
    }

    /// <summary>Field number for the "workflow_state" field.</summary>
    public const int WorkflowStateFieldNumber = 6;
    private global::Clarifai.Api.WorkflowState workflowState_;
    /// <summary>
    /// A workflow state to be maintained across PostWorkflowResults requests/responses.
    /// If it is not sent in the initial request with workflow_state.id = "init" then no
    /// state will be saved or returned in PostWorkflowResultsResponse.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.WorkflowState WorkflowState {
      get { return workflowState_; }
      set {
        workflowState_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PostWorkflowResultsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PostWorkflowResultsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserAppId, other.UserAppId)) return false;
      if (WorkflowId != other.WorkflowId) return false;
      if(!inputs_.Equals(other.inputs_)) return false;
      if (!object.Equals(OutputConfig, other.OutputConfig)) return false;
      if (FavorClarifaiWorkflows != other.FavorClarifaiWorkflows) return false;
      if (!object.Equals(WorkflowState, other.WorkflowState)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (userAppId_ != null) hash ^= UserAppId.GetHashCode();
      if (WorkflowId.Length != 0) hash ^= WorkflowId.GetHashCode();
      hash ^= inputs_.GetHashCode();
      if (outputConfig_ != null) hash ^= OutputConfig.GetHashCode();
      if (FavorClarifaiWorkflows != false) hash ^= FavorClarifaiWorkflows.GetHashCode();
      if (workflowState_ != null) hash ^= WorkflowState.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (userAppId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserAppId);
      }
      if (WorkflowId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(WorkflowId);
      }
      inputs_.WriteTo(output, _repeated_inputs_codec);
      if (outputConfig_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(OutputConfig);
      }
      if (FavorClarifaiWorkflows != false) {
        output.WriteRawTag(40);
        output.WriteBool(FavorClarifaiWorkflows);
      }
      if (workflowState_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(WorkflowState);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (userAppId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserAppId);
      }
      if (WorkflowId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(WorkflowId);
      }
      size += inputs_.CalculateSize(_repeated_inputs_codec);
      if (outputConfig_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OutputConfig);
      }
      if (FavorClarifaiWorkflows != false) {
        size += 1 + 1;
      }
      if (workflowState_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(WorkflowState);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PostWorkflowResultsRequest other) {
      if (other == null) {
        return;
      }
      if (other.userAppId_ != null) {
        if (userAppId_ == null) {
          UserAppId = new global::Clarifai.Api.UserAppIDSet();
        }
        UserAppId.MergeFrom(other.UserAppId);
      }
      if (other.WorkflowId.Length != 0) {
        WorkflowId = other.WorkflowId;
      }
      inputs_.Add(other.inputs_);
      if (other.outputConfig_ != null) {
        if (outputConfig_ == null) {
          OutputConfig = new global::Clarifai.Api.OutputConfig();
        }
        OutputConfig.MergeFrom(other.OutputConfig);
      }
      if (other.FavorClarifaiWorkflows != false) {
        FavorClarifaiWorkflows = other.FavorClarifaiWorkflows;
      }
      if (other.workflowState_ != null) {
        if (workflowState_ == null) {
          WorkflowState = new global::Clarifai.Api.WorkflowState();
        }
        WorkflowState.MergeFrom(other.WorkflowState);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (userAppId_ == null) {
              UserAppId = new global::Clarifai.Api.UserAppIDSet();
            }
            input.ReadMessage(UserAppId);
            break;
          }
          case 18: {
            WorkflowId = input.ReadString();
            break;
          }
          case 26: {
            inputs_.AddEntriesFrom(input, _repeated_inputs_codec);
            break;
          }
          case 34: {
            if (outputConfig_ == null) {
              OutputConfig = new global::Clarifai.Api.OutputConfig();
            }
            input.ReadMessage(OutputConfig);
            break;
          }
          case 40: {
            FavorClarifaiWorkflows = input.ReadBool();
            break;
          }
          case 50: {
            if (workflowState_ == null) {
              WorkflowState = new global::Clarifai.Api.WorkflowState();
            }
            input.ReadMessage(WorkflowState);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PostWorkflowResultsResponse : pb::IMessage<PostWorkflowResultsResponse> {
    private static readonly pb::MessageParser<PostWorkflowResultsResponse> _parser = new pb::MessageParser<PostWorkflowResultsResponse>(() => new PostWorkflowResultsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PostWorkflowResultsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[137]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostWorkflowResultsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostWorkflowResultsResponse(PostWorkflowResultsResponse other) : this() {
      status_ = other.status_ != null ? other.status_.Clone() : null;
      workflow_ = other.workflow_ != null ? other.workflow_.Clone() : null;
      results_ = other.results_.Clone();
      workflowState_ = other.workflowState_ != null ? other.workflowState_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostWorkflowResultsResponse Clone() {
      return new PostWorkflowResultsResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::Clarifai.Api.Status.Status status_;
    /// <summary>
    /// The status of the request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.Status.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "workflow" field.</summary>
    public const int WorkflowFieldNumber = 2;
    private global::Clarifai.Api.Workflow workflow_;
    /// <summary>
    /// The workflow that was used in predictions with PostWorkflowResults
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.Workflow Workflow {
      get { return workflow_; }
      set {
        workflow_ = value;
      }
    }

    /// <summary>Field number for the "results" field.</summary>
    public const int ResultsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Clarifai.Api.WorkflowResult> _repeated_results_codec
        = pb::FieldCodec.ForMessage(26, global::Clarifai.Api.WorkflowResult.Parser);
    private readonly pbc::RepeatedField<global::Clarifai.Api.WorkflowResult> results_ = new pbc::RepeatedField<global::Clarifai.Api.WorkflowResult>();
    /// <summary>
    /// The resulting predictions of all models in the workflow.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Clarifai.Api.WorkflowResult> Results {
      get { return results_; }
    }

    /// <summary>Field number for the "workflow_state" field.</summary>
    public const int WorkflowStateFieldNumber = 4;
    private global::Clarifai.Api.WorkflowState workflowState_;
    /// <summary>
    /// A workflow state to be maintained across PostWorkflowResults requests/responses.
    /// This WorkflowState should be passed in to subsequent PostWorkflowResults calls
    /// if you want to keep track of state across requests.
    /// If no WorkflowState was initialized in a request then no WorkflowState will be returned in this
    /// response.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.WorkflowState WorkflowState {
      get { return workflowState_; }
      set {
        workflowState_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PostWorkflowResultsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PostWorkflowResultsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Status, other.Status)) return false;
      if (!object.Equals(Workflow, other.Workflow)) return false;
      if(!results_.Equals(other.results_)) return false;
      if (!object.Equals(WorkflowState, other.WorkflowState)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (status_ != null) hash ^= Status.GetHashCode();
      if (workflow_ != null) hash ^= Workflow.GetHashCode();
      hash ^= results_.GetHashCode();
      if (workflowState_ != null) hash ^= WorkflowState.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (status_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Status);
      }
      if (workflow_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Workflow);
      }
      results_.WriteTo(output, _repeated_results_codec);
      if (workflowState_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(WorkflowState);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      if (workflow_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Workflow);
      }
      size += results_.CalculateSize(_repeated_results_codec);
      if (workflowState_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(WorkflowState);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PostWorkflowResultsResponse other) {
      if (other == null) {
        return;
      }
      if (other.status_ != null) {
        if (status_ == null) {
          Status = new global::Clarifai.Api.Status.Status();
        }
        Status.MergeFrom(other.Status);
      }
      if (other.workflow_ != null) {
        if (workflow_ == null) {
          Workflow = new global::Clarifai.Api.Workflow();
        }
        Workflow.MergeFrom(other.Workflow);
      }
      results_.Add(other.results_);
      if (other.workflowState_ != null) {
        if (workflowState_ == null) {
          WorkflowState = new global::Clarifai.Api.WorkflowState();
        }
        WorkflowState.MergeFrom(other.WorkflowState);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (status_ == null) {
              Status = new global::Clarifai.Api.Status.Status();
            }
            input.ReadMessage(Status);
            break;
          }
          case 18: {
            if (workflow_ == null) {
              Workflow = new global::Clarifai.Api.Workflow();
            }
            input.ReadMessage(Workflow);
            break;
          }
          case 26: {
            results_.AddEntriesFrom(input, _repeated_results_codec);
            break;
          }
          case 34: {
            if (workflowState_ == null) {
              WorkflowState = new global::Clarifai.Api.WorkflowState();
            }
            input.ReadMessage(WorkflowState);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PostWorkflowResultsSimilarityRequest : pb::IMessage<PostWorkflowResultsSimilarityRequest> {
    private static readonly pb::MessageParser<PostWorkflowResultsSimilarityRequest> _parser = new pb::MessageParser<PostWorkflowResultsSimilarityRequest>(() => new PostWorkflowResultsSimilarityRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PostWorkflowResultsSimilarityRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[138]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostWorkflowResultsSimilarityRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostWorkflowResultsSimilarityRequest(PostWorkflowResultsSimilarityRequest other) : this() {
      userAppId_ = other.userAppId_ != null ? other.userAppId_.Clone() : null;
      workflowId_ = other.workflowId_;
      modelVersionId_ = other.modelVersionId_;
      probeInputs_ = other.probeInputs_.Clone();
      poolInputs_ = other.poolInputs_.Clone();
      favorClarifaiWorkflows_ = other.favorClarifaiWorkflows_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostWorkflowResultsSimilarityRequest Clone() {
      return new PostWorkflowResultsSimilarityRequest(this);
    }

    /// <summary>Field number for the "user_app_id" field.</summary>
    public const int UserAppIdFieldNumber = 1;
    private global::Clarifai.Api.UserAppIDSet userAppId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.UserAppIDSet UserAppId {
      get { return userAppId_; }
      set {
        userAppId_ = value;
      }
    }

    /// <summary>Field number for the "workflow_id" field.</summary>
    public const int WorkflowIdFieldNumber = 2;
    private string workflowId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string WorkflowId {
      get { return workflowId_; }
      set {
        workflowId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "model_version_id" field.</summary>
    public const int ModelVersionIdFieldNumber = 3;
    private string modelVersionId_ = "";
    /// <summary>
    /// The specific model version whose outputs we are comparing
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ModelVersionId {
      get { return modelVersionId_; }
      set {
        modelVersionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "probe_inputs" field.</summary>
    public const int ProbeInputsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Clarifai.Api.Input> _repeated_probeInputs_codec
        = pb::FieldCodec.ForMessage(34, global::Clarifai.Api.Input.Parser);
    private readonly pbc::RepeatedField<global::Clarifai.Api.Input> probeInputs_ = new pbc::RepeatedField<global::Clarifai.Api.Input>();
    /// <summary>
    /// Each probe is compared against every pool input
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Clarifai.Api.Input> ProbeInputs {
      get { return probeInputs_; }
    }

    /// <summary>Field number for the "pool_inputs" field.</summary>
    public const int PoolInputsFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Clarifai.Api.Input> _repeated_poolInputs_codec
        = pb::FieldCodec.ForMessage(42, global::Clarifai.Api.Input.Parser);
    private readonly pbc::RepeatedField<global::Clarifai.Api.Input> poolInputs_ = new pbc::RepeatedField<global::Clarifai.Api.Input>();
    /// <summary>
    /// Each pool input is compared against ever probe input
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Clarifai.Api.Input> PoolInputs {
      get { return poolInputs_; }
    }

    /// <summary>Field number for the "favor_clarifai_workflows" field.</summary>
    public const int FavorClarifaiWorkflowsFieldNumber = 6;
    private bool favorClarifaiWorkflows_;
    /// <summary>
    /// Use this flag to look into clarifai published workflows first for a Workflow ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool FavorClarifaiWorkflows {
      get { return favorClarifaiWorkflows_; }
      set {
        favorClarifaiWorkflows_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PostWorkflowResultsSimilarityRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PostWorkflowResultsSimilarityRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserAppId, other.UserAppId)) return false;
      if (WorkflowId != other.WorkflowId) return false;
      if (ModelVersionId != other.ModelVersionId) return false;
      if(!probeInputs_.Equals(other.probeInputs_)) return false;
      if(!poolInputs_.Equals(other.poolInputs_)) return false;
      if (FavorClarifaiWorkflows != other.FavorClarifaiWorkflows) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (userAppId_ != null) hash ^= UserAppId.GetHashCode();
      if (WorkflowId.Length != 0) hash ^= WorkflowId.GetHashCode();
      if (ModelVersionId.Length != 0) hash ^= ModelVersionId.GetHashCode();
      hash ^= probeInputs_.GetHashCode();
      hash ^= poolInputs_.GetHashCode();
      if (FavorClarifaiWorkflows != false) hash ^= FavorClarifaiWorkflows.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (userAppId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserAppId);
      }
      if (WorkflowId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(WorkflowId);
      }
      if (ModelVersionId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ModelVersionId);
      }
      probeInputs_.WriteTo(output, _repeated_probeInputs_codec);
      poolInputs_.WriteTo(output, _repeated_poolInputs_codec);
      if (FavorClarifaiWorkflows != false) {
        output.WriteRawTag(48);
        output.WriteBool(FavorClarifaiWorkflows);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (userAppId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserAppId);
      }
      if (WorkflowId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(WorkflowId);
      }
      if (ModelVersionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModelVersionId);
      }
      size += probeInputs_.CalculateSize(_repeated_probeInputs_codec);
      size += poolInputs_.CalculateSize(_repeated_poolInputs_codec);
      if (FavorClarifaiWorkflows != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PostWorkflowResultsSimilarityRequest other) {
      if (other == null) {
        return;
      }
      if (other.userAppId_ != null) {
        if (userAppId_ == null) {
          UserAppId = new global::Clarifai.Api.UserAppIDSet();
        }
        UserAppId.MergeFrom(other.UserAppId);
      }
      if (other.WorkflowId.Length != 0) {
        WorkflowId = other.WorkflowId;
      }
      if (other.ModelVersionId.Length != 0) {
        ModelVersionId = other.ModelVersionId;
      }
      probeInputs_.Add(other.probeInputs_);
      poolInputs_.Add(other.poolInputs_);
      if (other.FavorClarifaiWorkflows != false) {
        FavorClarifaiWorkflows = other.FavorClarifaiWorkflows;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (userAppId_ == null) {
              UserAppId = new global::Clarifai.Api.UserAppIDSet();
            }
            input.ReadMessage(UserAppId);
            break;
          }
          case 18: {
            WorkflowId = input.ReadString();
            break;
          }
          case 26: {
            ModelVersionId = input.ReadString();
            break;
          }
          case 34: {
            probeInputs_.AddEntriesFrom(input, _repeated_probeInputs_codec);
            break;
          }
          case 42: {
            poolInputs_.AddEntriesFrom(input, _repeated_poolInputs_codec);
            break;
          }
          case 48: {
            FavorClarifaiWorkflows = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PostWorkflowResultsSimilarityResponse : pb::IMessage<PostWorkflowResultsSimilarityResponse> {
    private static readonly pb::MessageParser<PostWorkflowResultsSimilarityResponse> _parser = new pb::MessageParser<PostWorkflowResultsSimilarityResponse>(() => new PostWorkflowResultsSimilarityResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PostWorkflowResultsSimilarityResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[139]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostWorkflowResultsSimilarityResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostWorkflowResultsSimilarityResponse(PostWorkflowResultsSimilarityResponse other) : this() {
      status_ = other.status_ != null ? other.status_.Clone() : null;
      results_ = other.results_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostWorkflowResultsSimilarityResponse Clone() {
      return new PostWorkflowResultsSimilarityResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::Clarifai.Api.Status.Status status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.Status.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "results" field.</summary>
    public const int ResultsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Clarifai.Api.WorkflowResultsSimilarity> _repeated_results_codec
        = pb::FieldCodec.ForMessage(18, global::Clarifai.Api.WorkflowResultsSimilarity.Parser);
    private readonly pbc::RepeatedField<global::Clarifai.Api.WorkflowResultsSimilarity> results_ = new pbc::RepeatedField<global::Clarifai.Api.WorkflowResultsSimilarity>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Clarifai.Api.WorkflowResultsSimilarity> Results {
      get { return results_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PostWorkflowResultsSimilarityResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PostWorkflowResultsSimilarityResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Status, other.Status)) return false;
      if(!results_.Equals(other.results_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (status_ != null) hash ^= Status.GetHashCode();
      hash ^= results_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (status_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Status);
      }
      results_.WriteTo(output, _repeated_results_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      size += results_.CalculateSize(_repeated_results_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PostWorkflowResultsSimilarityResponse other) {
      if (other == null) {
        return;
      }
      if (other.status_ != null) {
        if (status_ == null) {
          Status = new global::Clarifai.Api.Status.Status();
        }
        Status.MergeFrom(other.Status);
      }
      results_.Add(other.results_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (status_ == null) {
              Status = new global::Clarifai.Api.Status.Status();
            }
            input.ReadMessage(Status);
            break;
          }
          case 18: {
            results_.AddEntriesFrom(input, _repeated_results_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///Request to start a app duplication process
  /// </summary>
  public sealed partial class PostAppDuplicationsRequest : pb::IMessage<PostAppDuplicationsRequest> {
    private static readonly pb::MessageParser<PostAppDuplicationsRequest> _parser = new pb::MessageParser<PostAppDuplicationsRequest>(() => new PostAppDuplicationsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PostAppDuplicationsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[140]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostAppDuplicationsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostAppDuplicationsRequest(PostAppDuplicationsRequest other) : this() {
      userAppId_ = other.userAppId_ != null ? other.userAppId_.Clone() : null;
      appDuplications_ = other.appDuplications_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostAppDuplicationsRequest Clone() {
      return new PostAppDuplicationsRequest(this);
    }

    /// <summary>Field number for the "user_app_id" field.</summary>
    public const int UserAppIdFieldNumber = 1;
    private global::Clarifai.Api.UserAppIDSet userAppId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.UserAppIDSet UserAppId {
      get { return userAppId_; }
      set {
        userAppId_ = value;
      }
    }

    /// <summary>Field number for the "app_duplications" field.</summary>
    public const int AppDuplicationsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Clarifai.Api.AppDuplication> _repeated_appDuplications_codec
        = pb::FieldCodec.ForMessage(18, global::Clarifai.Api.AppDuplication.Parser);
    private readonly pbc::RepeatedField<global::Clarifai.Api.AppDuplication> appDuplications_ = new pbc::RepeatedField<global::Clarifai.Api.AppDuplication>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Clarifai.Api.AppDuplication> AppDuplications {
      get { return appDuplications_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PostAppDuplicationsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PostAppDuplicationsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserAppId, other.UserAppId)) return false;
      if(!appDuplications_.Equals(other.appDuplications_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (userAppId_ != null) hash ^= UserAppId.GetHashCode();
      hash ^= appDuplications_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (userAppId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserAppId);
      }
      appDuplications_.WriteTo(output, _repeated_appDuplications_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (userAppId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserAppId);
      }
      size += appDuplications_.CalculateSize(_repeated_appDuplications_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PostAppDuplicationsRequest other) {
      if (other == null) {
        return;
      }
      if (other.userAppId_ != null) {
        if (userAppId_ == null) {
          UserAppId = new global::Clarifai.Api.UserAppIDSet();
        }
        UserAppId.MergeFrom(other.UserAppId);
      }
      appDuplications_.Add(other.appDuplications_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (userAppId_ == null) {
              UserAppId = new global::Clarifai.Api.UserAppIDSet();
            }
            input.ReadMessage(UserAppId);
            break;
          }
          case 18: {
            appDuplications_.AddEntriesFrom(input, _repeated_appDuplications_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///Request to check app duplication status
  /// </summary>
  public sealed partial class GetAppDuplicationRequest : pb::IMessage<GetAppDuplicationRequest> {
    private static readonly pb::MessageParser<GetAppDuplicationRequest> _parser = new pb::MessageParser<GetAppDuplicationRequest>(() => new GetAppDuplicationRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetAppDuplicationRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[141]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAppDuplicationRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAppDuplicationRequest(GetAppDuplicationRequest other) : this() {
      userAppId_ = other.userAppId_ != null ? other.userAppId_.Clone() : null;
      appDuplicationId_ = other.appDuplicationId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAppDuplicationRequest Clone() {
      return new GetAppDuplicationRequest(this);
    }

    /// <summary>Field number for the "user_app_id" field.</summary>
    public const int UserAppIdFieldNumber = 1;
    private global::Clarifai.Api.UserAppIDSet userAppId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.UserAppIDSet UserAppId {
      get { return userAppId_; }
      set {
        userAppId_ = value;
      }
    }

    /// <summary>Field number for the "app_duplication_id" field.</summary>
    public const int AppDuplicationIdFieldNumber = 2;
    private string appDuplicationId_ = "";
    /// <summary>
    ///The app duplication id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AppDuplicationId {
      get { return appDuplicationId_; }
      set {
        appDuplicationId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetAppDuplicationRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetAppDuplicationRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserAppId, other.UserAppId)) return false;
      if (AppDuplicationId != other.AppDuplicationId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (userAppId_ != null) hash ^= UserAppId.GetHashCode();
      if (AppDuplicationId.Length != 0) hash ^= AppDuplicationId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (userAppId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserAppId);
      }
      if (AppDuplicationId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(AppDuplicationId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (userAppId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserAppId);
      }
      if (AppDuplicationId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AppDuplicationId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetAppDuplicationRequest other) {
      if (other == null) {
        return;
      }
      if (other.userAppId_ != null) {
        if (userAppId_ == null) {
          UserAppId = new global::Clarifai.Api.UserAppIDSet();
        }
        UserAppId.MergeFrom(other.UserAppId);
      }
      if (other.AppDuplicationId.Length != 0) {
        AppDuplicationId = other.AppDuplicationId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (userAppId_ == null) {
              UserAppId = new global::Clarifai.Api.UserAppIDSet();
            }
            input.ReadMessage(UserAppId);
            break;
          }
          case 18: {
            AppDuplicationId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  ///Request to list all the app duplication that user triggered.
  /// </summary>
  public sealed partial class ListAppDuplicationsRequest : pb::IMessage<ListAppDuplicationsRequest> {
    private static readonly pb::MessageParser<ListAppDuplicationsRequest> _parser = new pb::MessageParser<ListAppDuplicationsRequest>(() => new ListAppDuplicationsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListAppDuplicationsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[142]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListAppDuplicationsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListAppDuplicationsRequest(ListAppDuplicationsRequest other) : this() {
      userAppId_ = other.userAppId_ != null ? other.userAppId_.Clone() : null;
      page_ = other.page_;
      perPage_ = other.perPage_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListAppDuplicationsRequest Clone() {
      return new ListAppDuplicationsRequest(this);
    }

    /// <summary>Field number for the "user_app_id" field.</summary>
    public const int UserAppIdFieldNumber = 1;
    private global::Clarifai.Api.UserAppIDSet userAppId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.UserAppIDSet UserAppId {
      get { return userAppId_; }
      set {
        userAppId_ = value;
      }
    }

    /// <summary>Field number for the "page" field.</summary>
    public const int PageFieldNumber = 2;
    private uint page_;
    /// <summary>
    /// (optional URL parameter) The page number. Pagination is used to split the results into chunks.
    /// Defaults to 1.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Page {
      get { return page_; }
      set {
        page_ = value;
      }
    }

    /// <summary>Field number for the "per_page" field.</summary>
    public const int PerPageFieldNumber = 3;
    private uint perPage_;
    /// <summary>
    /// (optional URL parameter) The number of results that will be contained in each page. Defaults
    /// to 128.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint PerPage {
      get { return perPage_; }
      set {
        perPage_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListAppDuplicationsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListAppDuplicationsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserAppId, other.UserAppId)) return false;
      if (Page != other.Page) return false;
      if (PerPage != other.PerPage) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (userAppId_ != null) hash ^= UserAppId.GetHashCode();
      if (Page != 0) hash ^= Page.GetHashCode();
      if (PerPage != 0) hash ^= PerPage.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (userAppId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserAppId);
      }
      if (Page != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Page);
      }
      if (PerPage != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(PerPage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (userAppId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserAppId);
      }
      if (Page != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Page);
      }
      if (PerPage != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PerPage);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListAppDuplicationsRequest other) {
      if (other == null) {
        return;
      }
      if (other.userAppId_ != null) {
        if (userAppId_ == null) {
          UserAppId = new global::Clarifai.Api.UserAppIDSet();
        }
        UserAppId.MergeFrom(other.UserAppId);
      }
      if (other.Page != 0) {
        Page = other.Page;
      }
      if (other.PerPage != 0) {
        PerPage = other.PerPage;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (userAppId_ == null) {
              UserAppId = new global::Clarifai.Api.UserAppIDSet();
            }
            input.ReadMessage(UserAppId);
            break;
          }
          case 16: {
            Page = input.ReadUInt32();
            break;
          }
          case 24: {
            PerPage = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class MultiAppDuplicationsResponse : pb::IMessage<MultiAppDuplicationsResponse> {
    private static readonly pb::MessageParser<MultiAppDuplicationsResponse> _parser = new pb::MessageParser<MultiAppDuplicationsResponse>(() => new MultiAppDuplicationsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MultiAppDuplicationsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[143]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiAppDuplicationsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiAppDuplicationsResponse(MultiAppDuplicationsResponse other) : this() {
      status_ = other.status_ != null ? other.status_.Clone() : null;
      appDuplications_ = other.appDuplications_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiAppDuplicationsResponse Clone() {
      return new MultiAppDuplicationsResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::Clarifai.Api.Status.Status status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.Status.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "app_duplications" field.</summary>
    public const int AppDuplicationsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Clarifai.Api.AppDuplication> _repeated_appDuplications_codec
        = pb::FieldCodec.ForMessage(18, global::Clarifai.Api.AppDuplication.Parser);
    private readonly pbc::RepeatedField<global::Clarifai.Api.AppDuplication> appDuplications_ = new pbc::RepeatedField<global::Clarifai.Api.AppDuplication>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Clarifai.Api.AppDuplication> AppDuplications {
      get { return appDuplications_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MultiAppDuplicationsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MultiAppDuplicationsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Status, other.Status)) return false;
      if(!appDuplications_.Equals(other.appDuplications_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (status_ != null) hash ^= Status.GetHashCode();
      hash ^= appDuplications_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (status_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Status);
      }
      appDuplications_.WriteTo(output, _repeated_appDuplications_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      size += appDuplications_.CalculateSize(_repeated_appDuplications_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MultiAppDuplicationsResponse other) {
      if (other == null) {
        return;
      }
      if (other.status_ != null) {
        if (status_ == null) {
          Status = new global::Clarifai.Api.Status.Status();
        }
        Status.MergeFrom(other.Status);
      }
      appDuplications_.Add(other.appDuplications_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (status_ == null) {
              Status = new global::Clarifai.Api.Status.Status();
            }
            input.ReadMessage(Status);
            break;
          }
          case 18: {
            appDuplications_.AddEntriesFrom(input, _repeated_appDuplications_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SingleAppDuplicationResponse : pb::IMessage<SingleAppDuplicationResponse> {
    private static readonly pb::MessageParser<SingleAppDuplicationResponse> _parser = new pb::MessageParser<SingleAppDuplicationResponse>(() => new SingleAppDuplicationResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SingleAppDuplicationResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[144]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SingleAppDuplicationResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SingleAppDuplicationResponse(SingleAppDuplicationResponse other) : this() {
      status_ = other.status_ != null ? other.status_.Clone() : null;
      appDuplication_ = other.appDuplication_ != null ? other.appDuplication_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SingleAppDuplicationResponse Clone() {
      return new SingleAppDuplicationResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::Clarifai.Api.Status.Status status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.Status.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "app_duplication" field.</summary>
    public const int AppDuplicationFieldNumber = 2;
    private global::Clarifai.Api.AppDuplication appDuplication_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.AppDuplication AppDuplication {
      get { return appDuplication_; }
      set {
        appDuplication_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SingleAppDuplicationResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SingleAppDuplicationResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Status, other.Status)) return false;
      if (!object.Equals(AppDuplication, other.AppDuplication)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (status_ != null) hash ^= Status.GetHashCode();
      if (appDuplication_ != null) hash ^= AppDuplication.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (status_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Status);
      }
      if (appDuplication_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(AppDuplication);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      if (appDuplication_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AppDuplication);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SingleAppDuplicationResponse other) {
      if (other == null) {
        return;
      }
      if (other.status_ != null) {
        if (status_ == null) {
          Status = new global::Clarifai.Api.Status.Status();
        }
        Status.MergeFrom(other.Status);
      }
      if (other.appDuplication_ != null) {
        if (appDuplication_ == null) {
          AppDuplication = new global::Clarifai.Api.AppDuplication();
        }
        AppDuplication.MergeFrom(other.AppDuplication);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (status_ == null) {
              Status = new global::Clarifai.Api.Status.Status();
            }
            input.ReadMessage(Status);
            break;
          }
          case 18: {
            if (appDuplication_ == null) {
              AppDuplication = new global::Clarifai.Api.AppDuplication();
            }
            input.ReadMessage(AppDuplication);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Request to create Tasks.
  /// </summary>
  public sealed partial class PostTasksRequest : pb::IMessage<PostTasksRequest> {
    private static readonly pb::MessageParser<PostTasksRequest> _parser = new pb::MessageParser<PostTasksRequest>(() => new PostTasksRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PostTasksRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[145]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostTasksRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostTasksRequest(PostTasksRequest other) : this() {
      userAppId_ = other.userAppId_ != null ? other.userAppId_.Clone() : null;
      tasks_ = other.tasks_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostTasksRequest Clone() {
      return new PostTasksRequest(this);
    }

    /// <summary>Field number for the "user_app_id" field.</summary>
    public const int UserAppIdFieldNumber = 1;
    private global::Clarifai.Api.UserAppIDSet userAppId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.UserAppIDSet UserAppId {
      get { return userAppId_; }
      set {
        userAppId_ = value;
      }
    }

    /// <summary>Field number for the "tasks" field.</summary>
    public const int TasksFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Clarifai.Api.Task> _repeated_tasks_codec
        = pb::FieldCodec.ForMessage(18, global::Clarifai.Api.Task.Parser);
    private readonly pbc::RepeatedField<global::Clarifai.Api.Task> tasks_ = new pbc::RepeatedField<global::Clarifai.Api.Task>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Clarifai.Api.Task> Tasks {
      get { return tasks_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PostTasksRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PostTasksRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserAppId, other.UserAppId)) return false;
      if(!tasks_.Equals(other.tasks_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (userAppId_ != null) hash ^= UserAppId.GetHashCode();
      hash ^= tasks_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (userAppId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserAppId);
      }
      tasks_.WriteTo(output, _repeated_tasks_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (userAppId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserAppId);
      }
      size += tasks_.CalculateSize(_repeated_tasks_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PostTasksRequest other) {
      if (other == null) {
        return;
      }
      if (other.userAppId_ != null) {
        if (userAppId_ == null) {
          UserAppId = new global::Clarifai.Api.UserAppIDSet();
        }
        UserAppId.MergeFrom(other.UserAppId);
      }
      tasks_.Add(other.tasks_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (userAppId_ == null) {
              UserAppId = new global::Clarifai.Api.UserAppIDSet();
            }
            input.ReadMessage(UserAppId);
            break;
          }
          case 18: {
            tasks_.AddEntriesFrom(input, _repeated_tasks_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Request to get one task.
  /// </summary>
  public sealed partial class GetTaskRequest : pb::IMessage<GetTaskRequest> {
    private static readonly pb::MessageParser<GetTaskRequest> _parser = new pb::MessageParser<GetTaskRequest>(() => new GetTaskRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetTaskRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[146]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTaskRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTaskRequest(GetTaskRequest other) : this() {
      userAppId_ = other.userAppId_ != null ? other.userAppId_.Clone() : null;
      taskId_ = other.taskId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTaskRequest Clone() {
      return new GetTaskRequest(this);
    }

    /// <summary>Field number for the "user_app_id" field.</summary>
    public const int UserAppIdFieldNumber = 1;
    private global::Clarifai.Api.UserAppIDSet userAppId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.UserAppIDSet UserAppId {
      get { return userAppId_; }
      set {
        userAppId_ = value;
      }
    }

    /// <summary>Field number for the "task_id" field.</summary>
    public const int TaskIdFieldNumber = 2;
    private string taskId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TaskId {
      get { return taskId_; }
      set {
        taskId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetTaskRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetTaskRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserAppId, other.UserAppId)) return false;
      if (TaskId != other.TaskId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (userAppId_ != null) hash ^= UserAppId.GetHashCode();
      if (TaskId.Length != 0) hash ^= TaskId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (userAppId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserAppId);
      }
      if (TaskId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(TaskId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (userAppId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserAppId);
      }
      if (TaskId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TaskId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetTaskRequest other) {
      if (other == null) {
        return;
      }
      if (other.userAppId_ != null) {
        if (userAppId_ == null) {
          UserAppId = new global::Clarifai.Api.UserAppIDSet();
        }
        UserAppId.MergeFrom(other.UserAppId);
      }
      if (other.TaskId.Length != 0) {
        TaskId = other.TaskId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (userAppId_ == null) {
              UserAppId = new global::Clarifai.Api.UserAppIDSet();
            }
            input.ReadMessage(UserAppId);
            break;
          }
          case 18: {
            TaskId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Request to list multiple tasks.
  /// </summary>
  public sealed partial class ListTasksRequest : pb::IMessage<ListTasksRequest> {
    private static readonly pb::MessageParser<ListTasksRequest> _parser = new pb::MessageParser<ListTasksRequest>(() => new ListTasksRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListTasksRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[147]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListTasksRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListTasksRequest(ListTasksRequest other) : this() {
      userAppId_ = other.userAppId_ != null ? other.userAppId_.Clone() : null;
      page_ = other.page_;
      perPage_ = other.perPage_;
      workerUserIds_ = other.workerUserIds_.Clone();
      reviewUserIds_ = other.reviewUserIds_.Clone();
      includingLabelOrderTasks_ = other.includingLabelOrderTasks_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListTasksRequest Clone() {
      return new ListTasksRequest(this);
    }

    /// <summary>Field number for the "user_app_id" field.</summary>
    public const int UserAppIdFieldNumber = 1;
    private global::Clarifai.Api.UserAppIDSet userAppId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.UserAppIDSet UserAppId {
      get { return userAppId_; }
      set {
        userAppId_ = value;
      }
    }

    /// <summary>Field number for the "page" field.</summary>
    public const int PageFieldNumber = 2;
    private uint page_;
    /// <summary>
    /// (optional URL parameter) The page number. Pagination is used to split the results into chunks.
    /// Defaults to 1.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Page {
      get { return page_; }
      set {
        page_ = value;
      }
    }

    /// <summary>Field number for the "per_page" field.</summary>
    public const int PerPageFieldNumber = 3;
    private uint perPage_;
    /// <summary>
    /// (optional URL parameter) The number of results that will be contained in each page. Defaults
    /// to 128.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint PerPage {
      get { return perPage_; }
      set {
        perPage_ = value;
      }
    }

    /// <summary>Field number for the "worker_user_ids" field.</summary>
    public const int WorkerUserIdsFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _repeated_workerUserIds_codec
        = pb::FieldCodec.ForString(34);
    private readonly pbc::RepeatedField<string> workerUserIds_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Get tasks that have ANY user from this list assigned as worker.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> WorkerUserIds {
      get { return workerUserIds_; }
    }

    /// <summary>Field number for the "review_user_ids" field.</summary>
    public const int ReviewUserIdsFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _repeated_reviewUserIds_codec
        = pb::FieldCodec.ForString(42);
    private readonly pbc::RepeatedField<string> reviewUserIds_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Get tasks that have ANY user from this list assigned as reviewer.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> ReviewUserIds {
      get { return reviewUserIds_; }
    }

    /// <summary>Field number for the "including_label_order_tasks" field.</summary>
    public const int IncludingLabelOrderTasksFieldNumber = 6;
    private bool includingLabelOrderTasks_;
    /// <summary>
    /// Get label order tasks as well
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IncludingLabelOrderTasks {
      get { return includingLabelOrderTasks_; }
      set {
        includingLabelOrderTasks_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListTasksRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListTasksRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserAppId, other.UserAppId)) return false;
      if (Page != other.Page) return false;
      if (PerPage != other.PerPage) return false;
      if(!workerUserIds_.Equals(other.workerUserIds_)) return false;
      if(!reviewUserIds_.Equals(other.reviewUserIds_)) return false;
      if (IncludingLabelOrderTasks != other.IncludingLabelOrderTasks) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (userAppId_ != null) hash ^= UserAppId.GetHashCode();
      if (Page != 0) hash ^= Page.GetHashCode();
      if (PerPage != 0) hash ^= PerPage.GetHashCode();
      hash ^= workerUserIds_.GetHashCode();
      hash ^= reviewUserIds_.GetHashCode();
      if (IncludingLabelOrderTasks != false) hash ^= IncludingLabelOrderTasks.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (userAppId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserAppId);
      }
      if (Page != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Page);
      }
      if (PerPage != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(PerPage);
      }
      workerUserIds_.WriteTo(output, _repeated_workerUserIds_codec);
      reviewUserIds_.WriteTo(output, _repeated_reviewUserIds_codec);
      if (IncludingLabelOrderTasks != false) {
        output.WriteRawTag(48);
        output.WriteBool(IncludingLabelOrderTasks);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (userAppId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserAppId);
      }
      if (Page != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Page);
      }
      if (PerPage != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PerPage);
      }
      size += workerUserIds_.CalculateSize(_repeated_workerUserIds_codec);
      size += reviewUserIds_.CalculateSize(_repeated_reviewUserIds_codec);
      if (IncludingLabelOrderTasks != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListTasksRequest other) {
      if (other == null) {
        return;
      }
      if (other.userAppId_ != null) {
        if (userAppId_ == null) {
          UserAppId = new global::Clarifai.Api.UserAppIDSet();
        }
        UserAppId.MergeFrom(other.UserAppId);
      }
      if (other.Page != 0) {
        Page = other.Page;
      }
      if (other.PerPage != 0) {
        PerPage = other.PerPage;
      }
      workerUserIds_.Add(other.workerUserIds_);
      reviewUserIds_.Add(other.reviewUserIds_);
      if (other.IncludingLabelOrderTasks != false) {
        IncludingLabelOrderTasks = other.IncludingLabelOrderTasks;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (userAppId_ == null) {
              UserAppId = new global::Clarifai.Api.UserAppIDSet();
            }
            input.ReadMessage(UserAppId);
            break;
          }
          case 16: {
            Page = input.ReadUInt32();
            break;
          }
          case 24: {
            PerPage = input.ReadUInt32();
            break;
          }
          case 34: {
            workerUserIds_.AddEntriesFrom(input, _repeated_workerUserIds_codec);
            break;
          }
          case 42: {
            reviewUserIds_.AddEntriesFrom(input, _repeated_reviewUserIds_codec);
            break;
          }
          case 48: {
            IncludingLabelOrderTasks = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Request to patch a list of tasks.
  /// </summary>
  public sealed partial class PatchTasksRequest : pb::IMessage<PatchTasksRequest> {
    private static readonly pb::MessageParser<PatchTasksRequest> _parser = new pb::MessageParser<PatchTasksRequest>(() => new PatchTasksRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PatchTasksRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[148]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PatchTasksRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PatchTasksRequest(PatchTasksRequest other) : this() {
      userAppId_ = other.userAppId_ != null ? other.userAppId_.Clone() : null;
      tasks_ = other.tasks_.Clone();
      action_ = other.action_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PatchTasksRequest Clone() {
      return new PatchTasksRequest(this);
    }

    /// <summary>Field number for the "user_app_id" field.</summary>
    public const int UserAppIdFieldNumber = 1;
    private global::Clarifai.Api.UserAppIDSet userAppId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.UserAppIDSet UserAppId {
      get { return userAppId_; }
      set {
        userAppId_ = value;
      }
    }

    /// <summary>Field number for the "tasks" field.</summary>
    public const int TasksFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Clarifai.Api.Task> _repeated_tasks_codec
        = pb::FieldCodec.ForMessage(18, global::Clarifai.Api.Task.Parser);
    private readonly pbc::RepeatedField<global::Clarifai.Api.Task> tasks_ = new pbc::RepeatedField<global::Clarifai.Api.Task>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Clarifai.Api.Task> Tasks {
      get { return tasks_; }
    }

    /// <summary>Field number for the "action" field.</summary>
    public const int ActionFieldNumber = 3;
    private string action_ = "";
    /// <summary>
    /// The action to perform on the patched objects
    /// For now actions 'merge', 'overwrite', and 'remove' are supported
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Action {
      get { return action_; }
      set {
        action_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PatchTasksRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PatchTasksRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserAppId, other.UserAppId)) return false;
      if(!tasks_.Equals(other.tasks_)) return false;
      if (Action != other.Action) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (userAppId_ != null) hash ^= UserAppId.GetHashCode();
      hash ^= tasks_.GetHashCode();
      if (Action.Length != 0) hash ^= Action.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (userAppId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserAppId);
      }
      tasks_.WriteTo(output, _repeated_tasks_codec);
      if (Action.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Action);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (userAppId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserAppId);
      }
      size += tasks_.CalculateSize(_repeated_tasks_codec);
      if (Action.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Action);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PatchTasksRequest other) {
      if (other == null) {
        return;
      }
      if (other.userAppId_ != null) {
        if (userAppId_ == null) {
          UserAppId = new global::Clarifai.Api.UserAppIDSet();
        }
        UserAppId.MergeFrom(other.UserAppId);
      }
      tasks_.Add(other.tasks_);
      if (other.Action.Length != 0) {
        Action = other.Action;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (userAppId_ == null) {
              UserAppId = new global::Clarifai.Api.UserAppIDSet();
            }
            input.ReadMessage(UserAppId);
            break;
          }
          case 18: {
            tasks_.AddEntriesFrom(input, _repeated_tasks_codec);
            break;
          }
          case 26: {
            Action = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Request to delete a list of tasks.
  /// </summary>
  public sealed partial class DeleteTasksRequest : pb::IMessage<DeleteTasksRequest> {
    private static readonly pb::MessageParser<DeleteTasksRequest> _parser = new pb::MessageParser<DeleteTasksRequest>(() => new DeleteTasksRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteTasksRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[149]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteTasksRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteTasksRequest(DeleteTasksRequest other) : this() {
      userAppId_ = other.userAppId_ != null ? other.userAppId_.Clone() : null;
      ids_ = other.ids_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteTasksRequest Clone() {
      return new DeleteTasksRequest(this);
    }

    /// <summary>Field number for the "user_app_id" field.</summary>
    public const int UserAppIdFieldNumber = 1;
    private global::Clarifai.Api.UserAppIDSet userAppId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.UserAppIDSet UserAppId {
      get { return userAppId_; }
      set {
        userAppId_ = value;
      }
    }

    /// <summary>Field number for the "ids" field.</summary>
    public const int IdsFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_ids_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> ids_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Ids {
      get { return ids_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteTasksRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteTasksRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserAppId, other.UserAppId)) return false;
      if(!ids_.Equals(other.ids_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (userAppId_ != null) hash ^= UserAppId.GetHashCode();
      hash ^= ids_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (userAppId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserAppId);
      }
      ids_.WriteTo(output, _repeated_ids_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (userAppId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserAppId);
      }
      size += ids_.CalculateSize(_repeated_ids_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteTasksRequest other) {
      if (other == null) {
        return;
      }
      if (other.userAppId_ != null) {
        if (userAppId_ == null) {
          UserAppId = new global::Clarifai.Api.UserAppIDSet();
        }
        UserAppId.MergeFrom(other.UserAppId);
      }
      ids_.Add(other.ids_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (userAppId_ == null) {
              UserAppId = new global::Clarifai.Api.UserAppIDSet();
            }
            input.ReadMessage(UserAppId);
            break;
          }
          case 18: {
            ids_.AddEntriesFrom(input, _repeated_ids_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Response with multiple Tasks.
  /// </summary>
  public sealed partial class MultiTaskResponse : pb::IMessage<MultiTaskResponse> {
    private static readonly pb::MessageParser<MultiTaskResponse> _parser = new pb::MessageParser<MultiTaskResponse>(() => new MultiTaskResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MultiTaskResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[150]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiTaskResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiTaskResponse(MultiTaskResponse other) : this() {
      status_ = other.status_ != null ? other.status_.Clone() : null;
      tasks_ = other.tasks_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiTaskResponse Clone() {
      return new MultiTaskResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::Clarifai.Api.Status.Status status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.Status.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "tasks" field.</summary>
    public const int TasksFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Clarifai.Api.Task> _repeated_tasks_codec
        = pb::FieldCodec.ForMessage(18, global::Clarifai.Api.Task.Parser);
    private readonly pbc::RepeatedField<global::Clarifai.Api.Task> tasks_ = new pbc::RepeatedField<global::Clarifai.Api.Task>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Clarifai.Api.Task> Tasks {
      get { return tasks_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MultiTaskResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MultiTaskResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Status, other.Status)) return false;
      if(!tasks_.Equals(other.tasks_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (status_ != null) hash ^= Status.GetHashCode();
      hash ^= tasks_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (status_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Status);
      }
      tasks_.WriteTo(output, _repeated_tasks_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      size += tasks_.CalculateSize(_repeated_tasks_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MultiTaskResponse other) {
      if (other == null) {
        return;
      }
      if (other.status_ != null) {
        if (status_ == null) {
          Status = new global::Clarifai.Api.Status.Status();
        }
        Status.MergeFrom(other.Status);
      }
      tasks_.Add(other.tasks_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (status_ == null) {
              Status = new global::Clarifai.Api.Status.Status();
            }
            input.ReadMessage(Status);
            break;
          }
          case 18: {
            tasks_.AddEntriesFrom(input, _repeated_tasks_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Response with a single Task.
  /// </summary>
  public sealed partial class SingleTaskResponse : pb::IMessage<SingleTaskResponse> {
    private static readonly pb::MessageParser<SingleTaskResponse> _parser = new pb::MessageParser<SingleTaskResponse>(() => new SingleTaskResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SingleTaskResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[151]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SingleTaskResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SingleTaskResponse(SingleTaskResponse other) : this() {
      status_ = other.status_ != null ? other.status_.Clone() : null;
      task_ = other.task_ != null ? other.task_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SingleTaskResponse Clone() {
      return new SingleTaskResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::Clarifai.Api.Status.Status status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.Status.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "task" field.</summary>
    public const int TaskFieldNumber = 2;
    private global::Clarifai.Api.Task task_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.Task Task {
      get { return task_; }
      set {
        task_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SingleTaskResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SingleTaskResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Status, other.Status)) return false;
      if (!object.Equals(Task, other.Task)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (status_ != null) hash ^= Status.GetHashCode();
      if (task_ != null) hash ^= Task.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (status_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Status);
      }
      if (task_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Task);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      if (task_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Task);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SingleTaskResponse other) {
      if (other == null) {
        return;
      }
      if (other.status_ != null) {
        if (status_ == null) {
          Status = new global::Clarifai.Api.Status.Status();
        }
        Status.MergeFrom(other.Status);
      }
      if (other.task_ != null) {
        if (task_ == null) {
          Task = new global::Clarifai.Api.Task();
        }
        Task.MergeFrom(other.Task);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (status_ == null) {
              Status = new global::Clarifai.Api.Status.Status();
            }
            input.ReadMessage(Status);
            break;
          }
          case 18: {
            if (task_ == null) {
              Task = new global::Clarifai.Api.Task();
            }
            input.ReadMessage(Task);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// GetTaskCountRequest can be used for fetching -
  /// 1. Task annotation count per user, per status
  /// 1. Task input (anchor annotations) count per user, per status
  /// </summary>
  public sealed partial class GetTaskCountRequest : pb::IMessage<GetTaskCountRequest> {
    private static readonly pb::MessageParser<GetTaskCountRequest> _parser = new pb::MessageParser<GetTaskCountRequest>(() => new GetTaskCountRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetTaskCountRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[152]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTaskCountRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTaskCountRequest(GetTaskCountRequest other) : this() {
      userAppId_ = other.userAppId_ != null ? other.userAppId_.Clone() : null;
      taskId_ = other.taskId_;
      userIds_ = other.userIds_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTaskCountRequest Clone() {
      return new GetTaskCountRequest(this);
    }

    /// <summary>Field number for the "user_app_id" field.</summary>
    public const int UserAppIdFieldNumber = 1;
    private global::Clarifai.Api.UserAppIDSet userAppId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.UserAppIDSet UserAppId {
      get { return userAppId_; }
      set {
        userAppId_ = value;
      }
    }

    /// <summary>Field number for the "task_id" field.</summary>
    public const int TaskIdFieldNumber = 2;
    private string taskId_ = "";
    /// <summary>
    /// task_id for which count per user per status is needed
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TaskId {
      get { return taskId_; }
      set {
        taskId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "user_ids" field.</summary>
    public const int UserIdsFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_userIds_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> userIds_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// for given task_id, user_ids to filter on (optional)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> UserIds {
      get { return userIds_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetTaskCountRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetTaskCountRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserAppId, other.UserAppId)) return false;
      if (TaskId != other.TaskId) return false;
      if(!userIds_.Equals(other.userIds_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (userAppId_ != null) hash ^= UserAppId.GetHashCode();
      if (TaskId.Length != 0) hash ^= TaskId.GetHashCode();
      hash ^= userIds_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (userAppId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserAppId);
      }
      if (TaskId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(TaskId);
      }
      userIds_.WriteTo(output, _repeated_userIds_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (userAppId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserAppId);
      }
      if (TaskId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TaskId);
      }
      size += userIds_.CalculateSize(_repeated_userIds_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetTaskCountRequest other) {
      if (other == null) {
        return;
      }
      if (other.userAppId_ != null) {
        if (userAppId_ == null) {
          UserAppId = new global::Clarifai.Api.UserAppIDSet();
        }
        UserAppId.MergeFrom(other.UserAppId);
      }
      if (other.TaskId.Length != 0) {
        TaskId = other.TaskId;
      }
      userIds_.Add(other.userIds_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (userAppId_ == null) {
              UserAppId = new global::Clarifai.Api.UserAppIDSet();
            }
            input.ReadMessage(UserAppId);
            break;
          }
          case 18: {
            TaskId = input.ReadString();
            break;
          }
          case 26: {
            userIds_.AddEntriesFrom(input, _repeated_userIds_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// SingleTaskCountResponse represent counts of annotations or inputs(anchor annotations) for labelers in given task
  /// </summary>
  public sealed partial class SingleTaskCountResponse : pb::IMessage<SingleTaskCountResponse> {
    private static readonly pb::MessageParser<SingleTaskCountResponse> _parser = new pb::MessageParser<SingleTaskCountResponse>(() => new SingleTaskCountResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SingleTaskCountResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[153]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SingleTaskCountResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SingleTaskCountResponse(SingleTaskCountResponse other) : this() {
      status_ = other.status_ != null ? other.status_.Clone() : null;
      appId_ = other.appId_;
      taskId_ = other.taskId_;
      counts_ = other.counts_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SingleTaskCountResponse Clone() {
      return new SingleTaskCountResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::Clarifai.Api.Status.Status status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.Status.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "app_id" field.</summary>
    public const int AppIdFieldNumber = 2;
    private string appId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AppId {
      get { return appId_; }
      set {
        appId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "task_id" field.</summary>
    public const int TaskIdFieldNumber = 3;
    private string taskId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TaskId {
      get { return taskId_; }
      set {
        taskId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "counts" field.</summary>
    public const int CountsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Clarifai.Api.TaskStatusCountPerUser> _repeated_counts_codec
        = pb::FieldCodec.ForMessage(34, global::Clarifai.Api.TaskStatusCountPerUser.Parser);
    private readonly pbc::RepeatedField<global::Clarifai.Api.TaskStatusCountPerUser> counts_ = new pbc::RepeatedField<global::Clarifai.Api.TaskStatusCountPerUser>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Clarifai.Api.TaskStatusCountPerUser> Counts {
      get { return counts_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SingleTaskCountResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SingleTaskCountResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Status, other.Status)) return false;
      if (AppId != other.AppId) return false;
      if (TaskId != other.TaskId) return false;
      if(!counts_.Equals(other.counts_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (status_ != null) hash ^= Status.GetHashCode();
      if (AppId.Length != 0) hash ^= AppId.GetHashCode();
      if (TaskId.Length != 0) hash ^= TaskId.GetHashCode();
      hash ^= counts_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (status_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Status);
      }
      if (AppId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(AppId);
      }
      if (TaskId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(TaskId);
      }
      counts_.WriteTo(output, _repeated_counts_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      if (AppId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AppId);
      }
      if (TaskId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TaskId);
      }
      size += counts_.CalculateSize(_repeated_counts_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SingleTaskCountResponse other) {
      if (other == null) {
        return;
      }
      if (other.status_ != null) {
        if (status_ == null) {
          Status = new global::Clarifai.Api.Status.Status();
        }
        Status.MergeFrom(other.Status);
      }
      if (other.AppId.Length != 0) {
        AppId = other.AppId;
      }
      if (other.TaskId.Length != 0) {
        TaskId = other.TaskId;
      }
      counts_.Add(other.counts_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (status_ == null) {
              Status = new global::Clarifai.Api.Status.Status();
            }
            input.ReadMessage(Status);
            break;
          }
          case 18: {
            AppId = input.ReadString();
            break;
          }
          case 26: {
            TaskId = input.ReadString();
            break;
          }
          case 34: {
            counts_.AddEntriesFrom(input, _repeated_counts_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Request to create Collectors.
  /// </summary>
  public sealed partial class PostCollectorsRequest : pb::IMessage<PostCollectorsRequest> {
    private static readonly pb::MessageParser<PostCollectorsRequest> _parser = new pb::MessageParser<PostCollectorsRequest>(() => new PostCollectorsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PostCollectorsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[154]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostCollectorsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostCollectorsRequest(PostCollectorsRequest other) : this() {
      userAppId_ = other.userAppId_ != null ? other.userAppId_.Clone() : null;
      collectors_ = other.collectors_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostCollectorsRequest Clone() {
      return new PostCollectorsRequest(this);
    }

    /// <summary>Field number for the "user_app_id" field.</summary>
    public const int UserAppIdFieldNumber = 1;
    private global::Clarifai.Api.UserAppIDSet userAppId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.UserAppIDSet UserAppId {
      get { return userAppId_; }
      set {
        userAppId_ = value;
      }
    }

    /// <summary>Field number for the "collectors" field.</summary>
    public const int CollectorsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Clarifai.Api.Collector> _repeated_collectors_codec
        = pb::FieldCodec.ForMessage(18, global::Clarifai.Api.Collector.Parser);
    private readonly pbc::RepeatedField<global::Clarifai.Api.Collector> collectors_ = new pbc::RepeatedField<global::Clarifai.Api.Collector>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Clarifai.Api.Collector> Collectors {
      get { return collectors_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PostCollectorsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PostCollectorsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserAppId, other.UserAppId)) return false;
      if(!collectors_.Equals(other.collectors_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (userAppId_ != null) hash ^= UserAppId.GetHashCode();
      hash ^= collectors_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (userAppId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserAppId);
      }
      collectors_.WriteTo(output, _repeated_collectors_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (userAppId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserAppId);
      }
      size += collectors_.CalculateSize(_repeated_collectors_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PostCollectorsRequest other) {
      if (other == null) {
        return;
      }
      if (other.userAppId_ != null) {
        if (userAppId_ == null) {
          UserAppId = new global::Clarifai.Api.UserAppIDSet();
        }
        UserAppId.MergeFrom(other.UserAppId);
      }
      collectors_.Add(other.collectors_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (userAppId_ == null) {
              UserAppId = new global::Clarifai.Api.UserAppIDSet();
            }
            input.ReadMessage(UserAppId);
            break;
          }
          case 18: {
            collectors_.AddEntriesFrom(input, _repeated_collectors_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PatchCollectorsRequest : pb::IMessage<PatchCollectorsRequest> {
    private static readonly pb::MessageParser<PatchCollectorsRequest> _parser = new pb::MessageParser<PatchCollectorsRequest>(() => new PatchCollectorsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PatchCollectorsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[155]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PatchCollectorsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PatchCollectorsRequest(PatchCollectorsRequest other) : this() {
      userAppId_ = other.userAppId_ != null ? other.userAppId_.Clone() : null;
      collectors_ = other.collectors_.Clone();
      action_ = other.action_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PatchCollectorsRequest Clone() {
      return new PatchCollectorsRequest(this);
    }

    /// <summary>Field number for the "user_app_id" field.</summary>
    public const int UserAppIdFieldNumber = 1;
    private global::Clarifai.Api.UserAppIDSet userAppId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.UserAppIDSet UserAppId {
      get { return userAppId_; }
      set {
        userAppId_ = value;
      }
    }

    /// <summary>Field number for the "collectors" field.</summary>
    public const int CollectorsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Clarifai.Api.Collector> _repeated_collectors_codec
        = pb::FieldCodec.ForMessage(18, global::Clarifai.Api.Collector.Parser);
    private readonly pbc::RepeatedField<global::Clarifai.Api.Collector> collectors_ = new pbc::RepeatedField<global::Clarifai.Api.Collector>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Clarifai.Api.Collector> Collectors {
      get { return collectors_; }
    }

    /// <summary>Field number for the "action" field.</summary>
    public const int ActionFieldNumber = 3;
    private string action_ = "";
    /// <summary>
    /// The action to perform on the patched objects
    /// For now actions 'merge', 'overwrite', and 'remove' are supported
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Action {
      get { return action_; }
      set {
        action_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PatchCollectorsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PatchCollectorsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserAppId, other.UserAppId)) return false;
      if(!collectors_.Equals(other.collectors_)) return false;
      if (Action != other.Action) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (userAppId_ != null) hash ^= UserAppId.GetHashCode();
      hash ^= collectors_.GetHashCode();
      if (Action.Length != 0) hash ^= Action.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (userAppId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserAppId);
      }
      collectors_.WriteTo(output, _repeated_collectors_codec);
      if (Action.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Action);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (userAppId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserAppId);
      }
      size += collectors_.CalculateSize(_repeated_collectors_codec);
      if (Action.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Action);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PatchCollectorsRequest other) {
      if (other == null) {
        return;
      }
      if (other.userAppId_ != null) {
        if (userAppId_ == null) {
          UserAppId = new global::Clarifai.Api.UserAppIDSet();
        }
        UserAppId.MergeFrom(other.UserAppId);
      }
      collectors_.Add(other.collectors_);
      if (other.Action.Length != 0) {
        Action = other.Action;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (userAppId_ == null) {
              UserAppId = new global::Clarifai.Api.UserAppIDSet();
            }
            input.ReadMessage(UserAppId);
            break;
          }
          case 18: {
            collectors_.AddEntriesFrom(input, _repeated_collectors_codec);
            break;
          }
          case 26: {
            Action = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Request to delete several things by the list of ids.
  /// </summary>
  public sealed partial class DeleteCollectorsRequest : pb::IMessage<DeleteCollectorsRequest> {
    private static readonly pb::MessageParser<DeleteCollectorsRequest> _parser = new pb::MessageParser<DeleteCollectorsRequest>(() => new DeleteCollectorsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteCollectorsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[156]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteCollectorsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteCollectorsRequest(DeleteCollectorsRequest other) : this() {
      userAppId_ = other.userAppId_ != null ? other.userAppId_.Clone() : null;
      ids_ = other.ids_.Clone();
      deleteAll_ = other.deleteAll_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteCollectorsRequest Clone() {
      return new DeleteCollectorsRequest(this);
    }

    /// <summary>Field number for the "user_app_id" field.</summary>
    public const int UserAppIdFieldNumber = 1;
    private global::Clarifai.Api.UserAppIDSet userAppId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.UserAppIDSet UserAppId {
      get { return userAppId_; }
      set {
        userAppId_ = value;
      }
    }

    /// <summary>Field number for the "ids" field.</summary>
    public const int IdsFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_ids_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> ids_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Ids {
      get { return ids_; }
    }

    /// <summary>Field number for the "delete_all" field.</summary>
    public const int DeleteAllFieldNumber = 3;
    private bool deleteAll_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool DeleteAll {
      get { return deleteAll_; }
      set {
        deleteAll_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteCollectorsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteCollectorsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserAppId, other.UserAppId)) return false;
      if(!ids_.Equals(other.ids_)) return false;
      if (DeleteAll != other.DeleteAll) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (userAppId_ != null) hash ^= UserAppId.GetHashCode();
      hash ^= ids_.GetHashCode();
      if (DeleteAll != false) hash ^= DeleteAll.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (userAppId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserAppId);
      }
      ids_.WriteTo(output, _repeated_ids_codec);
      if (DeleteAll != false) {
        output.WriteRawTag(24);
        output.WriteBool(DeleteAll);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (userAppId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserAppId);
      }
      size += ids_.CalculateSize(_repeated_ids_codec);
      if (DeleteAll != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteCollectorsRequest other) {
      if (other == null) {
        return;
      }
      if (other.userAppId_ != null) {
        if (userAppId_ == null) {
          UserAppId = new global::Clarifai.Api.UserAppIDSet();
        }
        UserAppId.MergeFrom(other.UserAppId);
      }
      ids_.Add(other.ids_);
      if (other.DeleteAll != false) {
        DeleteAll = other.DeleteAll;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (userAppId_ == null) {
              UserAppId = new global::Clarifai.Api.UserAppIDSet();
            }
            input.ReadMessage(UserAppId);
            break;
          }
          case 18: {
            ids_.AddEntriesFrom(input, _repeated_ids_codec);
            break;
          }
          case 24: {
            DeleteAll = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Request to GET a single Collector.
  /// </summary>
  public sealed partial class GetCollectorRequest : pb::IMessage<GetCollectorRequest> {
    private static readonly pb::MessageParser<GetCollectorRequest> _parser = new pb::MessageParser<GetCollectorRequest>(() => new GetCollectorRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetCollectorRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[157]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetCollectorRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetCollectorRequest(GetCollectorRequest other) : this() {
      userAppId_ = other.userAppId_ != null ? other.userAppId_.Clone() : null;
      collectorId_ = other.collectorId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetCollectorRequest Clone() {
      return new GetCollectorRequest(this);
    }

    /// <summary>Field number for the "user_app_id" field.</summary>
    public const int UserAppIdFieldNumber = 1;
    private global::Clarifai.Api.UserAppIDSet userAppId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.UserAppIDSet UserAppId {
      get { return userAppId_; }
      set {
        userAppId_ = value;
      }
    }

    /// <summary>Field number for the "collector_id" field.</summary>
    public const int CollectorIdFieldNumber = 2;
    private string collectorId_ = "";
    /// <summary>
    ///The collecgtor id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CollectorId {
      get { return collectorId_; }
      set {
        collectorId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetCollectorRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetCollectorRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserAppId, other.UserAppId)) return false;
      if (CollectorId != other.CollectorId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (userAppId_ != null) hash ^= UserAppId.GetHashCode();
      if (CollectorId.Length != 0) hash ^= CollectorId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (userAppId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserAppId);
      }
      if (CollectorId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(CollectorId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (userAppId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserAppId);
      }
      if (CollectorId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CollectorId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetCollectorRequest other) {
      if (other == null) {
        return;
      }
      if (other.userAppId_ != null) {
        if (userAppId_ == null) {
          UserAppId = new global::Clarifai.Api.UserAppIDSet();
        }
        UserAppId.MergeFrom(other.UserAppId);
      }
      if (other.CollectorId.Length != 0) {
        CollectorId = other.CollectorId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (userAppId_ == null) {
              UserAppId = new global::Clarifai.Api.UserAppIDSet();
            }
            input.ReadMessage(UserAppId);
            break;
          }
          case 18: {
            CollectorId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Request to GET all the Collectors.
  /// </summary>
  public sealed partial class ListCollectorsRequest : pb::IMessage<ListCollectorsRequest> {
    private static readonly pb::MessageParser<ListCollectorsRequest> _parser = new pb::MessageParser<ListCollectorsRequest>(() => new ListCollectorsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListCollectorsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[158]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListCollectorsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListCollectorsRequest(ListCollectorsRequest other) : this() {
      userAppId_ = other.userAppId_ != null ? other.userAppId_.Clone() : null;
      page_ = other.page_;
      perPage_ = other.perPage_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListCollectorsRequest Clone() {
      return new ListCollectorsRequest(this);
    }

    /// <summary>Field number for the "user_app_id" field.</summary>
    public const int UserAppIdFieldNumber = 1;
    private global::Clarifai.Api.UserAppIDSet userAppId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.UserAppIDSet UserAppId {
      get { return userAppId_; }
      set {
        userAppId_ = value;
      }
    }

    /// <summary>Field number for the "page" field.</summary>
    public const int PageFieldNumber = 2;
    private uint page_;
    /// <summary>
    /// (optional URL parameter) The page number. Pagination is used to split the results into chunks.
    /// Defaults to 1.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Page {
      get { return page_; }
      set {
        page_ = value;
      }
    }

    /// <summary>Field number for the "per_page" field.</summary>
    public const int PerPageFieldNumber = 3;
    private uint perPage_;
    /// <summary>
    /// (optional URL parameter) The number of results that will be contained in each page. Defaults
    /// to 128.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint PerPage {
      get { return perPage_; }
      set {
        perPage_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListCollectorsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListCollectorsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserAppId, other.UserAppId)) return false;
      if (Page != other.Page) return false;
      if (PerPage != other.PerPage) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (userAppId_ != null) hash ^= UserAppId.GetHashCode();
      if (Page != 0) hash ^= Page.GetHashCode();
      if (PerPage != 0) hash ^= PerPage.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (userAppId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserAppId);
      }
      if (Page != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Page);
      }
      if (PerPage != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(PerPage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (userAppId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserAppId);
      }
      if (Page != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Page);
      }
      if (PerPage != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(PerPage);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListCollectorsRequest other) {
      if (other == null) {
        return;
      }
      if (other.userAppId_ != null) {
        if (userAppId_ == null) {
          UserAppId = new global::Clarifai.Api.UserAppIDSet();
        }
        UserAppId.MergeFrom(other.UserAppId);
      }
      if (other.Page != 0) {
        Page = other.Page;
      }
      if (other.PerPage != 0) {
        PerPage = other.PerPage;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (userAppId_ == null) {
              UserAppId = new global::Clarifai.Api.UserAppIDSet();
            }
            input.ReadMessage(UserAppId);
            break;
          }
          case 16: {
            Page = input.ReadUInt32();
            break;
          }
          case 24: {
            PerPage = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Response with multiple Collectors.
  /// </summary>
  public sealed partial class MultiCollectorResponse : pb::IMessage<MultiCollectorResponse> {
    private static readonly pb::MessageParser<MultiCollectorResponse> _parser = new pb::MessageParser<MultiCollectorResponse>(() => new MultiCollectorResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MultiCollectorResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[159]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiCollectorResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiCollectorResponse(MultiCollectorResponse other) : this() {
      status_ = other.status_ != null ? other.status_.Clone() : null;
      collectors_ = other.collectors_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiCollectorResponse Clone() {
      return new MultiCollectorResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::Clarifai.Api.Status.Status status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.Status.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "collectors" field.</summary>
    public const int CollectorsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Clarifai.Api.Collector> _repeated_collectors_codec
        = pb::FieldCodec.ForMessage(18, global::Clarifai.Api.Collector.Parser);
    private readonly pbc::RepeatedField<global::Clarifai.Api.Collector> collectors_ = new pbc::RepeatedField<global::Clarifai.Api.Collector>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Clarifai.Api.Collector> Collectors {
      get { return collectors_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MultiCollectorResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MultiCollectorResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Status, other.Status)) return false;
      if(!collectors_.Equals(other.collectors_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (status_ != null) hash ^= Status.GetHashCode();
      hash ^= collectors_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (status_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Status);
      }
      collectors_.WriteTo(output, _repeated_collectors_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      size += collectors_.CalculateSize(_repeated_collectors_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MultiCollectorResponse other) {
      if (other == null) {
        return;
      }
      if (other.status_ != null) {
        if (status_ == null) {
          Status = new global::Clarifai.Api.Status.Status();
        }
        Status.MergeFrom(other.Status);
      }
      collectors_.Add(other.collectors_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (status_ == null) {
              Status = new global::Clarifai.Api.Status.Status();
            }
            input.ReadMessage(Status);
            break;
          }
          case 18: {
            collectors_.AddEntriesFrom(input, _repeated_collectors_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Response with a single Collector.
  /// </summary>
  public sealed partial class SingleCollectorResponse : pb::IMessage<SingleCollectorResponse> {
    private static readonly pb::MessageParser<SingleCollectorResponse> _parser = new pb::MessageParser<SingleCollectorResponse>(() => new SingleCollectorResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SingleCollectorResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[160]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SingleCollectorResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SingleCollectorResponse(SingleCollectorResponse other) : this() {
      status_ = other.status_ != null ? other.status_.Clone() : null;
      collector_ = other.collector_ != null ? other.collector_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SingleCollectorResponse Clone() {
      return new SingleCollectorResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::Clarifai.Api.Status.Status status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.Status.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "collector" field.</summary>
    public const int CollectorFieldNumber = 2;
    private global::Clarifai.Api.Collector collector_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.Collector Collector {
      get { return collector_; }
      set {
        collector_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SingleCollectorResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SingleCollectorResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Status, other.Status)) return false;
      if (!object.Equals(Collector, other.Collector)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (status_ != null) hash ^= Status.GetHashCode();
      if (collector_ != null) hash ^= Collector.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (status_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Status);
      }
      if (collector_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Collector);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      if (collector_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Collector);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SingleCollectorResponse other) {
      if (other == null) {
        return;
      }
      if (other.status_ != null) {
        if (status_ == null) {
          Status = new global::Clarifai.Api.Status.Status();
        }
        Status.MergeFrom(other.Status);
      }
      if (other.collector_ != null) {
        if (collector_ == null) {
          Collector = new global::Clarifai.Api.Collector();
        }
        Collector.MergeFrom(other.Collector);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (status_ == null) {
              Status = new global::Clarifai.Api.Status.Status();
            }
            input.ReadMessage(Status);
            break;
          }
          case 18: {
            if (collector_ == null) {
              Collector = new global::Clarifai.Api.Collector();
            }
            input.ReadMessage(Collector);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /////////////////////////////////////////////////////////////////////////////////
  /// Stats Collection Endpoints.
  /////////////////////////////////////////////////////////////////////////////////
  /// </summary>
  public sealed partial class PostStatValuesRequest : pb::IMessage<PostStatValuesRequest> {
    private static readonly pb::MessageParser<PostStatValuesRequest> _parser = new pb::MessageParser<PostStatValuesRequest>(() => new PostStatValuesRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PostStatValuesRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[161]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostStatValuesRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostStatValuesRequest(PostStatValuesRequest other) : this() {
      userAppId_ = other.userAppId_ != null ? other.userAppId_.Clone() : null;
      statValues_ = other.statValues_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostStatValuesRequest Clone() {
      return new PostStatValuesRequest(this);
    }

    /// <summary>Field number for the "user_app_id" field.</summary>
    public const int UserAppIdFieldNumber = 1;
    private global::Clarifai.Api.UserAppIDSet userAppId_;
    /// <summary>
    /// The user and app information for the request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.UserAppIDSet UserAppId {
      get { return userAppId_; }
      set {
        userAppId_ = value;
      }
    }

    /// <summary>Field number for the "stat_values" field.</summary>
    public const int StatValuesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Clarifai.Api.StatValue> _repeated_statValues_codec
        = pb::FieldCodec.ForMessage(18, global::Clarifai.Api.StatValue.Parser);
    private readonly pbc::RepeatedField<global::Clarifai.Api.StatValue> statValues_ = new pbc::RepeatedField<global::Clarifai.Api.StatValue>();
    /// <summary>
    /// The stats to post, can post more than one at a time.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Clarifai.Api.StatValue> StatValues {
      get { return statValues_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PostStatValuesRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PostStatValuesRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserAppId, other.UserAppId)) return false;
      if(!statValues_.Equals(other.statValues_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (userAppId_ != null) hash ^= UserAppId.GetHashCode();
      hash ^= statValues_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (userAppId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserAppId);
      }
      statValues_.WriteTo(output, _repeated_statValues_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (userAppId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserAppId);
      }
      size += statValues_.CalculateSize(_repeated_statValues_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PostStatValuesRequest other) {
      if (other == null) {
        return;
      }
      if (other.userAppId_ != null) {
        if (userAppId_ == null) {
          UserAppId = new global::Clarifai.Api.UserAppIDSet();
        }
        UserAppId.MergeFrom(other.UserAppId);
      }
      statValues_.Add(other.statValues_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (userAppId_ == null) {
              UserAppId = new global::Clarifai.Api.UserAppIDSet();
            }
            input.ReadMessage(UserAppId);
            break;
          }
          case 18: {
            statValues_.AddEntriesFrom(input, _repeated_statValues_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class MultiStatValueResponse : pb::IMessage<MultiStatValueResponse> {
    private static readonly pb::MessageParser<MultiStatValueResponse> _parser = new pb::MessageParser<MultiStatValueResponse>(() => new MultiStatValueResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MultiStatValueResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[162]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiStatValueResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiStatValueResponse(MultiStatValueResponse other) : this() {
      status_ = other.status_ != null ? other.status_.Clone() : null;
      statValues_ = other.statValues_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiStatValueResponse Clone() {
      return new MultiStatValueResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::Clarifai.Api.Status.Status status_;
    /// <summary>
    /// The response status.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.Status.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "stat_values" field.</summary>
    public const int StatValuesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Clarifai.Api.StatValue> _repeated_statValues_codec
        = pb::FieldCodec.ForMessage(18, global::Clarifai.Api.StatValue.Parser);
    private readonly pbc::RepeatedField<global::Clarifai.Api.StatValue> statValues_ = new pbc::RepeatedField<global::Clarifai.Api.StatValue>();
    /// <summary>
    /// The returned stats values.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Clarifai.Api.StatValue> StatValues {
      get { return statValues_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MultiStatValueResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MultiStatValueResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Status, other.Status)) return false;
      if(!statValues_.Equals(other.statValues_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (status_ != null) hash ^= Status.GetHashCode();
      hash ^= statValues_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (status_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Status);
      }
      statValues_.WriteTo(output, _repeated_statValues_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      size += statValues_.CalculateSize(_repeated_statValues_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MultiStatValueResponse other) {
      if (other == null) {
        return;
      }
      if (other.status_ != null) {
        if (status_ == null) {
          Status = new global::Clarifai.Api.Status.Status();
        }
        Status.MergeFrom(other.Status);
      }
      statValues_.Add(other.statValues_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (status_ == null) {
              Status = new global::Clarifai.Api.Status.Status();
            }
            input.ReadMessage(Status);
            break;
          }
          case 18: {
            statValues_.AddEntriesFrom(input, _repeated_statValues_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PostStatValuesAggregateRequest : pb::IMessage<PostStatValuesAggregateRequest> {
    private static readonly pb::MessageParser<PostStatValuesAggregateRequest> _parser = new pb::MessageParser<PostStatValuesAggregateRequest>(() => new PostStatValuesAggregateRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PostStatValuesAggregateRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[163]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostStatValuesAggregateRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostStatValuesAggregateRequest(PostStatValuesAggregateRequest other) : this() {
      userAppId_ = other.userAppId_ != null ? other.userAppId_.Clone() : null;
      statValueAggregateQueries_ = other.statValueAggregateQueries_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostStatValuesAggregateRequest Clone() {
      return new PostStatValuesAggregateRequest(this);
    }

    /// <summary>Field number for the "user_app_id" field.</summary>
    public const int UserAppIdFieldNumber = 1;
    private global::Clarifai.Api.UserAppIDSet userAppId_;
    /// <summary>
    /// Ids present in the url of the request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.UserAppIDSet UserAppId {
      get { return userAppId_; }
      set {
        userAppId_ = value;
      }
    }

    /// <summary>Field number for the "stat_value_aggregate_queries" field.</summary>
    public const int StatValueAggregateQueriesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Clarifai.Api.StatValueAggregateQuery> _repeated_statValueAggregateQueries_codec
        = pb::FieldCodec.ForMessage(18, global::Clarifai.Api.StatValueAggregateQuery.Parser);
    private readonly pbc::RepeatedField<global::Clarifai.Api.StatValueAggregateQuery> statValueAggregateQueries_ = new pbc::RepeatedField<global::Clarifai.Api.StatValueAggregateQuery>();
    /// <summary>
    /// Query to retrieve aggregate values.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Clarifai.Api.StatValueAggregateQuery> StatValueAggregateQueries {
      get { return statValueAggregateQueries_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PostStatValuesAggregateRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PostStatValuesAggregateRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserAppId, other.UserAppId)) return false;
      if(!statValueAggregateQueries_.Equals(other.statValueAggregateQueries_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (userAppId_ != null) hash ^= UserAppId.GetHashCode();
      hash ^= statValueAggregateQueries_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (userAppId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserAppId);
      }
      statValueAggregateQueries_.WriteTo(output, _repeated_statValueAggregateQueries_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (userAppId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserAppId);
      }
      size += statValueAggregateQueries_.CalculateSize(_repeated_statValueAggregateQueries_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PostStatValuesAggregateRequest other) {
      if (other == null) {
        return;
      }
      if (other.userAppId_ != null) {
        if (userAppId_ == null) {
          UserAppId = new global::Clarifai.Api.UserAppIDSet();
        }
        UserAppId.MergeFrom(other.UserAppId);
      }
      statValueAggregateQueries_.Add(other.statValueAggregateQueries_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (userAppId_ == null) {
              UserAppId = new global::Clarifai.Api.UserAppIDSet();
            }
            input.ReadMessage(UserAppId);
            break;
          }
          case 18: {
            statValueAggregateQueries_.AddEntriesFrom(input, _repeated_statValueAggregateQueries_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class MultiStatValueAggregateResponse : pb::IMessage<MultiStatValueAggregateResponse> {
    private static readonly pb::MessageParser<MultiStatValueAggregateResponse> _parser = new pb::MessageParser<MultiStatValueAggregateResponse>(() => new MultiStatValueAggregateResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MultiStatValueAggregateResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Clarifai.Api.ServiceReflection.Descriptor.MessageTypes[164]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiStatValueAggregateResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiStatValueAggregateResponse(MultiStatValueAggregateResponse other) : this() {
      status_ = other.status_ != null ? other.status_.Clone() : null;
      statValueAggregateResults_ = other.statValueAggregateResults_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiStatValueAggregateResponse Clone() {
      return new MultiStatValueAggregateResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::Clarifai.Api.Status.Status status_;
    /// <summary>
    /// The response status.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Clarifai.Api.Status.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "stat_value_aggregate_results" field.</summary>
    public const int StatValueAggregateResultsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Clarifai.Api.StatValueAggregateResult> _repeated_statValueAggregateResults_codec
        = pb::FieldCodec.ForMessage(18, global::Clarifai.Api.StatValueAggregateResult.Parser);
    private readonly pbc::RepeatedField<global::Clarifai.Api.StatValueAggregateResult> statValueAggregateResults_ = new pbc::RepeatedField<global::Clarifai.Api.StatValueAggregateResult>();
    /// <summary>
    /// The aggregate results for each query passedin.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Clarifai.Api.StatValueAggregateResult> StatValueAggregateResults {
      get { return statValueAggregateResults_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MultiStatValueAggregateResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MultiStatValueAggregateResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Status, other.Status)) return false;
      if(!statValueAggregateResults_.Equals(other.statValueAggregateResults_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (status_ != null) hash ^= Status.GetHashCode();
      hash ^= statValueAggregateResults_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (status_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Status);
      }
      statValueAggregateResults_.WriteTo(output, _repeated_statValueAggregateResults_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      size += statValueAggregateResults_.CalculateSize(_repeated_statValueAggregateResults_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MultiStatValueAggregateResponse other) {
      if (other == null) {
        return;
      }
      if (other.status_ != null) {
        if (status_ == null) {
          Status = new global::Clarifai.Api.Status.Status();
        }
        Status.MergeFrom(other.Status);
      }
      statValueAggregateResults_.Add(other.statValueAggregateResults_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (status_ == null) {
              Status = new global::Clarifai.Api.Status.Status();
            }
            input.ReadMessage(Status);
            break;
          }
          case 18: {
            statValueAggregateResults_.AddEntriesFrom(input, _repeated_statValueAggregateResults_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
